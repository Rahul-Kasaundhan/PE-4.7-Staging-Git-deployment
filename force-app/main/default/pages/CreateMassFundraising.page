<!--
    Project: PE 3.5
    Start: 09-June-2016
    Module: Create Mass Fundraisings
    Class use:CreateMassFundraisingCls
    Common Class use: CommonUtilityGlobal
    Standard Controller: Fundraising__c
    Call From: Home, Fund , Company/Property
    Developer: Sumitab
    Last Modified: Sumitab (10-Oct-2016)
    -->


    <apex:page showHeader="true" standardController="Fundraising__c" recordSetVar="hellos" standardStylesheets="false" sidebar="true" applyHtmlTag="true" applyBodyTag="false" docType="html-5.0"  extensions="CreateMassFundraisingCls,CommonUtilityGlobal" title="Create Fundraisings">    
        <apex:form id="errorID">
            <apex:pageMessages id="pgMsg"> </apex:pageMessages>
            <apex:outputPanel id="op">
                
            </apex:outputPanel>
        </apex:form>
        <html>  
        <script src="/soap/ajax/38.0/connection.js" type="text/javascript"></script>
        <!--link rel='stylesheet' href="{!URLFOR($Resource.PE_35, 'PE_3.5/css/aw.css')}" title='calendar'/>   
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jquerydatepicker, 'calendar.css')}" media="screen" /-->
        <script src="/soap/ajax/19.0/apex.js" type="text/javascript"></script>  
        <script src="../../soap/ajax/38.0/connection.js" type="text/javascript"></script>
        <script src="../../soap/ajax/19.0/apex.js" type="text/javascript"></script>
         <!--Script and Css for Autocomplete Functionality-->   
            <script src="{!URLFOR($Resource.PE_35,'PE_3.5/AutoComp/jquery-2.2.4.js')}" type="text/javascript"></script>
            <script src="{!URLFOR($Resource.PE_35,'PE_3.5/AutoComp/jquery-ui.js')}" type="text/javascript"></script>
            <link rel="stylesheet" href="{!URLFOR($Resource.PE_35,'PE_3.5/AutoComp/jquery-ui.css')}" type="text/css" />     
         <!--Script and Css for Autocomplete Functionality--> 

        <head>
            
            <style>
            
                .table .td2 .slds-checkbox { position: relative;top: 15px;}
                /*.table .td2 .slds-form-element__control { position: relative;top: 5px; }*/
                .table .td1 {vertical-align: middle !important;}
                 .lookupIconOn, .lookupIcon{
                <!--background-image: url("/resource/1457007465000/PE_35/PE_3.5/images/lookup.png");-->
                background-image : url({!URLFOR($Resource.PE_35, '/PE_3.5/images/search_16.png')});
                font-size:12px !important;
                position:relative; 
                padding: 8px;
                right: 48px;
                background-position: left top;
                background-repeat: no-repeat !important;        
                background-color: #ffffff;
                }
                 .ui-autocomplete {
                max-height: 250px;
                overflow-y: auto;        
                /* prevent horizontal scrollbar */
                overflow-x: hidden;
                width: 27% !important;
                }
                .ui-state-focus {
                    background:#3399ff  !important;
                    border: none !important;
                    border-radius: 0 0 0 0 !important;
                    color: white ! important;
                }
                .lookupInput img {
                    vertical-align: middle;
                    margin-right: -2.75em;
                    background-repeat: no-repeat;
                    
                }
                .aw-item-text {
                    left: 5px !important;
                    height: 23px !important;
                    top: 15px !important;
                }
                
                .autoCompleteBox, .autoCompleteBoxScrolling {
                    padding: 0 0;
                    display: block;
                    position: absolute;
                    border: 1px solid #7d7d84;
                    background: #fff;
                    width: 27em;
                    z-index: 90;
                    display: none !important;
                }
                .ui-menu .ui-menu-item a {
                    padding: 0 0 0 0 !important;
                    font-family: "Salesforce Sans",Arial,sans-serif;
                    font-size: 14px !important;
                    color : #5c7d87 ;   
                }
                .slds-select_container input{
                    font-size: 14px !important;
                    }
                a.inputTextClass{
                    <!--border: 2px solid #c23934;-->
                    border:none !important;
                    
                    background-color: white !important;
                    color: #16325c !important;      
                    border-radius: 4px !important;
                    width: 50%;
                    transition: border 0.1s linear, background-color 0.1s linear;       
                    padding: 0 0 0 12px !important;
                    line-height: 34px !important;
                    min-height: calc(34px + 2px);
                }
                .inputTextClass{
                    border: 2px solid #c23934;
                    padding-right: 32px !important;
                    background-color: white !important;
                    color: #16325c !important;
                    border: 1px solid #d8dde6 !important;
                    border-radius: 4px !important;
                    width: 100%;
                    transition: border 0.1s linear, background-color 0.1s linear;       
                    padding: 0 16px 0 12px !important;
                    line-height: 34px !important;
                    min-height: calc(34px + 2px);
                }
                .ui-widget .ui-menu-item {
                    font-family: Verdana,Arial,sans-serif !important;
                    font-size:13px !important; 
                   }
                .ui-widget{
                    font-family: inherit !important;
                    font-size:14px !important;
                }
                
                  .largeimge img {max-width:none !important;}
            </style>
            
          <title>Create Fundraising</title>
          <apex:stylesheet value="{!URLFOR($Resource.SLDS100, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
          <!--apex:includeScript value="{!URLFOR($Resource.PEhtml, 'PEhtml/IP1.5/js/calendar.js')}"/-->
          <apex:includeScript value="{!URLFOR($Resource.jquerydatepicker,'calendar.js')}" />
          <link rel='stylesheet' href="{!URLFOR($Resource.PE_35, 'PE_3.5/css/aw.css')}" title='calendar'/>   
          <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jquerydatepicker, 'calendar.css')}" media="screen" />
          
          <!--link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jquerydatepicker, 'calendar.css')}" media="screen" /--> 
          <link href = "{!URLFOR($Resource.PE_35, 'PE_3.5/css/pe_3.5.css')}" rel = "stylesheet" type = "text/css"/>
          <!--link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jquerydatepicker, 'calendar_blue.css')}" media="screen" /-->
          <script type="text/javascript" src="{!URLFOR($Resource.PE_35,'PE_3.5/js/common.js')}"></script>
          <script src="{!URLFOR($Resource.PE_35,'PE_3.5/js/aw.js')}" type="text/javascript"></script>
          <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.PE_35, 'PE_3.5/css/aw.css')}" media="screen" />
          
          <script type="text/javascript" src="{!URLFOR($Resource.PE_35,'PE_3.5/js/jquery.js')}"></script>
         
        <!--Start Loading-->
            <div id="blurred" style="width:100%; height:100%; display:block; background:#fff; text-align:center; vertical-align:middle; opacity:0.7; position:fixed; top:0; left:0; z-index:9999999;">
             <div style="width:100px; height:100%; position:relative;top:41%; background:url({!URLFOR($Resource.PE_35, 'PE_3.5/images/icon_loading.gif')}) no-repeat top left; margin:0 auto;"></div>
            </div>
            <apex:actionStatus id="Status" onstart="document.getElementById('blurred').style.display='block';" onstop="document.getElementById('blurred').style.display='none';"/>
        <!--End Loading-->
        
         <script type="text/javascript">
         var j$ = jQuery.noConflict();  
                $(function() {
                    $( ".FancyboxContainer" ).draggable({ cancel: ".formbox" });
                    $( ".FancyboxContainer" ).draggable({ cancel: ".contacts_n_name_div"});
                    $( ".FancyboxContainer" ).draggable({
                        drag: function( event, ui ) {
                            closeAllCombo();
                        }
                    });
                     $(window).scroll(function(){
                        closeAllCombo();
                    });
                    
                    $(".PopupContentStart").scroll(function(){
                        closeAllCombo();
                    });
                    
                    
                    
                });
                //Function for dynamic autocomplet creation for dynamic row
                function jQueryUtilityOfAutoComplete(name, arrList)
                { 
                    j$(document).ready(function()
                        {
                            j$("input[name^='"+name+"']").autocomplete({
                                minLength: 0,
                                source: arrList,
                                 select: function( event, ui )
                                {   
                                    var showSelected = ui.item.value;
                                    var rowNumber = name.replace('inputleftcolmn','');
                                    var fieldValue = arryAccountContactApiLabel[showSelected];
                                    check(fieldValue, rowNumber);
                                }
                            }).focus(function () {
                            j$(this).autocomplete("search", "");
                            });
                        });
                 }
                 
                
                var strSourceLoc='{!JSENCODE(strSourceLoc)}';
                var isCoInvestmentStngOn= {!if(isCoInvestmentStngOn==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var blnCoInvstFundDel= {!if(blnCoInvstFundDel==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var strFundType='{!JSENCODE(lstFundDetailsCoInvst.Investment_Category__c)}';
                var strCoInvstFundId='{!JSENCODE(strCoInvstFundId)}';
                var blnDfrntCoInvstFund={!if(blnDfrntCoInvstFund==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var blnRegularFundCoInvst={!if(blnRegularFundCoInvst==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var blnSlctLst;   
                var blnOnLoad;
                var accountfieldarray;
                var FundRaisngFldArray;
                var FundContFldArray;
                var contactfieldarray;
                var operatorarray;
                var fundfieldarray;
                var arrFieldsLabel;
                var arrFieldsApi;
                var arrContSrchFlds = [];
                var arrFundRAccSrchFlds;
                var arrAllContAccIds=[];
                var glblTabId;
                var ContQuery;
                var ContQueryCreated;
                var gridValueFinal="";
                var gridValueFinalPFC="";
                var blnShowAllClicked;
                var blnShowAllClickedPFC;
                var blnShowAllClickedPFA;
                var blnOnlyFundContTab=false;
                sforce.connection.sessionId = "{!$Api.Session_ID}"; 
                var number_of_rows = 1;
                var CustomFilterRowId = new Array();
                var CustomFilterRowIdNew = new Array();
                
                var RemoverowArry = new Array();
                var Namespaceprefix1="";
                Namespaceprefix1 = '{!JSENCODE(NameSpacePrefix)}';//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var searched = false;
                var SortAcc = 'true';
                var whereClause="";
                var headernames;
                var headernamesPFC;
                var getSelectedfields;
                var getSelectedfieldsPFC;
                var NumberIndex;
                var DateIndex;
                var DateTimeIndex;
                var RefrenceIndex;
                var Subjectindex;
                var ConNameindex;
                var AccNameindex;
                var ConNameMethodCallindex;
                var AccNameMethodCallindex;
                var booleanColumnNos;
                var alreadyIncluded;
                var headerDatatype = [];
                var boleanData = [];
                var crtia_ContainFundR = false;
                var getqueryMain;
                var getqueryMainPFC;
                var LndPgFundId;
                var pageName;
                var checkNullField;
                var columnarry;
                var columnarryPFC;
                var SortColIndx;
                var blnHedrClkdMain=false;
                var blnHedrClkdPFC=false;
                var SortColIndxPFC;
                var SortHeaderName;
                var SortHeaderNamePFC;
                var SortColDrctn;
                var SortColDrctnPFC;
                var qrySortDrctnPFC='ASC NULLS FIRST';
                var qrySortDrctn='ASC NULLS FIRST';
                var clckdHedrNmLbl;
                var clckdHedrNmLblPFC;
                var ContIdPF;   
                var blnPastFundRsngAcc;
                var headerfieldsPFC;
                var fieldsPFC;
                var blnValidCompTyp;
                var blnKeyprs=false;
                var RowCountContGrd;
                var arrObjSelectedRows=new Array();
                var flagChkCount=0;
                var headernames_rl;
                var AddToListClicked=false;
                var blnShowAllClicked_FC;
                var SortColIndx_FC=1;
                var SortColDrctn_FC='ascending';
                var qrySortDrctn_FC='ASC NULLS FIRST';
                var clckdHedrNmLbl_FC;
                var SortHeaderName_FC='Name';
                var linkClickedStart;
                var picklistData;
                var defaultPickValue = '';
                var checkFirstClick;
                var fundCount=0;
                var fundType;
                var CompSelected;
                var lstFundDetails_id;
                var mailindex_scontact;
                var arrdatetimeIndex;
                var arrNonSortHdrs;
                var arrdateIndex;
                var arrcurrencyIndex;
                var arrAccNameIndex;
                var arrContNameIndex;
                var arrContEmailIndex;
                var blnConEmailAccDenied;
                blnConEmailAccDenied={!if(blnConEmailAccDenied==true,'true','false')};  //Added By Qadier Khan for PE 3.5 11 OCT 2017.
                
                var blnValIndx_scontact;
                var blnRemoveBtnClckd_stdcontact=false;//to check remove btn is clicked or not for Selected contact grid.
                //var arrRecIdToRemove_stdcontact;//to hold the contact ids to be removed from Selected contact grid.
                //Currency check Variables starts
                var isCurrencyenabled= '{!if(isCurrency==true,'true','false')}';//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                var LocaleStrings='{!JSENCODE(locale_info)}';
                LocaleStrings=LocaleStrings.replace(/_/g,'-');
                //Currency check Variables Ends
                
                arrNonSortHdrs = new Array();
                //arrRecIdToRemove_stdcontact= new Array();
                var obj;
                var blnSearchClicked=false;
                var addToListScontClicked=false;
                var checkIPAD ; 
                var headerfields = "Contact:Name:Full Name:string,Contact:Email:Email:Email,Contact:Phone:Phone:Phone,Account:Name:Account Name:string,Account:"+Namespaceprefix1+"Institution_Type__c:Institution Type:multipicklist,Account:"+Namespaceprefix1+"Fund_Types__c:Fund Preferences:multipicklist";
                var fields = "Contact:Name:Full Name:string,Contact:Email:Email:Email,Contact:Phone:Phone:Phone,Account:Name:Account Name:string,Account:"+Namespaceprefix1+"Institution_Type__c:Institution Type:multipicklist,Account:"+Namespaceprefix1+"Fund_Types__c:Fund Preferences:multipicklist"; 
                var MainGridFildsPFC;
                var strfieldsContByDefault;
                var MainGridFildsDefalutPFC;
                var MainGridFildsAC = headerfields.split(',');
                var MainGridFildsDefalutAC;
                var mapAccConIds={};
                var filterstr='';
                var finalfiltr=new Array();
                finalfiltr=[];
                var blnFilterValCheck;
                var blnChckVal;
                var blnAdvanceFilterClicked;
                var contactApiSecurity = [];
                var accountApiSecurity = [];
                var FRApiSecurity = [];
                var FCApiSecurity= [];
                var FCLabelSecurity= [];
                var contactLabelSecurity = [];
                var accountLabelSecurity = [];
                var FRLabelSecurity = [];
                var FundApiSecurity = [];
                var FundLabelSecurity = [];
                var blnLndngPgCrFundrsngClckd;
                var state ;
                var clnAccDiff;
                var ErrorMsgDiffAcc;
                var allcontactrecords;
                var displaycolumn = new Array(1,2,3,4,5,6);
                var nomatchfound=false;
                var AccfldsInstTyp;
                var AccfldsFundTyp;
                var AccFldsAccName;
                var ContEmailField;
                var blnRetUrlCorct;
                var finalFundRaisingQuery='';
                
                function onLoadingPg()
                {
                    document.getElementById('blurred').style.display='none';
                    checkFirstClick=true;
                    blnRetUrlCorct=true;
                    ErrorStatusInsufficient={!if(ErrorStatusInsufficient==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                    ErrorStatusFundId={!if(ErrorStatusFundId==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                    MainGridFildsDefalutAC = MainGridFildsAC;
                    
                    if(ErrorStatusInsufficient==false)
                    {
                        loadPopupnew('fancybox_background','InsufficientPrivlagesOnloadError');
                        centerPopupnew('InsufficientPrivlagesOnloadError');
                    }
                    else if(ErrorStatusFundId==false)
                    {
                        
                        loadPopupnew('fancybox_background','dfrntCoInvFundError');
                        centerPopupnew('dfrntCoInvFundError');
                        if(strSourceLoc=='Com')
                        {
                            
                            document.getElementById("divErrorMsgId").innerHTML="<center>Account ID missing can not load this page.</center>";
                        }
                        else
                        {
                            document.getElementById("divErrorMsgId").innerHTML="<center>Fund ID missing can not load this page.</center>";
                        }
                    }
                    else
                    {
                        if(navigator.platform.toLowerCase().indexOf('ipad') > -1){
                            checkIPAD = 'ipad';
                        }
                        SelectFund_Popup();
                        glblTabId='AllContTabId';
                        rfrshPnlMthd(glblTabId);
                        
                    }
                }
               
                var clearButton; // get Clear button clicked
        </script>
         
         <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.PE_35, 'PE_3.5/css/fancybox.css')}" media="screen" />
         <script src="{!URLFOR($Resource.PE_35,'PE_3.5/js/jquery-ui.js')}"></script>
                <script>
                $(function() {
                $( ".FancyboxContainer" ).draggable({ cancel: ".PopupContentStart" });

                });
                </script>
                
                <style>
                    .FancyboxContainer {cursor:move; }
                    .PopupContentStart{cursor:text; }
                </style>
                
                <script type="text/javascript">
                        var popupStatus = 0;
                        
                        function ColumnstoDisplay_Fancybox() 
                        {
                            loadPopupnew('fancybox_background','ColumnstoDisplay_Fancybox');
                            centerPopupnew('ColumnstoDisplay_Fancybox');
                        }
                        function ColumnstoDisplay_Fancybox2() 
                        {
                            loadPopupnew('fancybox_background','ColumnstoDisplay_Fancybox2');
                            centerPopupnew('ColumnstoDisplay_Fancybox2');
                        }
                        
                        function Past_FundraisingsContact_PopUp(ContId) 
                        {
                            document.getElementById('blurred').style.display='';
                            blnShowAllClickedPFC = false;
                            blnPastFundRsngAcc=false;
                            //showImz();
                            getNavatarSetupDataPFC(ContId);
                            /*if(wrnechAppliClckd)
                            {
                                closepopupwrenchwrenchCMF_PFC('fancybox_background','FancyboxContainer');
                            }*/
                            //closepopupwrenchwrenchCMF_PFC('fancybox_background','FancyboxContainer');
                            loadPopupnew('fancybox_background','Past_FundraisingsContact_PopUp');
                            centerPopupnew('Past_FundraisingsContact_PopUp');
                            document.getElementById('blurred').style.display='none';
                        }            
                        function Past_Fundraisings_PopUp(ContId) 
                        {
                            document.getElementById('blurred').style.display='';
                            blnPastFundRsngAcc=true;
                            blnShowAllClickedPFA = false;
                            //showImz();
                            getNavatarSetupDataPFC(ContId);
                            /*if(wrnechAppliClckd)
                            {
                                closepopupwrenchwrenchCMF_PFA('fancybox_background','FancyboxContainer');
                            }*/
                            
                            loadPopupnew('fancybox_background','Past_Fundraisings_PopUp');
                            centerPopupnew('Past_Fundraisings_PopUp');
                            document.getElementById('blurred').style.display='none';
                            
                        }
                        
                        function Warning_PopUp() 
                        {
                            loadPopupnew('fancybox_background','Warning_PopUp');
                            centerPopupnew('Warning_PopUp');
                        }
                        function ShowHide_ConfirmDeletion() 
                        {
                            $(".ConfirmDeletion").show();
                            loadPopupnew('fancybox-skin','ConfirmDeletion');
                            centerPopupnew('ConfirmDeletion');
                         }
                        
                        function SelectFund_Popup() 
                        {
                            if(strSourceLoc!='')
                            {
                                if(strSourceLoc=='Home')
                                {
                                    document.getElementById('OnloadPopup').style.display='';
                                    $('.SelectFund2').show();
                                    document.getElementById('lukpFndHmPopup').style.display='';
                                    document.getElementById('j_id0:CreateFundraisingFormId:OutputTxtCoInv').style.display='none';
                                    loadPopupnew('fancybox_background','SelectFund_Popup');
                                    centerPopupnew('SelectFund_Popup');
                                }
                                else if(strSourceLoc=='Fund')
                                {
                                    if(isCoInvestmentStngOn)
                                    {
                                       
                                        if(strFundType=='Co-investment' && blnDfrntCoInvstFund==true)
                                        {
                                            loadPopupnew('fancybox_background','dfrntCoInvFundError');
                                            centerPopupnew('dfrntCoInvFundError');
                                            document.getElementById("divErrorMsgId").innerHTML="Cannot create fundraising with this Co-Investment fund. Please click on the 'Quick Create Fundraisings' button from the Co-Investment Fund defined in Co-Investment settings.";
                                             
                                        }
                                        else if(blnRegularFundCoInvst==true)
                                        {
                                            
                                        }
                                        else
                                        {
                                            document.getElementById('OnloadPopup').style.display='';
                                            $('.SelectFund2').show();
                                            document.getElementById('j_id0:CreateFundraisingFormId:lookupId').style.display='none';
                                            document.getElementById('j_id0:CreateFundraisingFormId:OutputTxtCoInv').style.display='';
                                            document.getElementById('lukpFndHmPopup').style.display='none';
                                            loadPopupnew('fancybox_background','SelectFund_Popup');
                                            centerPopupnew('SelectFund_Popup');
                                        }
                                    }
                                    else
                                    {
                                        if(strFundType=='Co-investment')
                                        {
                                            document.getElementById('OnloadPopup').style.display='';
                                            $('.SelectFund2').show();
                                            document.getElementById('lukpFndHmPopup').style.display='';
                                            //document.getElementById('j_id0:CreateFundraisingFormId:OutputTxtCoInv').style.display='none';
                                            loadPopupnew('fancybox_background','SelectFund_Popup');
                                            centerPopupnew('SelectFund_Popup');
                                        }
                                    }
                                }
                                else if(strSourceLoc=='Com')
                                {
                                    if(!isCoInvestmentStngOn)
                                    {
                                        document.getElementById('OnloadPopup').style.display='';
                                        $('.SelectFund1').show();
                                        loadPopupnew('fancybox_background','SelectFund_Popup');
                                        centerPopupnew('SelectFund_Popup');
                                    }
                                    else if(blnCoInvstFundDel)
                                    {
                                        loadPopupnew('fancybox_background','dfrntCoInvFundError');
                                        centerPopupnew('dfrntCoInvFundError');
                                        document.getElementById("divErrorMsgId").innerHTML="You cannot proceed further as the co-investment fund is unavailable. Please contact system administrator to select a fund in Co-investment settings before using this functionality.";
                                    }
                                    
                                }
                            }
                            else
                            {
                                loadPopupnew('fancybox_background','dfrntCoInvFundError');
                                centerPopupnew('dfrntCoInvFundError');
                                document.getElementById("divErrorMsgId").innerHTML="<center>Fund ID missing can not load this page.</center>";
                                
                            }
                            
                            
                        }
                         
                        function loadPopupnew(cid1,cid2)
                        {
                            if(popupStatus==0){
                                $('.'+cid1).css({
                                    "opacity": "0.5"
                                });
                                $('.'+cid1).fadeIn("slow");
                                $('.'+cid2).fadeIn("slow");
                                popupStatus = 1;
                            }
                        };
                        function centerPopupnew(cid)
                        {
                            //request data for centering
                            var windowWidth = document.documentElement.clientWidth;
                            var windowHeight = document.documentElement.clientHeight;
                            var popupHeight = $('.'+cid).height();
                            var popupWidth = $('.'+cid).width();
                            //centering
                            if(cid == 'ContactAccess_fancybox' && (checkIPAD != 'ipad') ){
                                $('.'+cid).css({
                                    "position": "fixed",
                                    "top": "54.5px",
                                    "left": "210.5px"
                                });
                                $("#displayFilterText1").show();
                                $("#hideFilterText1").hide();
                                $(".filterGridContactDiv1").hide();
                            }
                            else{
                                $('.'+cid).css({
                                    "position": "fixed",
                                    "top": windowHeight/2-popupHeight/2,
                                    "left": windowWidth/2-popupWidth/2
                                });
                            }
                        };
                        
                        function closepopup(bgdivid,popupdivid)
                        {
                            disablePopupnew(bgdivid);
                            $('.'+popupdivid).fadeOut("slow");
                        } 
                        
                        function disablePopupnew(cid){
                            if(popupStatus==1){
                                $('.'+cid).fadeOut("slow");
                                popupStatus = 0;
                            }   
                            
                        };
                          

                </script>
                
                
                <script type="text/javascript">
                
                $(document).ready(function() {
                
                    $("#displayFilterText1").show();
                    $("#hideFilterText1").hide();
                    $("#filterGridContactDiv1").hide();
                    $("#SrchSction").hide();
                    
                    $("#displayFilterText1").click(function(){
                        $("#displayFilterText1").hide();
                        $("#hideFilterText1").show();
                        
                        //$("#filterGridContactDiv").show("fast");
                        $("#filterGridContactDiv1").slideToggle();
                        $("#SrchSction").show();
                        
                        
                    });
                    
                    $("#hideFilterText1").click(function(){
                        //closeallcombo();
                        $("#hideFilterText1").hide();
                        //$("#filterGridContactDiv").hide("fast");
                        $("#displayFilterText1").show();
                        
                        $("#filterGridContactDiv1").slideToggle();
                        $("#SrchSction").hide();
                        //closeallcombo();
                    });
                    $(".slctedContactyDivCLs").scroll(function(){
                        closeAllCombo();
                    });
                    
                  onLoadingPg();  
                });
                function closeGridSelCont()
                {
                    $("#hideFilterText1").hide();
                    //$("#filterGridContactDiv").hide("fast");
                    $("#displayFilterText1").show();
                    $("#filterGridContactDiv1").hide();
                    $("#SrchSction").hide();
                    //closeallcombo();
                }
                </script> 
                
                <!-- Start Yellow Tooltip -->
                <link rel="stylesheet" href="{!URLFOR($Resource.PE_35, 'PE_3.5/css/tip-yellow.css')}" type="text/css" />
                <script type="text/javascript" src="{!URLFOR($Resource.PE_35, 'PE_3.5/js/jquery.poshytip.js')}"></script> 
                <script type="text/javascript">
                    $(function(){        
                        $('.YellowTooltip').poshytip();
                    });
                </script>
                <!-- End Yellow Tooltip -->
          
          <style>
              /*.slds {background: #f2f5fa !important;}*/
              .slds-page-header__title {position:relative; left:-1px;}
              
              /*for close button*/
                .close_white_60{position:absolute; right:0; top:-41px;}
                  .close_white_60 a img{width:34px; height:34px; cursor:pointer;}
                  .close_white_60 a img:hover{opacity:0.8; }
          </style>
          
          
        <script>
        $(document).ready(function() {  
        $('.popup2').hide();
        $('.popup3').hide();
        $('#popup2').click(function () {
                
                $('.popup1').hide();
                $('.popup2').hide();
                $('.popup3').show();
                
            }); 
            
            $('.popup2_close').click(function () {
                
                $('.popup1').show();
                $('.popup2').hide();
                $('.popup3').hide();
              
            });
            
            $('.popup3_close').click(function () {
                
                $('.popup1').show();
                $('.popup2').hide();
                $('.popup3').hide();
              
            });
            
            
            $('#popup3').click(function () {
                
                $('.popup1').hide();
                $('.popup3').hide();
                $('.popup2').show();
                
                
            });
            
            
            
          });
          var arrayOfAccountFields = [];
          var arryAccountContactApiLabel = {};
        </script>
          <!-- Start Navatar Yellow Theme -->
          <link href = "{!URLFOR($Resource.PE_35, 'PE_3.5/css/Navatar-Yellow-Theme.css')}" rel = "stylesheet" type = "text/css"/>
          <!-- End Navatar Yellow Theme -->
        </head>
        
        <body>
        <apex:form id="CreateFundraisingFormId">
            
            <!--style>
                .fancybox_background {position:fixed !important; }
            </style-->
            <div class="fancybox_background" onclick="closeAllCombo();"><input type="text" id="fcs2" style="width: 0px; Height: 0px; padding:0px; border:#fff 1px solid; position:relative; opacity:0;"/></div> 
            
            <!-- REQUIRED SLDS WRAPPER -->
            <div class="slds">
                
                
                <!--Start Confirmation-->
                <div class="Confirmation_PopUp FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="redirectToFund();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Confirmation</h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        All Fundraisings have been created successfully.
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="redirectToFund();return false;">OK</button>
                    </div>
                    
                </div>
                <!--End Confirmation-->
                <!--Start Error-->
                
                <div class="duplicateErr_PopUp FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Error</h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        <center>Please select a search criteria. </center>
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="closepopup('fancybox_background','FancyboxContainer');return false;">OK</button>
                    </div>
                    
                </div>
                
                
                <!--End Error-->
            
                <div class="dfrntCoInvFundError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="backRedirection();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Error</h2>
                    </div>

                    <div id="divErrorMsgId" class="PopupContentStart" style="min-width: 365px;max-width: 630px; overflow:hidden; overflow-y:auto; padding:25px 25px 25px;">
                        
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral"  onclick="backRedirection();return false;">OK</button>
                    </div>
                    
                </div>
                <!--End Error-->
                <div class= "AccConCountError FancyboxContainer">
                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Error</h2>
                    </div>

                    <div id="AccConCountId" class="PopupContentStart" style="min-width: 365px;max-width: 630px; overflow:hidden; overflow-y:auto; padding:25px 25px 25px;">
                        
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral"  onclick="closepopup('fancybox_background','FancyboxContainer');return false;">OK</button>
                    </div>
                    
                </div>
                <!--End Error-->
                
                <!--Start ContactsSuccessfullyAdded-->      
                <div class="ContactsSuccessfullyAdded FancyboxContainer">
                    <style>
                        .ContactsSuccessfullyAdded {opacity:0.75 !important; background: #fcb141 !important; border-radius: 2px !important;box-shadow: #fcb141 0px 0px 15px !important; border:none !important;}
                     </style>
                    <div class="PopupContentStart" style="padding:15px 20px; color:#000 !important">
                        <span id="idSelectdContCountDiv"> </span> contact(s) successfully added.
                    </div>
                </div>
                <!--End ContactsSuccessfullyAdded-->
                
                <!-----------------------------------------------FUnd ID Misssing Error------------------------------------------------------->
                <div class="FundIdMissingError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="backRedirection();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Error
                        </h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="backRedirection();return false;">OK</button>
                    </div>
                    
                </div>
                <!-----------------------------------------------FUnd ID Misssing Error------------------------------------------------------->
                <!----------------------------------Insufficient Privlages Fundraising Contact------------------------------------------------>
                <div class="InsufficientPrivlagesError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Insufficient Permission
                        </h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        You do not have permission to edit this information. Please contact your System Administrator.
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="closepopup('fancybox_background','FancyboxContainer');return false;">OK</button>
                    </div>
                    
                </div>
                <!----------------------------------Insufficient Privlages Fundraising Contact------------------------------------------------>
                <!-------------------------Insufficient Privlages On Load Account,Contact,Fundraising----------------------------------------->
                <div class="InsufficientPrivlagesOnloadError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="backRedirection();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Insufficient Permission
                        </h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        You do not have permission to edit this information. Please contact your System Administrator.
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="backRedirection();return false;">OK</button>
                    </div>
                    
                </div>
                <!-------------------------Insufficient Privlages On Load Account,Contact,Fundraising----------------------------------------->
                <!-------------------------Other Account Involved in FundRaising Error----------------------------------------->
                <div class="FRCreatnAccError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Error
                        </h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        <div id="FRCreatnAccErrorMsg"/>
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="closepopup('fancybox_background','FancyboxContainer');return false;">OK</button>
                    </div>
                    
                </div>
                <!--------------------------------Other Account Involved in FundRaising Error----------------------------------------->
                
                <div class="SessionExpireError FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="redirectToFund();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Session Expired
                        </h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 365px;max-width: 365px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        <center>Your session has expired. Please refresh your page.</center>
                    </div>

                    <div class="slds-modal__footer">
                        <button class="slds-button slds-button--neutral" onclick="redirectToFund();return false;">OK</button>
                    </div>
                    
                </div>
                <!--End Error-->
                
                <!-- Start Confirm Deletion Pop Up -->
                    <div class="ConfirmDeletion fancybox-skin" style=" display:none;width:300px; position:absolute; z-index:9999999; top:104px; left:99px;">
                        <div class="popup_background"></div>
                        <div style="background:#fff !important">
                        <div class="slds-modal__header">
                            <div class="close_white_60" >
                                <a title="Close" onclick="$('.ConfirmDeletion').hide(); return false;" class="ShowHide_ConfirmDeletion"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                            </div>
                            <h2 class="slds-text-heading--medium">Error</h2>
                        </div> 
                             <div class="PopupContentStart" style=" overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                                <center>Please enter a value</center>
                            </div>
                            
                            <!--<div class="paginationstyle txt_center">
                                <a class="slds-button slds-button--neutral ShowHide_ConfirmDeletion" title="Yes">Yes</a>                         
                                <a class="slds-button slds-button--neutral ShowHide_ConfirmDeletion" title="No">No</a>    
                            </div>-->
                        </div>
                        <div class="slds-modal__footer">
                            <button class="slds-button slds-button--neutral" onclick="$('.ConfirmDeletion').hide();return false;">OK</button>
                        </div>
                    </div>
                    <!-- End Confirm Deletion Pop Up -->
                    
                    
                
                <!--Start Warning-->
                <div class="Warning_PopUp FancyboxContainer">

                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="document.getElementById('j_id0:CreateFundraisingFormId:lookupIdComWrng').value='';closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Warning</h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 550px;max-width: 550px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        <table class="table" border="0" cellpadding="5" cellspacing="0" style="margin:0px 0 15px 0;">
                            <tr>
                                <td class="td1" width="50">
                                    <div aria-hidden="true" class="slds-icon icon-utility-warning slds-icon-text-default"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/warning_60.png')}" /></div>
                                </td>
                                <td class="td2">
                                    You have not selected any {!$ObjectType.Fundraising__c.fields.Portfolio_Company__c.Label} for co-investment fund. Please select a {!$ObjectType.Fundraising__c.fields.Portfolio_Company__c.Label} below or just click 'Create Fundraisings' to skip.
                                </td>
                            </tr>      
                        </table>
                        <apex:outputPanel id="CompTypTblWrng">
                        <table class="table" border="0" cellpadding="5" cellspacing="0" style="margin:10px 0 0px 0;">
                            <tr>
                                <td class="td1" width="150">{!$ObjectType.Fundraising__c.fields.Portfolio_Company__c.Label}</td>
                                <td class="td2">
                                    
                                    <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:250px">
                                        <apex:actionRegion >
                                            <apex:inputField html-autocomplete="off" value="{!CompanyLkupWarngPopup.Portfolio_Company__c}" id="lookupIdComWrng" style="border:2px solid #c23934" onkeyup="KeyPrssCompTypWrng();"  styleclass="inputTextClass">
                                            </apex:inputField>
                                            
                                        </apex:actionRegion>
                                        
                                    </div> 
                                </td>
                            </tr>  
                            <tr>    
                                <td class="td1"></td>
                                <td class="td2" style="padding-top:0 !important; line-height: 12px;"><apex:message id="StdErrMsgCompWrng" styleClass="mandatory_msg" for="lookupIdComWrng"/>
                                    <span class="mandatory_msg" id="ErrMsgCompTypWrng" style="display:none">Please select the correct record type.
                                    </span>
                                </td>
                            </tr>           
                        </table>
                        </apex:outputPanel>
                    </div>

                    <div class="slds-modal__footer">
                        <apex:commandbutton styleClass="slds-button slds-button--neutral" rerender="CompTypTblWrng" style="height: 36px;" oncomplete="document.getElementById('j_id0:CreateFundraisingFormId:lookupIdComWrng').value='';closepopup('fancybox_background','FancyboxContainer');return false;" value="Cancel"/>
                        <apex:commandbutton styleclass="slds-button slds-button--brand" style="height: 36px;" onclick="showImz();"  rerender="CompTypTblWrng" oncomplete="CrteFndRsngClckedWrng();return false;" value="Create Fundraisings"/>
                    </div>
                    
                </div>
                <!--End Warning-->
            
                
                <!--Start Select Fund-->
                <div class="SelectFund_Popup FancyboxContainer" style="display:none" id="OnloadPopup">

                    <div class="slds-modal__header" >
                       <div class="close_white_60">
                            <a onclick="backRedirection();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <h2 class="slds-text-heading--medium">Select Fund</h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 425px;max-width: 425px; max-height:450px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                    
                        <div class="SelectFund1" style="display:none">        
                            Select the values below to proceed creating Fundraisings.
                            <apex:outputPanel id="CompPopupPanelId">
                                <table cellpadding="5" cellspacing="0" class="table" style="margin-top:15px;">
                                    <tr>
                                        <td class="td1" ><div style="width:80px;word-wrap: break-word;">{!$ObjectType.Fundraising__c.fields.Portfolio_Company__c.Label}</div></td>
                                        <td class="td2">
                                            <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:272px">
                                                
                                                <apex:actionRegion >
                                                    <apex:inputField html-autocomplete="off" value="{!CompanyLkupPopup.Portfolio_Company__c}" onkeyup="KeyPrssCompTyp();" id="lookupIdCom2"  style="border:2px solid #c23934" styleclass="inputTextClass">
                                                        <apex:actionSupport event="onchange" action="{!CompSlctdLkup}" oncomplete="comTypValidCheckCompny();" reRender="FundSelectListId,CompTypBlnPnlId" />
                                                    </apex:inputField>
                                                </apex:actionRegion>
                                            </div>   
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="td1"></td>
                                        <td class="td2" style="padding-top:0 !important; line-height: 12px;"><apex:message id="StdErrMsgCompanyCom"  styleClass="mandatory_msg" for="lookupIdCom2"/>
                                            <span class="mandatory_msg" id="ErrMsgCompTypComp" style="display:none">Please select the correct record type.</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="td1"><div style="width:80px;word-wrap: break-word;"><span class="slds-required">*</span>{!$ObjectType.Fundraising__c.fields.Fund_Name__c.Label}</div></td>
                                        <td class="td2">
                                            <div class="slds-select_container" style="width:115px;float: left;">
                                                <apex:selectList id="FundSelectListId" styleClass="slds-select " disabled="false" value="{!strSelectedFund}" size="1" onchange="blnSlctLst=true;ReqFldCheckComp();return false;"  >
                                                    <apex:selectOptions value="{!FundOptions}"/>
                                                </apex:selectList>
                                            </div>
                                            
                                            <div style="font-size:12px; float:left;    position: relative;    top: 10px;">&nbsp; OR &nbsp; </div >
                                            
                                            <div id="lookupFundComDsblDivId"  class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:128px; float:left; display:none ;background-color:#d8dde6 !important;">
                                              <div aria-hidden="true" class="slds-input__icon slds-icon-text-default"> <img disabled="true" src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/search_60.png')}" style="position: relative; bottom: 3px;" /> </div>
                                              <input id="lookup" disabled="true" class="slds-input" type="text" aria-autocomplete="list" role="combobox" aria-expanded="true" aria-activedescendant="" />
                                               
                                            </div>
                                            <div id="lookupFundComDivId"  class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:128px; float:left; ">
                                              <apex:inputField html-autocomplete="off" id="lookupIdFundCom" value="{!CompanyLkupPopup.Fund_Name__c}" onchange="blnSlctLst=false;ReqFldCheckComp();" style=" border:2px solid #c23934;" styleClass="inputTextClass"/>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="td1"></td>
                                        <td class="td2" style="padding-top:0 !important; line-height: 12px;"><apex:message id="StdErrMsgFundLkupCom"  styleClass="mandatory_msg" for="lookupIdFundCom"/>
                                            <span class="mandatory_msg" id="ErrMsgFundComId" style="display:none">Please enter a value</span>
                                        </td>
                                    </tr>
                                </table>                    
                            </apex:outputPanel>           
                            <div class="slds-modal__footer" style="margin: -24px;margin-top: 24px;">
                                <button class="slds-button slds-button--neutral" onclick="backRedirection();return false;">Cancel</button>
                                <button class="slds-button slds-button--brand Click_for_SelectFund2" onclick="document.getElementById('blurred').style.display='';ContClickedCompany();return false;">Continue
                                    
                                </button>
                            </div>
                        </div>
                    
                        <div class="SelectFund2" style="display:none">        
                            Select the values below to proceed creating Fundraisings.
                            <apex:outputPanel id="HomePopupPanelId">
                                <table cellpadding="5" cellspacing="0" class="table" style="margin-top:15px;">
                                    <tr>
                                        <td class="td1" ><div style="width:80px;word-wrap: break-word;"><span class="slds-required">*</span>{!$ObjectType.Fundraising__c.fields.Fund_Name__c.Label}</div></td>
                                        <td class="td2">
                                            <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:272px">
                                                
                                                <div class="slds-input__icon slds-icon-text-default">
                                                </div>
                                                <div id="lukpFndHmPopup" style="display:none"> 
                                                    <apex:inputField html-autocomplete="off" html-maxlength="255"  value="{!FundLookupPopup.Fund_Name__c}" id="lookupId"  style="border:2px solid #c23934;" styleclass="inputTextClass">
                                                    </apex:inputField>
                                                </div>
                                                <apex:outputText id="OutputTxtCoInv" >
                                                    {!JSENCODE(CoInvstFund)}
                                                </apex:outputText>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="td1"></td>
                                        <td  class="td2" style="padding-top:0 !important; line-height: 12px;">
                                            <apex:message id="StdErrMsgFundHome"  styleClass="mandatory_msg" for="lookupId"/>
                                            <span id="ReqFundFieldId" style="display:none" class="mandatory_msg">Please enter a value</span>
                                            <span class="mandatory_msg" id="ErrMsgFundTyp" style="display:none">Please select the Co-Investment Fund defined in Co-Investment settings.</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="td1" ><div style="width:80px;word-wrap: break-word;">{!$ObjectType.Fundraising__c.fields.Portfolio_Company__c.Label}</div></td>
                                        <td class="td2">
                                            <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:272px">
                                              <div aria-hidden="true" class="slds-input__icon slds-icon-text-default"> 
                                              </div>
                                              <apex:inputField html-autocomplete="off" value="{!CompanyLkupPopup.Portfolio_Company__c}" id="lookupIdCom" style="border:2px solid #c23934" onkeyup="KeyPrssHomeCompTyp();"  styleclass="inputTextClass">
                                                    
                                              </apex:inputField>
                                            </div> 
                                        </td>
                                     </tr>
                                    <tr>
                                        <td class="td1"></td>
                                        <td class="td2" style="padding-top:0 !important; line-height: 12px;"><apex:message id="StdErrMsgCompHome" styleClass="mandatory_msg" for="lookupIdCom"/>
                                            <span class="mandatory_msg" id="ErrMsgCompTyp" style="display:none">Please select the correct record type.</span>
                                        </td>
                                    </tr>
                                </table>
                                <script>
                                    if(strSourceLoc=='Home' || (strSourceLoc=='Fund' &&  strFundType=='Co-investment' && isCoInvestmentStngOn==false) )
                                    {
                                        document.getElementById('lukpFndHmPopup').style.display='';
                                    }
                                    else
                                    {
                                        
                                    }
                                </script>
                            </apex:outputPanel>
                        
                            <div class="slds-modal__footer" style="margin: -24px;margin-top: 24px;">
                                <button class="slds-button slds-button--neutral" onclick="backRedirection();return false;">Cancel</button>
                                
                                <button Class="slds-button slds-button--brand" onclick="document.getElementById('blurred').style.display='';ContClickedHome();return false;">Continue</button>
                                
                            </div>
                        </div> 
                        <apex:outputPanel id="CompTypBlnPnlId" >
                            <script> 
                                blnValidCompTyp={!if(blnValidCompTyp==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                                blnCompValidEntr= {!if(blnCompValidEntr==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                                blnFundIdMatchedHome= {!if(blnFundIdMatchedHome==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                                
                            </script>
                        </apex:outputPanel> 
                        <apex:actionFunction name="ContClickedHomeAF"  oncomplete="FieldsCheckHmePopup();" rerender="HomePopupPanelId" />
                        <apex:actionFunction name="ContClickedComAF"  oncomplete="ContClickedComp();return false;" rerender="FundSelectListId" />
                        
                        <apex:actionFunction name="CrteFndRsngClckedWrngAF" action="{!CompSlctdLkupWarng}" oncomplete="comTypValidCheckWrng();" rerender="CompTypBlnPnlId" >
                            <apex:param name="WarngPopupValEntrd" assignTo="{!WarngPopupValEntrd}" value=""/>
                        </apex:actionFunction>
                    </div>
                </div>   
                
                <!--End Select Fund-->
            
                <!--Start Past Fundraisings - Apax Partners-->
                <div class="Past_FundraisingsContact_PopUp FancyboxContainer">
                    
                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="CloseClickedPFC();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <a title="Columns to Display" onclick="document.getElementById('blurred').style.display='block';show_wrenchpopup_pagewrenchCMF_PFC(this,event);return false; " style="float:right;">
                            <div aria-hidden="true" class="slds-icon icon-utility-custom-apps slds-icon-text-default" style="position:relative; top:11px; right:1px;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/custom/custom19_60.png')}" /></div>
                        </a>
                        <h2 class="slds-text-heading--medium" id="PstFndRsngContGrdNm">Past Fundraisings - <span id="ContNmPFC"></span></h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 800px;max-width: 800px; max-height:450px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                    
                         <style>
                            #Past_FundraisingsContact {width:100% !important; height:315px; border:none !important; padding:0 !important; }
                            #Past_FundraisingsContact .aw-column-0{text-align:left  !important}
                            #Past_FundraisingsContact .aw-column-4{text-align:center  !important}
                            #Past_FundraisingsContact .aw-column-5 {border-right:none !important;   }
                             .aw-strict .aw-grid-row {
                                height: 27px;
                                line-height:27px
                                }

                            </style>
                                
                            <!-- Start Active Widget -->
                            <div id="gridPFC"></div>
                             <span>Records: <span id="grid2PFC"> </span> &nbsp;<a style="display:none;margin-top: -21px;margin-left: 107px;" id="ShowAllLinkPFC" href="#" onclick="document.getElementById('blurred').style.display='';ShowAllClickedPFC();" ><span>Show All</span></a></span>
                            
                            <!-- End Active Widget -->  
                            
                        
                    </div>
                    
                </div>
                
                <!--End Past Fundraisings - Apax Partners-->
                
                <!--Start Past Fundraisings - Apax Partners-->
                <div class="Past_Fundraisings_PopUp FancyboxContainer">
                    
                    <div class="slds-modal__header">
                       <div class="close_white_60">
                            <a onclick="CloseClickedPFC();return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                        </div>
                        <a title="Columns to Display" onclick="document.getElementById('blurred').style.display='block';show_wrenchpopup_pagewrenchCMF_PFA(this,event);" style="float:right;">
                            <div aria-hidden="true" class="slds-icon icon-utility-custom-apps slds-icon-text-default" style="position:relative; top:11px; right:1px;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/custom/custom19_60.png')}" /></div>
                        </a>
                        
                        <h2 class="slds-text-heading--medium" >Past Fundraisings - <span id="AccOrContNm"></span></h2>
                    </div>

                    <div class="PopupContentStart" style="min-width: 800px;max-width: 800px; max-height:450px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                        
                            <style>
                            #Past_Fundraisings {width:100% !important; height:315px; border:none !important; padding:0 !important; }
                            #Past_Fundraisings .aw-column-0{text-align:left  !important}
                            #Past_Fundraisings .aw-column-3 {border-right:none !important; }
                             .aw-strict .aw-grid-row {
                                height: 27px;
                                line-height:27px
                                }

                            </style>
                            <div id="gridPFA"></div>
                             <span>Records: <span id="grid2PFA"> </span> &nbsp;<a style="display:none;margin-top: -21px;margin-left: 107px;" id="ShowAllLinkPFA" href="#" onclick="document.getElementById('blurred').style.display='';ShowAllClickedPFC();return false;" ><span>Show All</span></a></span>
                        
                    </div>
                    
                </div>
                
                <!--End Past Fundraisings - Apax Partners-->
                
                
                <!-- Start Fancybox Fundraising Contacts -->
                <div class="ContactAccess_fancybox FancyboxContainer" style="top: 50.5px !Important;">
          
                      <div class="slds-modal__header">
                           <div class="close_white_60">
                                <a  onclick="clear_grid_select_contact('btnReset');searchText_scontact='';closepopup('fancybox_background','FancyboxContainer');return false;" title="Close"><img src="{!URLFOR($Resource.PE_35, 'PE_3.5/images/close_white_60.png')}" /></a>
                            </div>
                            <h2 class="slds-text-heading--medium">Fundraising Contacts 
                                <span pointer-events='none'>
                                    <span class="YellowTooltip"  title="Use this screen to link any contacts associated with this Fundraising."  style="position:relative; top:-3px; left:0px;">
                                        <span class="slds-icon icon-utility-info slds-icon-text-default">
                                            <img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/info_60_white.png')}"  style=" width: 22px;height: 22px;position: relative;top: -6px;" />
                                        </span>
                                    </span>
                                </span>
                            </h2>
                      </div>
                      
                        <div class="PopupContentStart" style="min-width: 1000px;max-width: 1000px; max-height:450px; overflow:hidden; overflow-y:auto; padding:16px 25px 25px;">
                            
                            <h3 class="slds-section-title--divider">
                                <div id="displayFilterText1">                           
                                    <a><div class="slds-icon icon-utility-chevronright slds-icon-text-default" style="width:18px; height:18px; float:left; margin:-1px 5px 0 0;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/chevronright_60.png')}" /></div></a>
                                </div>
                                <div id="hideFilterText1">                          
                                    <a><div class="slds-icon icon-utility-chevronright slds-icon-text-default" style="width:18px; height:18px; float:left; margin:-1px 5px 0 0;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/chevrondown_60.png')}" /></div></a>
                                </div>
                                Select Contacts
                                <input type="hidden" value="" id="hidden_id_inst" />
                                <input type="hidden" value="" id="hidden_Val_AccConName" />
                                <div style="float:right;" autocomplete="off" id="SrchSction">
                                    <!-- Start Search Section -->
                                    <script>
                                    function getEnterEvent3(e,th)
                                        {
                                            if(e.keyCode == 13){
                                                //searchcon_grid();
                                            }
                                            document.getElementById('ClearSearch3').style.display = 'block';
                                            if(th.value == ''){
                                                document.getElementById('ClearSearch3').style.display = 'none';
                                            }       
                                        }
                                    
                                    function clear_grid3(obj)
                                        {
                                            //clearAll();
                                            document.getElementById('SearchContent3').value='';
                                            document.getElementById('ClearSearch3').style.display = 'none';
                                        }
                                    </script>
                                    <div  class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:240px; margin-top: -10px; margin-right: -14px;">
                                      <div aria-hidden="true"  onclick="searchGridSelectContact();" class="slds-input__icon slds-icon-text-default" style="left: 12px;cursor:pointer"> <img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/search_60.png')}" style="position: relative; bottom: 1px;" /> </div>
                                      <input class="slds-input" placeholder="Search" type="text" id="searchcon_grid_select_contact" onblur="Add_placeholder_onblur_select_contact(this);" aria-autocomplete="list" role="combobox" aria-expanded="true" onkeyup="getEnterEvent_select_contact1(event,this)" maxlength="255" onclick="document.getElementById('searchcon_grid_select_contact').placeholder = '';"  aria-activedescendant="" style="padding-left: 32px; padding-right: 16px;" />
                                      
                                     
                                      <span class="slds-icon_container"  id="clearsearchenb_select_contact" style="display: none;cursor:pointer;" onclick="blnCrossClicked=true;clear_grid_select_contact('btnResetclear');"><div class="slds-icon icon-utility-clear slds-icon-text-default" style="width:13px; height:13px;position: absolute;top: 10px;right: 10px;cursor:pointer" title="Clear"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/clear_60.png')}" /></div></span>
                                     
                                    </div>
                                    <!-- End Search Section -->
                                </div>
                            </h3>
            
                            
                         <div style="clear:both"></div>
                        <div id="filterGridContactDiv1">
                    
                            
                            <div style="clear:both"></div>
                            
                             <div style="margin-top:0px">
                                                    
                                            
                                             <script type="text/javascript">
                                                    $(function () {
                                                        $('.checkall').click(function () {
                                                            $('.checked_one').attr('checked', this.checked);
                                                        });
                                                    });
                                                    
                                                    
                                                </script>
                                                 
                                                
                                                <style>
                                                #Past_FundraisingsContact2 {width:100% !important; height:232px; border:none !important; padding:0 !important; }
                                                 
                                                 #Past_FundraisingsContact2 .aw-column-0  input{ text-align:center !important;}
                                                 #Past_FundraisingsContact2 .aw-column-0 { text-align:center !important;}
                                                #Past_FundraisingsContact2 .aw-column-6 {border-right:none !important;   }
                                                 .aw-strict .aw-grid-row {
                                                    height: 27px;
                                                    line-height:27px
                                                    }
                            
                                                </style>
                                                
                                                 
                                                    
                                            <!-- Start Active Widget -->
                                            <div id="divSelectContact">
                                            </div>
                                            
                                                            
                                        </div> 
                                        <div style="font-size:12px; margin-top:5px;"><span>Records: <span id="grid2_FC"> </span> &nbsp;<a style="display:none;margin-top: -18px;margin-left: 93px;" id="ShowAllLink_FC" href="#" onclick="document.getElementById('blurred').style.display='';ShowAllClicked_FC();return false;" ><span>Show All</span></a></span></div>
                                        
                                        
                                        <div style="clear:both"></div>
                            
                                    <div style="text-align:center; margin-bottom:15px">
                                        
                                        <div><button class="slds-button slds-button--brand" id="addSelConBtn" disabled="true" style="pointer-events: none;" title="Add Selected Contact(s)" onclick="document.getElementById('blurred').style.display='';addToList_stdcontact();return false;">Add Selected Contact(s)</button></div>
                                        
                                    </div>
            
                            </div>
                            <div style="clear:both"></div>
                            <h3 class="slds-section-title--divider" style="    margin-top: 1px;">
                                   
                                Selected Fundraising Contacts
                            </h3>
             
                            <div id="filterGridContactDiv1">
                                <div style=" margin-top:0px">
                                            <style>
                                                #Past_FundraisingsContact3 {width:100% !important; height:232px; border:none !important; padding:0 !important; }
                                                 
                                                 #Past_FundraisingsContact3 .aw-column-0  input{ text-align:center !important; position:relative; top:-4px}
                                                 #Past_FundraisingsContact3 .aw-column-0 { text-align:center !important;}
                                                #Past_FundraisingsContact3 .aw-column-5 {border-right:none !important; text-align:center;   }
                                                #Past_FundraisingsContact3 .aw-column-5 input{ }
                                                 .aw-strict .aw-grid-row {
                                                    height: 27px;
                                                    line-height:27px
                                                    }
                                                #Past_FundraisingsContact3 select{ width:78%; line-height: 14px; }
                                                </style>
                                                <style>
                                                    .aw-strict .aw-grid-header, .aw-strict .aw-grid-footer, .aw-strict .aw-grid-cell { height: 30px !important; }
                                                    .aw-classic .aw-combo-button {background-color: #fff !important; border: none !important;border-collapse: collapse; -moz-box-sizing: inherit !important;}
                                                    .aw-classic .aw-combo-button td { border: none !important; }
                                                    .aw-combo-box .aw-image-none + .aw-item-ruler + .aw-item-text { line-height: 1.7em !important; }
                                                    
                                                    .aw-classic .aw-list-box { border: none !important; }
                                                    
                                                    .aw-classic .aw-grid-control .aw-input-box, .aw-classic .aw-grid-control .aw-combo-box { border:#ccc 1px solid;}
                                                     .aw-item-marker { margin-left: 40%;};
                                                    
                                                </style>
                                                <div id="divSelectedContact" class="slctedContactyDivCLs"></div>
                                                </div> 
                                                <div style="font-size:12px; margin-top:5px;">Records: <span id="RcrdCntSlctFundr"></span></div>
            
                                    </div>
                        
                        
                      </div>
                        
                        <div class="slds-modal__footer">
                            <button class="slds-button slds-button--neutral"  id="cancel1" onclick="cancelFundrcontacts();clear_grid_select_contact('btnReset');primaryContact='';closepopup('fancybox_background','FancyboxContainer');tempSearchHisotry = '';return false;">Cancel</button>
                            <button class="slds-button slds-button--neutral slds-button--brand"  id="apply1" onclick="createFundrcontacts();clear_grid_select_contact('btnReset');primaryContact='';closepopup('fancybox_background','FancyboxContainer');tempSearchHisotry = '';return false;">Apply</button>
                        </div>  
                    
                  </div>
                <style>
                    .slds-media__body {position:relative; top:0px;}
                    .slds-page-header { padding: 24px 24px 24px !important; }
                </style>
                    <div id="err" style="display:none;"></div>
                    <div class="slds-page-header" role="banner" >
                        <a class="slds-button slds-button--neutral" title="Back" style="float:right;position: relative;top: 6px;"  href="{!JSENCODE(retrunURlID)}" >
                            <div class="slds-icon icon-utility-back slds-icon-text-default" style="width:15px;">
                                <img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/back_60.png')}" />
                            </div>
                        </a>
                      <div class="slds-media">
                        <div class="slds-media__figure">
                          <div class="slds-icon slds-icon-custom-3 slds-icon--large">
                              <img src="{!URLFOR($Resource.SLDS100, 'assets/icons/custom/custom3_60.png')}" />
                          </div>
                        </div>
                        
                        <apex:outputPanel id="LndngBanner">
                        
                        <div class="slds-media__body">
                          <p class="slds-page-header__title slds-truncate slds-align-middle" title="{!lstFundDetails.name}" > Create Fundraisings for {!JSENCODE(FundName)}</p>
                          <p class="slds-text-body--small" style="display:{!IF((lstFundDetails.Investment_Category__c == 'Co-investment'), 'block', 'none')};">Company : {!JSENCODE(portFolioName)}</p>
                        </div>
                       
                        </apex:outputPanel>
                      </div>
                    </div>
                
                <!-- Wrench Icon Component START-->
                <c:WrenchIcon id="Main_wrench" componentID="wrenchCMF" UsingPageName="CMF" Objects="Account:Contact" FixedSelectedFieldsApiName="Contact:Name:Contact Name:string_@_Account:Name:Account Name:string" PopUpHeader="Columns to Display"/> 
                
                <c:WrenchIcon id="Main_wrench_PFC" componentID="wrenchCMF_PFC" UsingPageName="CMF_PFC" Objects="Fundraising_Contact__c:Fundraising__c" FixedSelectedFieldsApiName="Fundraising__c:Name:Fundraising Name:string" PopUpHeader="Columns to Display"/>
                
                <c:WrenchIcon id="Main_wrench_PFA" componentID="wrenchCMF_PFA" UsingPageName="CMF_PFA" Objects="Fundraising__c" FixedSelectedFieldsApiName="Fundraising__c:Name:Fundraising Name:string" PopUpHeader="Columns to Display"/>     
                <!-- Wrench Icon Component END -->  
                
                <!-- Start Content Box -->
                <div class="ContentBox">            
                    <h2 class="slds-section__title">1 - Search for Investors</h2>
                    <div class="cl"></div><br />
                    
                    <style>   
                        .ui-state-active {
                          background:#fcb141 !important;
                          border-radius: 0 0 0 0 !important;
                          color:#fff !important;
                        }

                    </style>
                    <script>
                      $(function() {
                        $( "#tabs" ).tabs();
                      });
                    </script>
                    
                    
                      <div class="slds-tabs--scoped" id="tabs">
                        
                        <script>
                        $(document).ready(function(){
                            $(".ShowHide_drpdwn").click(function(){
                                $(".tab_drpdwn").toggle();
                            });
                        });
                        </script>
                        
                        <style>
                            .tab_drpdwn { background:#fff; box-shadow:#eee 0px 1px 4px; border-radius:0 0 3px 3px; position:absolute; top:135px; left:24px; z-index:1; border: 1px solid rgb(233, 242, 247); width: 300px; }
                            .tab_drpdwn a { display:block; padding:7px 16px; text-decoration:none; }
                            .tab_drpdwn a:hover { background:#f5f5f5; text-decoration:none; }
                        </style>
                        <script>

                        j$(document).ready(function(){
                            $('#idSrchTabExstngFund').addClass('ui-state-active');
                            $('#idSrchTabAccCont').removeClass('ui-state-active');
                            $(".option1").click(function(){
                                showImz();
                                
                                $(".tab_drpdwn").hide();
                                
                                $('#idSrchTabExstngFund').addClass('ui-state-active');
                                $('#idSrchTabAccCont').removeClass('ui-state-active');
                                $(".content2").hide();
                                $(".content1").show();
                            });
                            $(".option2").click(function(){
                                showImz();
                                $('#idSrchTabExstngFund').addClass('ui-state-active');
                                $('#idSrchTabAccCont').removeClass('ui-state-active');
                                $(".tab_drpdwn").hide();
                                $(".content1").hide();
                                $(".content2").show();
                            });
                            $("body").click(function()
                            {
                                $(".tab_drpdwn").hide();
                            });
                            $("#idSrchTabAccCont").click(function()
                            {
                                $('#idSrchTabAccCont').addClass('ui-state-active');
                                $('#idSrchTabExstngFund').removeClass('ui-state-active');
                            });        
                            $(".arrow-down, .SearchBasedOnPastDeal_tab").mouseover(function()
                            {
                                $(".tab_drpdwn").show();
                                $(".tab_drpdwn").css("z-index", "100");
                                $(".tab_drpdwn").css("background-color", "white");
                                $(".arrow-down").show();        
                            });
                            $(".arrow-down, .SearchBasedOnPastDeal_tab").mouseout(function()
                            {
                                $(".tab_drpdwn").hide();
                                $(".tab_drpdwn").css("z-index", "100");
                                $(".tab_drpdwn").css("background-color", "white");
                                $(".arrow-down").show();        
                            });
                            $(".tab_drpdwn").mouseover(function()
                            {
                                $(".tab_drpdwn").show();
                                $(".tab_drpdwn").css("z-index", "100");
                                $(".tab_drpdwn").css("background-color", "white");
                                $(".arrow-down").show();        
                            });
                        });
                        
                        
                        </script>
                        <div class="tab_drpdwn" style="display:none">
                            <a style="border-bottom:#f5f5f5 1px solid;" class="option1" id="AllContTabId" onclick="rfrshPnlMthd(this.id);">All Contacts</a>
                            <a class="option2" id="FundContTabId" onclick="rfrshPnlMthd(this.id);">Only Fundraising Contacts</a>
                        </div>
                        
                        
                        
                        <ul class="slds-tabs--scoped__nav" role="tablist" >
                          <li id="idSrchTabExstngFund"  class="slds-tabs--scoped__item slds-text-heading--label"  style="width:50%;"  role="presentation" ><a  class="slds-tabs--scoped__link SearchBasedOnPastDeal_tab"  role="tab" tabindex="0" aria-selected="true" aria-controls="tab-scoped-1" id="tab-scoped-1__item" style="padding-right: 44px;" >Search based on Existing Funds <span class="arrow-down ShowHide_drpdwn"><div class="slds-icon icon-utility-down slds-icon-text-default" style="width:16px; height:16px; position: relative; top: -50px; left: 240px;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/down_60.png')}" /></div></span></a></li>
                          <li id="idSrchTabAccCont" class="slds-tabs--scoped__item slds-text-heading--label" style="width:50%" role="presentation"><a class="slds-tabs--scoped__link" href="#tab-scoped-1" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-scoped-1"  id="AccContTabId" onclick="rfrshPnlMthd(this.id);">Search based on Accounts and Contacts</a></li>
                        </ul>
                        
                        <!-- Start Search based on Existing Funds -->
                        <div id="tab-scoped-1" class="slds-tabs--scoped__content slds-show" role="tabpanel" aria-labelledby="tab-scoped-1__item">
                                <div id="oldFundRsngDiv" style="display:none;"> 
                                    <div class="content1"><p>This will display all Contacts associated with the Institutions who have Fundraisings attached to the Fund.</p></div>
                                    <div class="content2"  style="display:none"><p>This will display only Contacts related to the Fundraisings of the Fund.</p></div>
                                    <apex:outputpanel id="FundValLndPgPnlId">
                                    <table class="table" border="0" cellpadding="5" cellspacing="0" style="margin:10px 0 15px 0;">
                                        <tr>
                                            <td class="td1" width="100"><span class="slds-required">*</span>Fund Name</td>
                                            <td class="td2">
                                                <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right" style="width:250px">
                                                    
                                                    <div aria-hidden="true" class="slds-input__icon slds-icon-text-default"/> <!--img src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/search_60.png')}" style="position: relative; bottom: 3px;" /--> 
                                                   <apex:inputField html-autocomplete="off" value="{!FundLookupLndPg.Fund_Name__c}" id="FndNmLdPgId"  style="border:2px solid #c23934" styleclass="inputTextClass"/>
                                                    
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="td1"></td>
                                            <td class="td2" style="padding-top:0 !important; line-height: 12px;">
                                                <apex:message id="StdErrMsgFndLndPg"  styleClass="mandatory_msg" for="FndNmLdPgId"/>
                                                <span id="ReqFldLndPgId"  style="display:none" class="mandatory_msg">Please enter a value</span>
                                            </td>
                                        </tr>                           
                                    </table>
                                    </apex:outputpanel>
                                </div>
                                <apex:outputPanel id="AdvnceFilterSrch">
                                    <div style=" border:#eee 1px solid; border-radius:5px;" class="largeimge">
                                     <table cellpadding="0" cellspacing="0" border="0" class="table" style="width:100%; margin-top: 0px;">
                                        <tr class="bg">
                                            <td style="padding-bottom:0 !important;">
                                                <div style="width:auto; margin:0px;">
                                                    <table cellpadding="5" cellspacing="0" border="0" class="table" style="width:100%; margin-top: 0px !important;">
                                                        <tr class="bg">
                                                            <td width="2%">&nbsp;</td>
                                                            <td width="33%">
                                                                <h3 class="slds-section-title--divider" style="display: block;width: 99.5%;border-radius: 5px;margin-left: 5px;">Field</h3>
                                                            </td>
                                                            <td width="33%">
                                                                <h3 class="slds-section-title--divider" style="display: block;width: 99.2%;border-radius: 5px;margin-left: 4px;">Operator</h3>
                                                            </td>
                                                            <td>
                                                                <h3 class="slds-section-title--divider" style="display: block;width: 100%;border-radius: 5px;margin-left: 4px;">Value</h3>
                                                            </td>
                                                       </tr>
                                                    </table>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                        <td style="padding-top:0 !important;">
                                            <div id="AddRemoveSection2">
                                                <table cellpadding="5" cellspacing="0" border="0" class="table" style="width:100%;"  id="accounttablerow" >
                                                    <tr class="bg_gray_light"> 
                                                        
                                                        <td width="2%">
                                                            <div id="RowCount1" style="margin-top:9px;">
                                                                1.
                                                            </div>
                                                        </td>
                                                        <td width="33%">
                                                            <div class="slds-select_container" style="width:99.5%;"> 
                                                                <input style="width:100%;" id="a1aa" type="text" placeholder="None" class="apexaccountandPipelineautocomplete slds-input" onclick="setFocusOnInput('a1aa');" name="inputleftcolmn1"/>
                                                            </div>
                                                        </td>                                         
                                                        <td width="33%" style="padding-top:none !important;">
                                                            <div class="slds-select_container" style="width:99%;">
                                                               
                                                                <select id="opt1" class="slds-select" style="width:100%;">
                                                                    <option value="None">--None--</option>
                                                                </select>
                                                            </div>
                                                        </td>
                                                        <td style="padding-top:none !important;">                                            
                                                            <input type="text" id="criteriatextbox1" class="slds-input" style="width:65%"/>
                                                            <img id="dtediv1" class="celen" src="{!URLFOR($Resource.PE_35,'PE_3.5/images/icon_calendar.png')}" alt="Calendar" onload="initialiseCalendar(this,'criteriatextbox1')" onmouseover="initialiseCalendar(this,'criteriatextbox1')" style=" left: 0px; display: none;margin-top:1px; cursor: pointer;position:relative;" /> 
                                                            <img id="lookupdiv1" src="{!URLFOR($Resource.PE_35,'PE_3.5/images/search_16.png')}" onclick="popup(1);" alt="Search" style="position:relative;left:0px;top:1px; display:none;" />
                                                            <div id="tab_showCond" class="AddRow_AND" style="display:none;margin-top: 30%;"> AND </div> 
                                                        </td>
                                                    </tr> 
                                                    <tr class="alt" id="row1_1">
                                                        <td colspan="4" style="border: 1px solid;border: medium none;color: #FF0000;padding: 0 0 4px 32px;font-family: Arial,Helvetica,sans-serif;font-size: 12px;line-height: 16px;">
                                                            <!-- Error messages for Row one-->
                                                            <div id="ak_error1" style="display:block;position: relative;right:-59px;padding: 0 0 3px 61.1%;"> </div>
                                                            <div style="display:none;color: #ff0000 !important;" id="divfname_opt1">
                                                                <apex:outputLabel >Please select a Field.</apex:outputLabel>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </table>
                                                
                                            </div>
                                        </td>
                                    </tr>
                                
                            </table>
                                    </div>
                                  <table cellpadding="5" cellspacing="0" border="0" class="table" style="margin-top:0px;">
                                  <tr>
                                    <td style="padding-left:0;">
                                    <span id="advanceflter_AddRowNew" title="Add Row"> <a title="Add Row" class="add" id="AddRow2" style="font-size: 12px;" onclick="showrow();">Add Row</a><br /></span> 
                                       
                                    </td>
                                  </tr>
                                </table>
                                
                                <apex:outputPanel id="addfilter" rendered="{!IF((selectedTabVal !='AllContTabId' ), 'true', 'false')}" style="padding: 0pt 0px 0pt 0pt;"> <!-- output panel for Add filter/Clear filter logic link-->
                                    <apex:commandLink id="cmdlink" style="font-size: 12px;  width: 86px;   " styleClass="add" value="Add Filter Logic"    onclick="clear_filterADD();" reRender="addreRender" title="Add Filter Logic"/>
                                    <apex:commandLink id="clearfilter_1"  style="display:none;font-size: 12px;  width: 93px; " styleClass="add" value="Clear Filter Logic" onclick="hide_filterlogicerror();" reRender="addreRender" title="Clear Filter Logic"/>             
                                
                                    <apex:outputPanel id="errorvolname1">
                                        <div id="textval" style="margin-left: -9px;" >
                                            <apex:outputlabel >
                                                <div id="addFilterlogic" style="display:none;">
                                                    <p class="filters" id="filterLogic" style="padding-left:10px;">
                                                        <label style="color:#666666;font-size: 12px;"  title="Filter Logic">Filter Logic</label>
                                                        <br clear="left"/> 
                                                        <apex:inputtext size="40" style="border: 1px solid #D7D7D7;padding: 2px 3px;margin-left: -1px" value="{!proptxtdata}" id="textfilt" />      
                                                        <a id="helpLinkpic" class="helpLink" title="Example: (1 OR 2) AND 3"   href="javascript:openPopupFocusEscapePounds%28%27%2Fhelp%2Fdoc%2Fuser_ed.jsp%3Floc%3Dhelp%26target%3Dworking_with_advanced_filter_conditions_in_reports_and_list_views.htm%26section%3DReports%27%2C%20%27Help%27%2C%20700%2C%20600%2C%20%27width%3D700%2Cheight%3D600%2Cresizable%3Dyes%2Ctoolbar%3Dyes%2Cstatus%3Dno%2Cscrollbars%3Dyes%2Cmenubar%3Dyes%2Cdirectories%3Dno%2Clocation%3Dno%2Cdependant%3Dno%27%2C%20false%2C%20false%29%3B">
                                                            <apex:image url="{!URLFOR($Resource.SLDS100,'assets/icons/utility/info_60.png')}" style="width:18px; height:18px; position:relative;" /> 
                                                            
                                                        </a> 
                                                    </p>  
                                                </div>                  
                                            </apex:outputlabel>                  
                                            <div  class="" id="filterErrorvalidation" style="color:##FF0000;display:none;border: medium none;color: #FF0000;padding: 0 0 4px 10px;font-family: Arial,Helvetica,sans-serif;font-size: 12px;line-height: 16px;">
                                                
                                            </div>
                                            <div class="" id="filtererrfracc_conreferenced" style="color:##FF0000;;display:none;border: medium none;color: #FF0000;padding: 0 0 4px 10px;font-family: Arial,Helvetica,sans-serif;font-size: 12px;line-height: 16px;">
                                                Some filter conditions are defined but not referenced in your filter logic.<br/>Please review all the filters in your filter logic.
                                            </div>
                                        </div> 
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <apex:outputPanel style="color:#FF0000;padding-left: 10px;" id="www"> <!-- output panel for Add filter logic validation error -->
                                    {!ErrorVal}
                                </apex:outputPanel> 
                                
                            </apex:outputPanel> 
                            <apex:actionFunction name="RfrshFilterDiv" id="RfrshFilterDivId" rerender="AdvnceFilterSrch" oncomplete="TabClicked('{!selectedTabVal}');createdata_rll();jQueryUtilityOfAutoComplete('inputleftcolmn1', arrayOfAccountFields);return false;" status="Status"  >  
                                <apex:param id="TabId" name="TabId" value=""  assignTo="{!selectedTabVal}"/>
                            </apex:actionFunction>
                              <style>
                                @media screen and (min-width: 480px) {
                                    AddRow_AND {
                                        position:relative;
                                        top:3px;
                                    }
                                }
                              </style>
                              
                                       
                                <center>
                                     <a href="#" type="reset" title="Clear" class="slds-button slds-button--neutral" onclick="blnOnLoad=true;rfrshPnlMthd(glblTabId); return false;" >Clear</a>
                                    <apex:commandbutton styleclass="slds-button slds-button--brand click_for_step_2" id="advance_filterapplybtn" onclick="document.getElementById('blurred').style.display='block';" oncomplete="searchClicked();"  style="height: 36px;" title="Search" value="Search" rerender="FundValLndPgPnlId"/> 
                                    
                                    <apex:outputPanel id="FndLkValPnlId" >
                                        <script>debugger;
                                            LndPgFundId='{!FundLookupLndPg.Fund_Name__c}';
                                            fundType = '{!JSENCODE(lstFundDetails.Investment_Category__c)}';
                                            lstFundDetails_id = '{!JSENCODE(fundId)}';
                                            CompSelected='{!JSENCODE(portFolioID)}';
                                        </script>
                                    </apex:outputPanel>
                                    
                                    
                                    <apex:actionFunction name="SearchClickedAF" id="SearchClickedAFId" rerender="FndLkValPnlId" oncomplete="Advance_filter_apply();"/>
                                    <apex:actionFunction name="LoadPageHomeAF" action="{!ContClickedPopup}" oncomplete="LndngPageRfrsh();" rerender="CompTypBlnPnlId" />
                                    <apex:actionFunction name="LndngPageRfrshAF" rerender="HomePopupPanelId,LndngBanner" />
                                    
                                    
                                    
            
                                </center>
                        </div>                
                        
                      </div>
                    
                    
                    <br />            
                     
                    <div class="cl"></div>
                    
                    
                </div>
                <!-- End Content Box -->
                
                    <!-- Start Content Box -->
                    
                    <div class="ContentBox">
                        <input type="text" id="fcs" style="width: 0px; Height: 0px; padding:0px; border:#fff 1px solid; position:relative; opacity:0;"/>
                        <h2  class="slds-section__title" style="display: block;">
                            <span >
                                2 - Select Investors  
                                
                            </span >
                            <span style="position: absolute; top: 17px;    right: 24px;">
                                <a id="wrenchMnGridId" title="Columns to Display" onclick="document.getElementById('blurred').style.display='block';show_wrenchpopup_pagewrenchCMF(this,event);  return false;">
                                    <div aria-hidden="true" class="slds-icon icon-utility-custom-apps slds-icon-text-default" style="position:relative; top:34px; right:1px;"><img src="{!URLFOR($Resource.SLDS100, 'assets/icons/custom/custom19_60.png')}" /></div>
                                </a>
                            </span >
                        </h2>
                        <div class="cl"></div><br />
                        
                        <div style="margin:0px;">
                            <h3  class="slds-section-title--divider">a. Select from Search Results</h3>
                            <div class="cl"></div>
                        
                            <style>
                            
                            
                            #Select_from_Search_Results {width:100% !important; height:339px; border:none !important; padding:0 !important; border-top:#eee 1px solid !important; border-bottom:#eee 1px solid !important; } 
                            #Select_from_Search_Results .aw-column-0 { text-align:center !important;}
                            #Select_from_Search_Results .aw-column-6 { border-right:none !important;}
                            #Select_from_Search_Results-view-box-middle .aw-hpanel-middle {top:31px !important;}
                             .aw-strict .aw-grid-row {
                                height: 27px;
                                line-height:27px
                                }
                            </style>
                            <div id="gridmain" style="margin-top:1px;">
                                                        
                            </div>
                            <script type="text/javascript">
                                $(function () {
                                    $('.checkall').click(function () {
                                        $('.checked_one').attr('checked', this.checked);
                                    });
                                });
                            </script>                    
                          <table cellpadding="5" cellspacing="0" border="0" class="table">
                          <tr>
                            <td style="padding-left:0; font-size: 12px;">
                                <span>Records: <span id="grid2" style="width:100%;"> </span> &nbsp;<a style="display:none;margin-top: -19px;margin-left: 95px;" id="ShowAllLink" onclick="document.getElementById('blurred').style.display='';ShowAllClicked(); return false;" ><span>Show All</span></a></span>
                            </td>
                          </tr>
                        </table>
                        
                        
                        <div class="cl"></div><br />
                            <div><button class="slds-button slds-button--brand" id="addBtn1" disabled="true" style="pointer-events:none" title="Add to Fudraising List" onclick="addToList();return false;">Add to Fundraising List</button></div>
                        <div class="cl"></div><br />
                        
                        <h3 class="slds-section-title--divider" id="SlctdInstGridId">b. Review Investors List </h3>
                        <div class="cl"></div>
                        
                            <style>
                            #Institution_of_Selected_Contacts {width:100% !important; height:310px; border:none !important; padding:0 !important; border-top:#eee 1px solid !important; border-bottom:#eee 1px solid !important; } 
                            #Institution_of_Selected_Contacts .aw-column-0 { text-align:center !important;}
                            #Institution_of_Selected_Contacts .aw-column-4 { border-right:none !important;}
                            
                             .aw-strict .aw-grid-row {
                                height: 27px;
                                line-height:27px
                                }
                            </style>
                            
                            <script type="text/javascript">
                                $(function () {
                                    $('.checkall').click(function () {
                                        $('.checked_one').attr('checked', this.checked);
                                    });
                                });
                            </script>
                                
                             <div id="gridreviewresult">
                               </div>       
                            
                            <table cellpadding="5" cellspacing="0" border="0" class="table">
                              <tr>
                                <td style="padding-left:0; font-size: 12px;">
                                   <div id="IdRecCntAddLst"></div>
                                </td>
                              </tr>
                            </table>
                            
                        
                        </div>
                    </div>
                    <!-- Start Content Box -->
                    
                    
                    <!-- Start Content Box -->
                    <div class="ContentBox">
                        <h2 class="slds-section__title">3 - Default Fundraising Values (Optional)</h2>
                        <div class="cl"></div><br />
                        
                         <div style=" border:#eee 1px solid; border-radius:5px;">
                            <table cellpadding="0" cellspacing="0" border="0" class="table" style="width:100%;">
                                <tr class="bg">
                                    <td style="padding-bottom:0 !important;">

                                            <table cellpadding="5" cellspacing="0" border="0" class="table" style="width:100%;">
                                                <tr class="bg">
                                                    <td width="50%">
                                                        <h3 class="slds-section-title--divider" style="display: block;width: 100%;border-radius: 5px;">Field</h3>
                                                    </td>
                                                    <td>
                                                        <h3 class="slds-section-title--divider" style="display: block;width: 100%;border-radius: 5px;">Value</h3>
                                                    </td>
                                               </tr>
                                            </table>

                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-top:0 !important;">
                                      <div id="AddRemoveSection">
                                        
                                        <table cellpadding="5" cellspacing="0" border="0" class="table" style="width:100%;"  id="AddRemoveSection1">
                                            <tr id="row51" class="bg_gray_light">
                                              <td width="50%">
                                                      <div class="slds-select_container" style="width:100%;">
                                                        
                                                        <select id="a51aa" onchange="checkNew(this,1);" onclick="closeCal();" class="slds-select">
                                                            <option value="None">--None--</option>
                                                        </select>
                                                        
                                                       
                                                      </div>
                                                </td>
                                                <td>                                            
                                                    <input id="criteriatextbox51" type="text"  class="slds-input" style="width:80%;" value="" />
                                                </td>
                                                <td> 
                                                    <br/>
                                                    <img id="dtediv51" class="celen" src="{!URLFOR($Resource.PE_35,'PE_3.5/images/icon_calendar.png')}" alt="Calendar" onload="initialiseCalendar(this,'criteriatextbox1')" onmouseover="initialiseCalendar(this,'criteriatextbox51')" style="float: left;position: relative;left: -88px;top: -9px; display: none; cursor: pointer;"/>
                                                    <img id="lookupdiv51" src="{!URLFOR($Resource.PE_35,'PE_3.5/images/search_16.png')}" onclick="popupNew(1);return false;" alt="Search" style="float: left;position: relative;left: -88px;top: -9px; display: none;"/>
                                                </td>
                                            </tr>
                                            <tr  class="alt" id="row51_1" >  
                                                <td><!-- Error messages for Row one-->
                                                    <div style="display:none;color: #ff0000 !important;" id="divfname_opt51" >
                                                        <apex:outputLabel >Please select a field.</apex:outputLabel>
                                                    </div>  
                                                </td>
                                                <td colspan="2">
                                                    <!--div id="ak_error51" style="color: #FF0000 ! important;display:block;padding: 0 0 4px 0%;left: 1px; position: relative;" --> 
                                                    <div id="ak_error51" style="color: #FF0000; display:block;position: relative; top:-5px;"> </div>                                              
                                                   
                                                </td>
                                            </tr>                                              
                                        </table>
                                       
                                      </div>
                                     </td>
                                </tr>
                                
                            </table>
                            </div>
                                <table cellpadding="5" cellspacing="0" border="0" class="table">
                                    <tr>
                                        <td style="padding-left:0;">
                                            <a title="Add Row" class="add" id="AddRow1" style="font-size: 12px;">Add Row</a><br />
                                        </td>
                                    </tr>
                                        
                                </table>
                               <script type="text/javascript">
                                    $('#AddRow1').click(function () {
                                        advanceflter_addrowNew();
                                        try
                                        {
                                            close_allcalendaropen();
                                        }
                                        catch(err)
                                        {
                                            alert('1.Calender Issue');
                                        } 
                                    });
                                    $('#RemoveRow1').click(function () {
                                        try
                                        {
                                            close_allcalendaropen();
                                        }
                                        catch(err)
                                        {
                                            alert('2.Calender Issue');
                                        } 
                                        advanceflter_removerowNew();
                                        
                                    });
                                    
                                </script>
                        
                        
                    </div>
                    <apex:outputPanel id="ErrStatusPnl">
                        <script>
                            state = {!if(ErrorStatusInsufficient==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                            clnAccDiff= {!if(ErrorStatusDiffAcc==true,'true','false')};//Added By Qadier Khan for PE 3.5 11 OCT 2017.
                            ErrorMsgDiffAcc='{!JSENCODE(ErrorMsgDiffAcc)}';
                            closepopup('fancybox_background','FancyboxContainer');
                            showConfirmation();
                         </script>
                    </apex:outputPanel>
                    <!-- Start Content Box -->
                    <apex:actionFunction name="createMassFundraisings" action="{!createMassFundraisings}"   rerender="ErrStatusPnl"  >
                        <apex:param name="fieldArray" assignTo="{!fieldArray}" value="fieldArray" />
                        <apex:param name="valueArray" assignTo="{!valueArray}" value="valueArray" />
                        <!--apex:param name="mainRowData" assignTo="{!accCount}" value="mainRowData" /-->
                        <apex:param name="jstr" assignTo="{!jsonString}" value="jstr" />
                        <!--apex:param name="selectedFundId" assignTo="{!fundId}" value="selectedFundId" /-->
                        <!--apex:param name="inputid" assignTo="{!portFolioID}" value="inputid" /-->
                        <!--apex:param name="inputvalue" assignTo="{!portFolioValue}" value="inputvalue"/-->
                    </apex:actionFunction>
                    
                    
                    <div style="margin:20px 24px 0; text-align:center; padding-bottom:24px;">
                        <a Class="slds-button slds-button--brand" id="cmfButton" disabled="true" title="Create Fundraisings" onClick="document.getElementById('blurred').style.display='';createMassFundraising();return false;" >Create Fundraisings</a> 
                        
                        <div class="cl"></div>
                        <!--a title="Warning" onclick="Warning_PopUp();">Warning</a-->
                    </div>
                
                
            </div>
            <!-- / REQUIRED SLDS WRAPPER --> 
            <apex:actionFunction name="backRedirectionAF" immediate="true" action="{!BackRedirection}"/>
            <apex:actionFunction name="backToHomeAF" action="{!BackRedirectionHome}"/>
        </apex:form>
        </body>
            <script>
                var namespacePrefix="{!JSENCODE(NameSpacePrefix)}";
                
                function backRedirection()
                {
                    if(strSourceLoc!='')
                    {
                        backRedirectionAF();
                        //window.location.href = '{!JSENCODE(retrunURlID)}';
                    }
                    else
                    {
                        backToHomeAF();
                    }
                }
                
                function ReqFldCheckComp()
                {
                    var strFundNmPcklst=document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').value;
                    if(document.getElementById('j_id0:CreateFundraisingFormId:lookupIdFundCom').value=='')
                    {   blnSlctLst=true;
                    }
                    if(strFundNmPcklst=='')
                    {
                        document.getElementById('lookupFundComDsblDivId').style.display='none';
                        document.getElementById('lookupFundComDivId').style.display='';
                    }
                    else
                    {
                        document.getElementById('lookupFundComDsblDivId').style.display='';
                        document.getElementById('lookupFundComDivId').style.display='none';
                    }
                    if(blnSlctLst==false )
                    {
                        document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=true;
                    }
                    else 
                    { 
                        document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=false;
                    }
                    
                }
                function FieldsCheckHmePopup()
                {
                    if(blnDfrntCoInvstFund!=false)
                    {
                        var strFundName=document.getElementById('j_id0:CreateFundraisingFormId:lookupId').value;
                        if (strFundName=='')
                        {
                             document.getElementById('ReqFundFieldId').style.display='';
                             document.getElementById('blurred').style.display='none';

                        }
                        else
                        {
                            document.getElementById('ReqFundFieldId').style.display='none';
                            LoadPageHomeAF();
                        }
                    }
                    else
                    {
                        LoadPageHomeAF();
                    }
                }
                function ContClickedComp()
                {
                    var strFundNmPcklst=document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').value;
                    var strFundNmLookup=document.getElementById('j_id0:CreateFundraisingFormId:lookupIdFundCom').value;
                    if(document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgCompanyCom')==null &&  document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgFundLkupCom')==null)
                    {
                        if(strFundNmPcklst=='' && strFundNmLookup=='')
                        {
                            document.getElementById('ErrMsgFundComId').style.display='';
                            document.getElementById('blurred').style.display='none';
                            document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').classList.add("error_border");
                        }
                        else if(strFundNmPcklst!='' || strFundNmLookup!='')
                        {
                            document.getElementById('ErrMsgFundComId').style.display='none';
                            document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').classList.remove("error_border");
                            LoadPageHomeAF();
                        }
                    
                    }
                    else
                    {
                        document.getElementById('blurred').style.display='none';
                    }
                    
                }
                var Contact_acc = {};
                function searchClicked()
                { 
                    blnOnLoad=false;
                    blnShowAllClicked = false;
                    blnSearchClicked=true;
                    AccConMaplist = {};
                    if(glblTabId !='AllContTabId')
                    {
                        document.getElementById('filtererrfracc_conreferenced').style.display='none';
                        document.getElementById('filterErrorvalidation').style.display = 'none';
                    }
                    if(glblTabId =='AccContTabId')
                    {
                        SearchClickedAF();
                    }
                    else
                    {
                        var strFndNmLndPg=document.getElementById('j_id0:CreateFundraisingFormId:FndNmLdPgId').value;
                        var StdErrMsgFndLndPg=document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgFndLndPg');
                        if(StdErrMsgFndLndPg == null)
                        {
                            if(strFndNmLndPg =='')
                            {
                                document.getElementById('ReqFldLndPgId').focus();
                                document.getElementById('ReqFldLndPgId').style.display='';
                                document.getElementById('j_id0:CreateFundraisingFormId:FndNmLdPgId').classList.add("error_border");
                                document.getElementById('blurred').style.display='none';
                            }
                            else
                            {
                                document.getElementById('ReqFldLndPgId').style.display='none';
                                document.getElementById('j_id0:CreateFundraisingFormId:FndNmLdPgId').classList.remove("error_border");
                                ContQuery=false;
                                ContQueryCreated=false;
                                SearchClickedAF();
                                
                            }
                        }
                        else
                        {
                            document.getElementById('blurred').style.display='none';
                        }
                        
                    }
                }
                   
            
                function openLookup(baseURL, width, modified, searchParam){
                    var originalbaseURL = baseURL;
                    var originalwidth = width;
                    var originalmodified = modified;
                    var originalsearchParam = searchParam;
                    var lookupType = baseURL.substr(baseURL.length-3,3);
                    if (modified == '1') baseURL = baseURL + searchParam;

                    var isCustomLookup = false;

                    // Following "001" is the lookup type for Account object so change this as per your standard or custom object
                    if(lookupType == "001"){
                        var urlArr = baseURL.split("&");
                        var objectName = '';
                        var txtId = '';
                        if(urlArr.length > 2) {
                            urlArr = urlArr[1].split('=');
                            txtId = urlArr[1];
                            
                        }
                        baseURL = "/apex/CustomLookupForObject?txt=" + txtId;
                        baseURL = baseURL +"&objectName="+objectName+ "&frm=" + escapeUTF("{!$Component.CreateFundraisingFormId}");
                        if (modified == '1') {
                            baseURL = baseURL + "&lksearch=" + searchParam;
                        }
                    }

                    if(isCustomLookup == true){
                        openPopup(baseURL, "lookup", 350, 480, "width="+width+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=no", true);
                    }
                    else {
                        if (modified == '1') originalbaseURL = originalbaseURL + originalsearchParam;
                        openPopup(originalbaseURL, "lookup", 350, 480, "width="+originalwidth+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=no", true);
                    } 
                }
                function sortarraydata(getarray,sortingcloumn,sortingdirection){
                        
                    if(sortingdirection=='ASC'){
                   
                        getarray.sort(function (a,b){
                            var x = a[sortingcloumn].toLowerCase(), y = b[sortingcloumn].toLowerCase();
                             if (x > y) return  1;
                            if (x< y) return -1;
                            return 0;
                        }); 
                    }else{
                  
                        getarray.sort(function (a,b) {
                        var x = a[sortingcloumn].toLowerCase(), y = b[sortingcloumn].toLowerCase();
                        if (x< y) return  1;
                        if (x > y) return -1;
                        return 0;
                        }); 
                    }  
                    return getarray;
                }
                    
                
                     
                    function check(getpicklist, picklistnumber)
                    {        
                        
                        try {
                            close_allcalendaropen();
                        } catch (err) {}
                        $(".error_txt").css({
                            display: "none"
                        });
                        var lookupiconid = 'lookupdiv' + picklistnumber;
                        var calendericonid = 'dtediv' + picklistnumber;
                        var picklistvaluearray=getpicklist.split(':');
                        var arraylength1 = picklistvaluearray.length;
                        var operatorpicklistid = 'opt' + picklistnumber;
                        var textboxid = 'criteriatextbox' + picklistnumber;
                        var elSel = document.getElementById(operatorpicklistid);
                        if (picklistvaluearray[arraylength1 - 1].toUpperCase() == 'PICKLIST' || picklistvaluearray[arraylength1-1].toUpperCase() ==  'MULTIPICKLIST' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'BOOLEAN' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'REFERENCE') 
                        {
                            document.getElementById(calendericonid).style.display = 'none';
                            document.getElementById(lookupiconid).style.display = 'inline';
                        } else if (picklistvaluearray[arraylength1 - 1].toUpperCase() == 'DATETIME' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'DATE') {
                            document.getElementById(lookupiconid).style.display = 'none';
                            document.getElementById(calendericonid).style.display = 'inline';
                        }
                        else {
                            document.getElementById(calendericonid).style.display = 'none';
                            document.getElementById(lookupiconid).style.display = 'none';
                        }
                        
                        var i;
                        for (i = elSel.length - 1; i >= 0; i--) {
                            elSel.remove(i); // to remove all added options
                        }
                        var a = document.getElementById(operatorpicklistid);
                        if (picklistvaluearray[arraylength1 - 1].toUpperCase() == 'BOOLEAN' ) { // for BOOLEAN and REFERENCE   
                            
                            a.options.add(new Option('equals', '='));
                            a.options.add(new Option('not equal to', '!='));
                        } else if (picklistvaluearray[arraylength1 - 1].toUpperCase() == 'MULTIPICKLIST') { // for MULTIPICKLIST                                    
                            a.options.add(new Option('equals', '='));
                            a.options.add(new Option('not equal to', '!='));
                            a.options.add(new Option('includes', 'includes'));
                            a.options.add(new Option('excludes', 'excludes'));
                        } else if (picklistvaluearray[arraylength1 - 1].toUpperCase() == 'DOUBLE' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'INT' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'INTEGER' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'CURRENCY' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'PERCENT' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'DATETIME' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'DATE') { // for DATE,DATETIME,PERCENT,CURRENCY,INTEGER,DOUBLE
                            a.options.add(new Option('equals', '='));
                            a.options.add(new Option('not equal to', '!='));
                            a.options.add(new Option('less than', '<'));
                            a.options.add(new Option('greater than', '>'));
                            a.options.add(new Option('less or equal', '<='));
                            a.options.add(new Option('greater or equal', '>='));
                        } else if (picklistvaluearray[arraylength1 - 1].toUpperCase() == namespacePrefix + 'EMAIL__C' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'EMAIL' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'TEXTAREA' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'URL' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'TEXT' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'STRING' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'PHONE' || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'PICKLIST'  || picklistvaluearray[arraylength1 - 1].toUpperCase() == 'REFERENCE' )  { // for PICKLIST,PHONE,STRING,TEXT,URL,TEXTAREA,EMAIL
                            a.options.add(new Option('equals', '='));
                            a.options.add(new Option('not equal to', '!='));
                            a.options.add(new Option('starts with', 'like'));
                            a.options.add(new Option('less than', '<'));
                            a.options.add(new Option('greater than', '>'));
                            a.options.add(new Option('less or equal', '<='));
                            a.options.add(new Option('greater or equal', '>='));
                            a.options.add(new Option('contains', 'contains'));
                            a.options.add(new Option('does not contain', 'doesnotcontain'));
                        } else {
                            a.options.add(new Option('equals', '='));
                            a.options.add(new Option('not equal to', '!='));
                            a.options.add(new Option('starts with', 'like'));
                            a.options.add(new Option('less than', '<'));
                            a.options.add(new Option('greater than', '>'));
                            a.options.add(new Option('less or equal', '<='));
                            a.options.add(new Option('greater or equal', '>='));
                            a.options.add(new Option('contains', 'contains'));
                            a.options.add(new Option('does not contain', 'doesnotcontain'));
                            a.options.add(new Option('includes', 'includes'));
                            a.options.add(new Option('excludes', 'excludes'));
                        }
                        document.getElementById(textboxid).value = '';
                    }
                    function popup(data) 
                    {
                        var textboxid = 'criteriatextbox' + data;
                        var fieldid = 'a' + data + 'aa';
                        //var get_field = document.getElementById(fieldid).value;
                        var fieldLabal = document.getElementById(fieldid).value
                        var get_field = arryAccountContactApiLabel[fieldLabal];
                        var fieldarray = get_field.split(':');
                        if (navigator.userAgent.indexOf("Chrome") != -1) {
                            window.open('/apex/picklistpopup?AKobjectt=' + fieldarray[0].trim() + '&page=CreateFundraisings&pickval=' + fieldarray[1] + '&datatype_f=' + fieldarray[3] + '&nameid=' + textboxid + '&operation=search', 'Ratting', 'width=450,height=350,toolbar=0,menubar=0,status=1,resizable=0');
                        } else
                        {
                            window.open('/apex/picklistpopup?AKobjectt=' + fieldarray[0].trim() + '&page=CreateFundraisings&pickval=' + fieldarray[1] + '&datatype_f=' + fieldarray[3] + '&nameid=' + textboxid + '&operation=search', 'Ratting', 'width=450,height=350,toolbar=0,menubar=0,status=1,resizable=0,scrollbars=yes');
                        }
                    }
                    function close_allcalendaropen(){
                        try {
                            var getcallength = oGlobalArray.length;
                            for (var i = 0; i < getcallength; i++) {
                                try {
                                    _fnCloseCalendar(i);
                                } catch (err) {}
                            }
                        } catch (err) {
                            alert(err);
                        }
                    }
                    function showrow(){
                        if (number_of_rows < 10) {
                            var rcount = 1;
                            number_of_rows = number_of_rows + 1;
                            var table = document.getElementById('accounttablerow');                      
                            var rowCount = table.rows.length;
                            var row = table.insertRow(rowCount);
                            var rowid = number_of_rows;
                            rowid = CustomFilterRowId[CustomFilterRowId.length -1]+1;
                            var setrowid1 = "row" + rowid;
                            CustomFilterRowId.push(rowid);
                            row.setAttribute("class", "bg_gray_light");
                            row.setAttribute("id", "row" + rowid);
                            //Row Count Div
                            var CellCountTd = document.createElement('TD');
                            var CountDiv = document.createElement('DIV');
                            CountDiv.setAttribute("id", "RowCount"+rowid);
                            CountDiv.setAttribute("style", "margin-top: 9px;");
                            var CountText = document.createTextNode(""+number_of_rows+".");
                            CountDiv.appendChild(CountText);
                            CellCountTd.appendChild(CountDiv);
                            var Cell1 = document.createElement('TD');
                            Cell1.setAttribute("style", "width:32%;");
                            Cell1.setAttribute("class", "txt_center");
                            var Div_d1 = document.createElement('DIV');
                            Div_d1.setAttribute("class", "slds-select_container");
                            var selectfld = document.createElement("input");
                            var inputTextId = '\'a' + rowid + 'aa\'';
                            selectfld.type = "text";
                            selectfld.setAttribute("style", "width:99.5%;");
                            selectfld.setAttribute("placeholder", "None");
                            selectfld.setAttribute("id", 'a'+rowid+'aa');
                            selectfld.setAttribute("Name", 'inputleftcolmn'+rowid);
                            selectfld.setAttribute("class", "apexaccountandPipelineautocomplete slds-input");
                            selectfld.setAttribute("onclick", "setFocusOnInput("+inputTextId+")");                         
                            
                            Div_d1.appendChild(selectfld);
                            Cell1.appendChild(Div_d1);
                            var Cell2 = document.createElement('TD');
                            Cell2.setAttribute("style", "width:18%;");
                            var Div_d2 = document.createElement('DIV');
                            Div_d2.setAttribute("class", "slds-select_container");
                            var Selectopt = document.createElement("select");
                            Selectopt.setAttribute("id", 'opt' + rowid);
                            Selectopt.setAttribute("style", "width:99%;");
                            for (var i = 0; i < operatorarray.length; i++) {
                                var option = document.createElement("option");
                                option.setAttribute("value", operatorarray[i][0]);
                                option.innerHTML = operatorarray[i][1];
                                Selectopt.appendChild(option);
                            }
                            Selectopt.setAttribute("class", "slds-select");                            
                            Div_d2.appendChild(Selectopt);
                            Cell2.appendChild(Div_d2);
                            var Cell3 = document.createElement('TD');
                            Cell3.setAttribute("style", "width:33%;");
                            var spann1 = document.createElement('SPAN');
                            var Elementtxt = document.createElement("input");
                            Elementtxt.type = "text";
                            Elementtxt.class = "input_txt";
                            Elementtxt.id = "criteriatextbox" + rowid;
                            Elementtxt.setAttribute("class", "slds-input");
                            Elementtxt.setAttribute("style", "width:65%;");                             
                            var spann1 = document.createElement('SPAN');
                            var Lookupimg = document.createElement("img");
                            Lookupimg.setAttribute('src', "{!URLFOR($Resource.PE_35,'PE_3.5/images/search_16.png')}");
                            Lookupimg.setAttribute('alt', 'Search');
                            Lookupimg.setAttribute("id", "lookupdiv" + rowid);
                            Lookupimg.setAttribute("style", "position:relative;top:1px;");
                            Lookupimg.setAttribute("onclick", "popup(" + rowid + ");return false;");
                            Lookupimg.style.display = 'none';
                            //spann1.appendChild(Lookupimg);
                            var oImg = document.createElement("img");
                            oImg.setAttribute('src', "{!URLFOR($Resource.PE_35,'PE_3.5/images/icon_calendar.png')}");
                            oImg.setAttribute('alt', 'Calendar');
                            oImg.setAttribute("id", "dtediv" + rowid);
                            oImg.setAttribute("class", "celen");
                            var Txtbox_id = 'criteriatextbox' + rowid;
                            oImg.setAttribute("onload", "initialiseCalendar(this,'" + Txtbox_id + "')");
                            oImg.setAttribute("onmouseover", "initialiseCalendar(this,'" + Txtbox_id + "')");
                            oImg.setAttribute("style", "margin-left:5px; margin-top:0px;");
                            oImg.style.display = 'none';
                            //spann1.appendChild(oImg);
                            var Elementbtn = document.createElement("a");
                            Elementbtn.setAttribute('class', 'btn_icon_delete');              
                            Elementbtn.title = "Remove Row";
                            Elementbtn.setAttribute("style","position:relative;top:4px;left:2px;display:inline !important;");
                            Elementbtn.setAttribute("id", "h1new" + rowid);
                           // var Text_d = document.createTextNode("AND");
                            spann1.setAttribute("style","margin-left:5px;");
                            spann1.setAttribute('class', 'AddRow_AND'); 
                            var Div_d = document.createElement('DIV');
                            var Text_d = document.createTextNode("AND");
                            Div_d.setAttribute("id","tab_showCond"+rowid);
                            if(blnAdvanceFilterClicked)
                            {
                                Div_d.setAttribute("style","font-weight: normal;visibility:hidden; display:none;margin-top:25%;margin-left: 13px;");
                            }
                            else
                            {
                                Div_d.setAttribute("style","font-weight: normal; display:none;margin-top:25%;margin-left: 13px;"); 
                            }
                            
                            Div_d.setAttribute("class","AddRow_AND"); 
                            Div_d.appendChild(Text_d); 
                           // spann1.appendChild(Text_d);
                            Elementbtn.setAttribute("onclick", "Advanceflter_Removerow(" + rowCount + "," + rowid + ",\'" + setrowid1 + "\')");                     
                            Cell3.appendChild(Elementtxt);
                            Cell3.appendChild(Lookupimg);
                            Cell3.appendChild(oImg);
                            Cell3.appendChild(Elementbtn);
                            Cell3.appendChild(Div_d);
                            
                            
                            row.appendChild(CellCountTd);
                            row.appendChild(Cell1);
                            row.appendChild(Cell2);
                            row.appendChild(Cell3);
                        
                            rowCount = table.rows.length;
                            var Errrow = table.insertRow(rowCount);
                            Errrow.setAttribute("class", "rowB");
                            Errrow.setAttribute("id", "row" + rowid + "_" + rowid);
                            var Errcell = document.createElement('TD');
                            Errcell.setAttribute("colspan", "4");
                            Errcell.setAttribute("style", "border: 1px solid;border: medium none;color: #FF0000;padding: 0 0 4px 32px;font-family: Arial,Helvetica,sans-serif;font-size: 12px;line-height: 16px;");
                            var errordiv1 = document.createElement('div');
                            errordiv1.setAttribute("id", "ak_error" + rowid);
                            errordiv1.setAttribute("style", "padding: 0 0 4px 60.3%;position: relative; right: -66px;");
                            var errordiv2 = document.createElement('div');
                            errordiv2.setAttribute("id", "divfname_opt" + rowid);
                            errordiv2.setAttribute("style", "display:none;color: #FF0000 ! important;");
                            errordiv2.innerHTML = "Please select a Field.";
                            Errcell.setAttribute("id", "errTD" + rowid);
                            Errcell.appendChild(errordiv1);
                            Errcell.appendChild(errordiv2);
                            Errrow.appendChild(Errcell);
                            var xxx = "h1new" + rowid;
                            var mmm = rowid - 1;
                            var yyy = "h1new" + mmm;
                            var nameIs = 'inputleftcolmn'+rowid;
                            jQueryUtilityOfAutoComplete(nameIs, arrayOfAccountFields);
                            ShowEndFunc(number_of_rows);
                            if (rowid > 0) {
                                document.getElementById(xxx).style.display = ''; 
                            }
                            if (number_of_rows == 10) {
                                document.getElementById('advanceflter_AddRowNew').className = 'not_active';
                                $("#advanceflter_AddRowNew").css({
                                    color: "#dddddd;",
                                    cursor: "default"
                                });
                            }
                        }
                    }
                    function Advanceflter_Removerow(a, b, c)
                        {
                            try
                            {
                                try {
                                    Close_allcalendaropen();
                                } catch (err) {}
                                if (number_of_rows > 1) 
                                {
                                    changeinadvnacefilter = true;
                                    var Deleterownumber = 0;
                                    var table = document.getElementById('accounttablerow');
                                    var rowCount = table.rows.length;
                                    for (var i = 0; i < rowCount; i++) 
                                    {
                                        if (table.rows[i].id == c) {
                                            Deleterownumber = i;
                                            break;
                                        }
                                    }
                                    table.deleteRow(Deleterownumber + 1);
                                    table.deleteRow(Deleterownumber);
                                    RemoverowArry.push(b);
                                    var getpos = GetPosition_Advance(b, CustomFilterRowId);
                                    CustomFilterRowId.splice(getpos, 1);
                                    for(i=0;i<CustomFilterRowId.length;i++)
                                    {
                                        j=i+1;
                                        document.getElementById('RowCount'+CustomFilterRowId[i]).innerHTML = j+'.';
                                    }
                                    number_of_rows = number_of_rows - 1;
                                }
                                    document.getElementById('advanceflter_AddRowNew').className = 'add active';
                                    $('#advanceflter_AddRowNew').css({
                                        color: "#015ba7;",
                                        cursor: "pointer"
                                    });
                                    if (number_of_rows < 10) {
                                        document.getElementById('advanceflter_AddRowNew').style.display = '';
                                    } else {
                                        document.getElementById('advanceflter_AddRowNew').style.display = 'none';
                                    }


                                ShowEndFunc(number_of_rows);
                            }
                            catch(err)
                            {
                                sessionError(err); 
                            }
                        }
                    function GetPosition_Advance(elementToFind, arrayElements)
                    {
                        try
                        {
                            var i;
                            for (i = 0; i < arrayElements.length; i += 1) {
                                if (arrayElements[i] === elementToFind) {
                                    return i;
                                }
                            }
                                return null; //not found
                        }
                        catch(err)
                        {
                            sessionError(err); 
                        }
                    }
                    function ShowEndFunc(totalRow_ip)
                    {   
                        try
                        {
                            for(i=0;i<CustomFilterRowId.length;i++){
                                if(i==0){
                                    document.getElementById('tab_showCond').style.display = 'none';
                                }
                                else
                                    document.getElementById('tab_showCond'+CustomFilterRowId[i]).style.display = 'none';
                            }
                            if(totalRow_ip > 1){
                                for(i=0;i<CustomFilterRowId.length-1;i++){
                                    if(i==0){
                                        document.getElementById('tab_showCond').style.display = 'inline';
                                    }
                                    else
                                        document.getElementById('tab_showCond'+CustomFilterRowId[i]).style.display = 'inline';
                                }
                            }
                            else{
                                document.getElementById('tab_showCond').style.display = 'none';
                            }
                            
                        }
                        catch(err){
                            sessionError(err); 
                        }
                    }
                   
                    
                    function Advance_filter_apply()
                    {
                    arrContSrchFlds = [];
                        
                        arrFundRAccSrchFlds= [];
                         
                        try{
                            for(var i=0; i<CustomFilterRowId.length; i++){
                                document.getElementById('divfname_opt'+CustomFilterRowId[i]).innerHTML = '';
                                document.getElementById('ak_error'+CustomFilterRowId[i]).innerHTML = '';
                            }
                            temp_accidsarray = new Array();
                            arrObjSelectedRows = new Array();
                            arrObjConIdSelectedRows_temp=new Array();
                            try
                            {
                                close_allcalendaropen();
                            }
                            catch(err)
                            {
                              alert('4.Calender Issue');
                            }
                            
                            if(!chk_blankField()){
                                if(chk_advancefiltervalidation())
                                {
                                    limit = 50000;
                                    if(clearButton == 'True'){
                                        limit = 0;
                                        clearButton = 'false';
                                    }
                                    searched = 'true';
                                    SortAcc = 'true';
                                    
                                    advance_filter_qry();
                                    for(var i=0; i<CustomFilterRowId.length; i++){
                                        document.getElementById('ak_error'+CustomFilterRowId[i]).innerHTML = '';
                                    } 
                                }
                                $('#addBtn1').attr('disabled','disabled');
                                document.getElementById('addBtn1').style.pointerEvents = 'none';
                            }
                            return false;
                        }
                        catch(err)
                        {   alert('apply filter entered   '+err);
                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('10');
                                
                            }
                        }
                    }
                    function chk_blankField(){
                        checkNullField = false;
                        var tempNo = 0 ;
                        for(var i=0;i<CustomFilterRowId.length;i++){
                            //var get_field1=document.getElementById('a'+CustomFilterRowId[i]+'aa').value;
                            var get_value1=document.getElementById('criteriatextbox'+CustomFilterRowId[i]).value;
                            var fieldValue = document.getElementById('a'+CustomFilterRowId[i]+'aa').value;
                            var get_field1= 'None';
                                
                                if(fieldValue != '')
                                    get_field1 = arryAccountContactApiLabel[fieldValue];
                                if (get_field1=='' || get_field1== undefined || get_field1== null)
                                {
                                    get_field1= 'None';
                                }
                            if(get_field1.toLowerCase() == 'None'.toLowerCase() && get_value1.trim().length == 0){
                                tempNo++ ;
                            }
                        }
                        
                        
                        
                        if(tempNo == CustomFilterRowId.length){
                            limit = 50000;
                            
                            checkNullField = true;
                            ContQuery=false;
                            
                            
                            if(glblTabId != 'AllContTabId')
                            {
                                <!--------------------------Advance Filter Logic Added---------------------------------------->
                                if(glblTabId=='AccContTabId' && checkNullField==true)
                                {
                                    duplicateErr_PopUp();
                                    document.getElementById('blurred').style.display='none';
                                }
                                else
                                {
                                    if(document.getElementById('j_id0:CreateFundraisingFormId:textfilt').value!='' &&  checkNullField==true)
                                    {
                                        document.getElementById('blurred').style.display='none';
                                        duplicateErr_PopUp();//Search criteria blank error popup
                                    }
                                    else
                                    {
                                        finalfiltr= new Array();
                                        whereClauseCreation(arrContSrchFlds);
                                    }
                                }
                                <!--------------------------Advance Filter Logic Ended---------------------------------------->
                            }
                            else
                            {
                                whereClauseCreation(arrContSrchFlds);
                            }
                        }
                        $('#addBtn1').attr('disabled','disabled');
                        document.getElementById('addBtn1').style.pointerEvents = 'none';
                        return checkNullField;
                    }
                    
                    function duplicateErr_PopUp() 
                    {
                        loadPopupnew('fancybox_background','duplicateErr_PopUp');
                        centerPopupnew('duplicateErr_PopUp');
                    }
                    function ContactRemove_PopUp() 
                    {
                        loadPopupnew('fancybox_background','ContactRemove_PopUp');
                        centerPopupnew('ContactRemove_PopUp');
                    }
                    function advanceflter_removerow()
                    {
                        close_allcalendaropen();
                        if(number_of_rows >1)
                        {
                            var deleterownumber=0;
                            var table=document.getElementById('accounttablerow');
                            var rowCount = table.rows.length;
                            var row = document.getElementById('row'+number_of_rows);
                            var table = row.parentNode;
                            while ( table && table.tagName != 'TABLE' )
                                table = table.parentNode;
                            if ( !table )
                                return;
                            table.deleteRow(row.rowIndex+1);            
                            table.deleteRow(row.rowIndex); 
                            number_of_rows=number_of_rows-1;
                            showConditions(number_of_rows);
                        }
                        if(number_of_rows==1){
                            document.getElementById('addrow').className =''; 
                            document.getElementById('removerow').className ='not_active'; 
                        }
                        else if(number_of_rows>1 && number_of_rows<10){
                            $("#removerow").show();
                            document.getElementById('addrow').className ='';  //remove class for search 1
                        }
                    }
                    
                    function chk_advancefiltervalidation()
                    {   try
                        {
                            var error = 0;
                            var checkForNone = true;
                            for(var i=0;i<CustomFilterRowId.length;i++)
                            {    
                                var namespaceforcls=Namespaceprefix1.substring(0, Namespaceprefix1.length-2);
                                if(namespaceforcls.length>0)
                                {
                                    namespaceforcls=namespaceforcls+'.';
                                }
                                try
                                {
                                    var fieldValue = document.getElementById('a'+CustomFilterRowId[i]+'aa').value;
                                    var get_field1= 'None';
                                    if(fieldValue != '')
                                        get_field1 = arryAccountContactApiLabel[fieldValue];
                                    if (get_field1=='' || get_field1== undefined || get_field1== null)
                                    {
                                        get_field1= 'None';
                                    }
                                    var get_operator1 =  document.getElementById('opt'+CustomFilterRowId[i]).value;
                                    var get_value1=document.getElementById('criteriatextbox'+CustomFilterRowId[i]).value;                
                                    var getfldarray=get_field1.split(':');
                                    if(get_field1.toLowerCase()!='None'.toLowerCase() && get_value1.trim().length != 0){
                                        checkForNone = false;
                                        if(getfldarray[3].toLowerCase()=='date'.toLowerCase() && get_value1.trim().length != 0 && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim())
                                            {
                                                try
                                                {
                                                    if(get_value1.length>0 && get_value1.trim()!='' && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim())
                                                    {
                                                        sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdate", {getqueryjson:get_value1}); 
                                                    }
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('5');
                                                    }
                                                    else{
                                                        error = 6;                    
                                                        $( '#ak_error'+CustomFilterRowId[i]).html( '<div class="error_txt">Invalid date.</div>' );
                                                    }
                                                }   
                                            }
                                            else if(getfldarray[3].toLowerCase()=='datetime'.toLowerCase() && get_value1.trim().length != 0 && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim())
                                            {
                                                if(get_value1.length>0 && get_value1.trim()!='')
                                                {
                                                    try
                                                    {
                                                        var getvaluearray=get_value1.split(' ');                            
                                                        if(getvaluearray.length>1)
                                                        {   
                                                            sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdatetime", {getqueryjson:get_value1});                                  
                                                        }
                                                        else
                                                        {
                                                            sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdate", {getqueryjson:get_value1});                                                                   
                                                        }
                                                    }
                                                    catch(err)
                                                    {
                                                        if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                            sessionError('6');
                                                        }
                                                        else{
                                                            error = 6;                    
                                                            $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid date.</div>' );
                                                        }
                                                    }
                                                }
                                            }
                                        // seprate field value from comma
                                        var get_value_array = get_value1.trim().split(',');   
                                        for(var z=0; z<get_value_array.length; z++)
                                        {
                                            // validation for Number field conversion.
                                            if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && (getfldarray[3].toLowerCase()=='double'.toLowerCase() || getfldarray[3].toLowerCase()=='int'.toLowerCase()))
                                            {
                                                var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error                            
                                                try
                                                {
                                                    parseInt(get_value_array[z].trim());
                                                    if(objRegExp.test(get_value_array[z]) == false)
                                                    {
                                                        error = 7;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid number.</div>' );                 
                                                    }
                                                                                        
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('7');
                                                    }
                                                    else{
                                                        error = 7;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid number.</div>' );
                                                    }
                                                }
                                            }
                                            // validation for currency field conversion.
                                            else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='CURRENCY'.toLowerCase())
                                            {
                                                var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error                            
                                                try
                                                {
                                                    parseInt(get_value_array[z].trim());
                                                    if(objRegExp.test(get_value_array[z]) == false)
                                                    {
                                                        error = 8;                    
                                                        $( '#ak_error'+CustomFilterRowId[i]).html( '<div class="error_txt">Invalid currency.</div>' );                 
                                                    }
                                                    
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('8');
                                                    }
                                                    else{
                                                        error = 8;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid currency.</div>' );
                                                    }
                                                }
                                            }
                                            // validation for percentage field conversion.
                                            else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='percent'.toLowerCase())
                                            {
                                                var xx;
                                                var pp;
                                                var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error
                                                try
                                                {
                                                    if(get_value_array[z].trim().split(' ').length < 2)
                                                    {
                                                       
                                                        if(get_value_array[z].indexOf('.%') == (get_value_array[z].length-2))
                                                        {
                                                            get_value_array[z] =   get_value_array[z].replace(".%", ".0%"); ;
                                                        }
                                                        if(get_value_array[z].indexOf('%') > -1){
                                                            if(get_value_array[z].indexOf('%') < (get_value_array[z].length-1)){
                                                                error = 11;                    
                                                                $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid Number.</div>' );
                                                            }
                                                            xx = get_value_array[z].replace(/%/g, " ");
                                                            pp = true;
                                                        }
                                                        
                                                        if(pp){
                                                            xx = xx.trim();
                                                            pp = false;
                                                        }
                                                        else
                                                            xx = get_value_array[z].trim();
                                                            
                                                            
                                                        if(objRegExp.test(xx) == false)
                                                        {
                                                            error = 11;                    
                                                            $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid Number.</div>' );                 
                                                        }
                                                       
                                                    }
                                                    else{
                                                        error = 11;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid Number.</div>' );                 
                                                    }
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('9');
                                                    }
                                                    else{
                                                        error = 11;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Invalid Number.</div>' );
                                                    }
                                                }   
                                            }
                                            
                                            // validation for boolean field conversion.
                                            else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='boolean')
                                            {   //alert('entered...boolean');
                                                var ppp=0;
                                                if(get_value1 != null){
                                                    if(get_value1.toLowerCase() == 'true'){
                                                        ppp++;
                                                    }
                                                    if(get_value1.toLowerCase() == 'false'){
                                                        ppp++;
                                                    }
                                                    if(ppp != 1){
                                                        error = 9;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Please use "True" or "False".</div>' );
                                                        break;
                                                    }
                                                }
                                            }
                                            // validation for picklists fields conversion.
                                            else if(get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='picklist')
                                            {   //alert('Entered... Picklist...');
                                                try
                                                {
                                                    if(get_operator1 == '=' || get_operator1 == '!=')
                                                    {
                                                        var newValue = '';
                                                        var obj = getfldarray[0];
                                                        if(obj == 'Fundraising Contact' || obj == 'Fundraising'){
                                                            if(obj=='Fundraising Contact')
                                                            {
                                                                obj="Fundraising_Contact";
                                                            }
                                                            obj = Namespaceprefix1+obj+'__c';
                                                        }
                                                        var valArray = get_value_array[z].trim().split(',');   // unique is for unique elements from picklist.                      
                                                        var desForPicklist = sforce.connection.describeSObject(obj);
                                                        
                                                        for (var d=0; d<desForPicklist.fields.length; d++) 
                                                        {
                                                            var field = desForPicklist.fields[d];                                                       
                                                            if(field.name == getfldarray[1])
                                                            {                                           
                                                                var picklistVals = field.picklistValues;  
                                                                for (var p = 0; p<valArray.length; p++) 
                                                                {
                                                                    var containsVal = false;
                                                                    for(var g = 0; g<picklistVals.length; g++)
                                                                    {                                                   
                                                                        if (picklistVals[g].value.toLowerCase().trim() == valArray[p].toLowerCase().trim())                                                 
                                                                            containsVal = true;                                             
                                                                    }
                                                                    if(containsVal == false)
                                                                    {
                                                                        error = 10;                 
                                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                                                        break;
                                                                    }
                                                                }                                                                       
                                                                break;
                                                            }
                                                        } 
                                                    }
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('10');
                                                    }
                                                    else{
                                                        error = 10;                    
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                                    }   
                                                }
                                            }
                                            
                                            // validation for multi-select picklists fields conversion.
                                            else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='multipicklist')
                                            {
                                                try
                                                {
                                                    var newValue = '';
                                                    var obj = getfldarray[0];
                                                    if(obj == 'Fundraising Contact' || obj == 'Fundraising'){
                                                        if(obj=='Fundraising Contact')
                                                        {
                                                            obj="Fundraising_Contact";
                                                        }
                                                        obj = Namespaceprefix1+obj+'__c';
                                                    }
                                                    var valArray = get_value_array[z].trim().split(';');                                
                                                    var desForPicklist = sforce.connection.describeSObject(obj);
                                                    
                                                    for (var d=0; d<desForPicklist.fields.length; d++) 
                                                    {
                                                        var field = desForPicklist.fields[d];                                                       
                                                        if(field.name == getfldarray[1])
                                                        {                                           
                                                            var picklistVals = field.picklistValues;                                        
                                                            for (var p = 0; p<valArray.length; p++) 
                                                            {
                                                                var containsVal = false;
                                                                for(var g = 0; g<picklistVals.length; g++)
                                                                {                                               
                                                                    if (picklistVals[g].value.toLowerCase().trim() == valArray[p].toLowerCase().trim())                                                 
                                                                        containsVal = true;                                             
                                                                }
                                                                if(containsVal == false)
                                                                {
                                                                    error = 10;    
                                                                    $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                                                    break;
                                                                }
                                                            }                                                                       
                                                            break;
                                                        }
                                                    }                                
                                                }
                                                catch(err)
                                                {
                                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                        sessionError('11');
                                                    }
                                                    else{
                                                        error = 10;        
                                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                                    }
                                                }
                                            }
                                        }
                                        document.getElementById('criteriatextbox'+CustomFilterRowId[i]).value = get_value_array;
                                    }
                                    else if(get_field1.toLowerCase()!='None'.toLowerCase()){
                                         checkForNone = false;
                                    }                   
                                    else if(get_field1.toLowerCase()=='None'.toLowerCase() && get_value1.trim().length > 0){
                                      error = 11;                    
                                      $( '#divfname_opt'+CustomFilterRowId[i] ).html( '<div class="error_txt">Please select a field.</div>' );
                                      document.getElementById('divfname_opt'+CustomFilterRowId[i]).style.display = 'block';
                                    }
                                    var errorValTop=document.getElementById('ak_error'+CustomFilterRowId[i]).innerText;
                                    errorValTop=errorValTop.length;
                                    if(document.getElementById('divfname_opt'+CustomFilterRowId[i]).style.display =='block' || document.getElementById('criteriatextbox'+CustomFilterRowId[i]).style.display =='block' || errorValTop > 0)
                                    {
                                        document.getElementById('blurred').style.display = 'none';
                                    }
                                    //
                                }
                                catch(err)
                                {
                                    alert(err);
                                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                        sessionError('12');
                                    }
                                    else{
                                        error = 6;                    
                                        $( '#ak_error'+CustomFilterRowId[i] ).html( '<div class="error_txt">Please enter a correct value.</div>' );
                                    }
                                }
                            }
                            if(checkForNone==true)
                            {
                                return false;
                            }
                            else if(parseInt(error)==0)
                            {
                               return true; 
                            }
                            else{
                                return false;
                            }
                        }
                        catch(err)
                        {
                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('13');
                            }
                            else{
                                alert('chk_advancefiltervalidation error: '+err);
                            }   
                        }
                    }
                    var alertNo = 0; 
                    function sessionError(c){                    
                        if(err.faultcode == 'sf:INVALID_SESSION_ID')
                        {
                            if(alertNo == 0){
                                alertNo++;
                               // alert('Your session has expired. Please refresh your page.');
                                loadPopupnew('fancybox_background','SessionExpireError');
                                centerPopupnew('SessionExpireError');
                                
                            }
                        }   
                    }
                    var strFundTypIndex;
                    var strInstTypIndex;
                    var strNameTypIndex;
                    var queryMoreMainGrid;
                    var allRecsSize=0;
                    //queryMoreMainGrid=true;
                    //Execute Query for Grid 1 
                    function executequeryMain(fields,whereCondition)
                    { 
                        Namespaceprefix1 = Namespaceprefix1 ;
                        try{ 
                            document.getElementById('err').style.display='none';
                            columnarry = new Array();
                            booleanColumnNos = new Array();
                            headernames = new Array();
                            getSelectedfields = new Array();
                            allcontactrecords = new Array();
                            var getqry;              
                            var skipNext = false;
                            if(headerfields != null && headerfields != 'null' && headerfields != ''){            
                                getSelectedfields = MainGridFildsAC; //fields;//
                                
                            }
                            else{
                                return false;
                            } 
                            headernames.unshift("") ; 
                            setHeaderValues(whereCondition);
                            
                            if(!blnOnLoad)
                            {   getcolumn = getqueryMain.substring(6,getqueryMain.indexOf(' from ')); 
                                queryMoreMainGrid =true;
                                gridValueFinal="";
                                var clumnsplit = getcolumn.split(',');        
                                for( var i=0; i<clumnsplit.length; i++)
                                {
                                   columnarry.push(clumnsplit[i].trim());
                                }
                                
                                try
                                {
                                  var mainqueryresult = sforce.connection.query(getqueryMain); // Main Query
                                }
                                catch(err)
                                {    
                                    var a=document.getElementById('j_id0:CreateFundraisingFormId:textfilt').value;
                                    if(a!='')
                                    {
                                        document.getElementById('filterErrorvalidation').innerHTML="Your filter logic is imprecise or incorrect. Please use correct format for <br/> filter logic. e.g.- 1 AND 2 , 1 OR 2, (1 OR 2) AND 3 etc."; 
                                        document.getElementById('filterErrorvalidation').style.display="block";
                                        document.getElementById('blurred').style.display="none";

                                    } 
                                    queryMoreMainGrid = false;
                                }
                                
                                    while(queryMoreMainGrid)
                                    {   
                                        if(glblTabId=='AllContTabId' && ContQueryCreated==false )
                                        {   
                                           whereClauseCreation(arrContSrchFlds);
                                        }
                                        else
                                        {
                                            var records;   
                                            records = mainqueryresult.getArray("records");
                                            
                                            for (var i = 0; i < records.length; i++)
                                            {   
                                                var str1=new Array();
                                                for(var j=0;j<columnarry.length;j++)
                                                {   
                                                    if(columnarry[j].indexOf(AccfldsInstTyp) > -1)
                                                    {
                                                        strInstTypIndex=j;
                                                    }
                                                    if(columnarry[j].indexOf(AccFldsAccName) > -1)
                                                    {
                                                        strNameTypIndex=j;
                                                    }
                                                    if(columnarry[j].indexOf(AccfldsFundTyp) > -1)
                                                    {
                                                        strFundTypIndex=j;
                                                    }
                                                    if(columnarry[j].indexOf('.')==-1)
                                                    {
                                                        if(records[i].get(columnarry[j]) != null){
                                                            var conData = records[i].get(columnarry[j]) ;
                                                            var myRegExp = new RegExp('<' ,'gi');
                                                            conData = conData.replace(myRegExp,'&#60;');
                                                            myRegExp = new RegExp('>' ,'gi');
                                                            conData = conData.replace(myRegExp,'&gt;');
                                                            str1.push(conData);
                                                        }   
                                                        else
                                                            str1.push('');
                                                    }                           
                                                    else
                                                    {                                       
                                                        var getparentobjname=columnarry[j].substring(0,columnarry[j].indexOf('.'));
                                                        var getparentobjfld=columnarry[j].substring(columnarry[j].indexOf('.')+1,columnarry[j].length);
                                                        var getparentobj=records[i].get(getparentobjname);                                
                                                       
                                                        if(getparentobj!=null)
                                                        {  
                                                            var getparentobjfldvalue;
                                                              
                                                            if(skipNext == false)
                                                                getparentobjfldvalue = getparentobj.get(getparentobjfld);
                                                            else
                                                                getparentobjfldvalue = getparentobj.get(getparentobjfld) + records[i].get(columnarry[j+1]);                                      

                                                            if(getparentobjfldvalue != null){
                                                                var myRegExp = new RegExp('<' ,'gi');
                                                                getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&#60;');
                                                                myRegExp = new RegExp('>' ,'gi');
                                                                getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&gt;');
                                                                str1.push(getparentobjfldvalue);
                                                            }
                                                            else
                                                                str1.push('');
                                                        }
                                                        else
                                                        {
                                                           str1.push('');
                                                        }             
                                                   }  
                                                }
                                               allcontactrecords.push(str1);
                                            }
                                        }   
                                        allRecsSize=mainqueryresult.getInt("size");
                                        if(mainqueryresult.getBoolean("done"))
                                        {                    
                                            queryMoreMainGrid = false;
                                        }
                                        else
                                        {
                                            if(blnShowAllClicked==true)
                                            {
                                                queryMoreMainGrid = true;
                                                mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);
                                            }
                                            else
                                            {
                                                queryMoreMainGrid = false;
                                            }
                                        }
                                        
                                    }
                                    createdata();
                               
                            }
                            else
                            {
                                createdata();
                            }
                        }
                        catch(ex)
                        {
                            alert('Execute query error   '+ex);
                            if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('15');
                            }
                            else if(ex.faultcode == 'sf:INVALID_FIELD'){
                                showSecurityError('E1');
                            }
                            else{
                               document.getElementById('err').innerHTML ='<Strong>Error2</Strong>: '+ex;
                               document.getElementById('err').style.display='block';
                            }
                        }    
                    }
                    function setHeaderValues(whereCondition)
                    { 
                        try
                        {   getqueryMain="";
                            var objectType="";
                            var LimitVal='';
                            var RcrtTypId;
                            arrdatetimeIndex = new Array();
                            mailindex_scontact = new Array();
                            arrdateIndex = new Array();
                            arrcurrencyIndex = new Array();
                            blnValIndx_scontact = new Array();
                            arrAccNameIndex= new Array();
                            arrContNameIndex= new Array();
                            arrContEmailIndex= new Array();
                            
                            for (var i=0; i<getSelectedfields.length; i++) 
                            {   
                                
                                var ObjectName=getSelectedfields[i].split(':')[0].toLowerCase();
                                var MainfieldName = getSelectedfields[i].split(':')[1].toLowerCase();
                                var FieldLabel=getSelectedfields[i].split(':')[2].toLowerCase();
                                var FieldType=getSelectedfields[i].split(':')[3].toLowerCase();
                                
                                
                                if(FieldType=='datetime' || FieldType=='multipicklist' || FieldType=='date')
                                {
                                    
                                    if(arrNonSortHdrs.indexOf(i+1)==-1)
                                    {
                                        arrNonSortHdrs.push(i+1);
                                    }
                                    
                                }
                                
                                if(FieldType=='datetime')
                                {
                                    if(arrdatetimeIndex.indexOf(i+1)==-1)
                                    {
                                        arrdatetimeIndex.push(i+1);
                                    }
                                }
                                if(FieldType=='date')
                                {
                                    if(arrdateIndex.indexOf(i+1)==-1)
                                    {
                                        arrdateIndex.push(i+1);
                                    }
                                }
                                if(FieldType.trim().toLowerCase().indexOf('currency') > -1){
                                    if(arrcurrencyIndex.indexOf(i+1)==-1)
                                    {
                                        arrcurrencyIndex.push(i+1);
                                    }
                                }
                                if(FieldType=='email')
                                {
                                    
                                    if(mailindex_scontact.indexOf(i+1)==-1)
                                    {
                                        mailindex_scontact.push(i+1);
                                    }
                                    if(ObjectName=='contact')
                                    {
                                        arrContEmailIndex.push(i);
                                    }
                                }
                                if(FieldType=='boolean')
                                {
                                    if(blnValIndx_scontact.indexOf(i+1)==-1)
                                    {
                                        blnValIndx_scontact.push(i+1);
                                    }
                                }
                                if(MainfieldName=='name' && ObjectName=='contact')
                                {
                                    headernames.push('Contact Name');
                                    arrContNameIndex.push(i);
                                    
                                    
                                }
                                else if(MainfieldName=='name' && ObjectName=='account')
                                {
                                    headernames.push('Account Name');
                                    arrAccNameIndex.push(i);
                                }
                                 
                                else
                                {
                                    headernames.push(getSelectedfields[i].split(':')[2]);
                                }
                            }
                            if(glblTabId=='FundContTabId')
                            {
                                qryObjName=Namespaceprefix1+"Fundraising_Contact__c";
                                //if(ObjectName=='Account' && MainfieldName.indexOf('Fund_Types__c')  )
                                AccIdflds=Namespaceprefix1+"Contact__r.Id,"+Namespaceprefix1+"Institution__r.Id";
                                AccId=Namespaceprefix1+"Institution__r.Id";
                                RcrtTypId=Namespaceprefix1+"Institution__r.recordtypeid";
                            }
                            else
                            {
                                qryObjName="Contact";
                                AccIdflds="AccountId";
                                AccId="AccountId";
                                RcrtTypId="Account.recordtypeid";
                                if(glblTabId=='AllContTabId')
                                {
                                    if(arrAllContAccIds.length==0)
                                    {
                                        whereCondition='';
                                        LimitVal='Limit 0';
                                    }
                                }
                            }
                            if(blnOnLoad)
                            {
                                getqueryMain='';
                            }
                            else
                            {   
                               
                                if(whereCondition != null && whereCondition != '')
                                {  
                                    getqueryMain += "Select  "+fields+",Id, "+AccIdflds+" from "+qryObjName+" where "+AccId+"!='' and "+RcrtTypId+"!='' and "+ whereCondition +"  order by "+SortHeaderName+" "+qrySortDrctn+"  " ;
                                }               
                                else
                                {
                                    getqueryMain += "Select "+fields+",Id,"+AccIdflds+"  from "+qryObjName+" where "+AccId+"!='' and "+RcrtTypId+"!='' order by "+SortHeaderName+" "+qrySortDrctn+"  "+LimitVal+"  " ;
                                }
                            }
                            
                        }   
                        catch(ex)
                        {
                            if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                            }
                            else{
                                document.getElementById('err').innerHTML ='<Strong>Error1</Strong>: '+ex;
                                document.getElementById('err').style.display='block';
                            }   
                        } 
                    } 
                    function showicon(id)
                        {  var str='imgid'+id;
                            document.getElementById(str).style.display = 'block'; 
                        }
                        function hideicon(id)
                        {  var str='imgid'+id;
                            document.getElementById(str).style.display = 'none'; 
                        }
                        var IsToggle = false;
                    function createdata()
                    { 
                       // showImz();
                        try{
                            obj = new AW.UI.Grid;
                            obj.setHeaderText(headernames);
                            obj.setHeaderTooltip(headernames);
                            columnnum=headernames.length;  
                             
                            obj.setColumnCount(columnnum);
                            obj.setId("Select_from_Search_Results");
                            obj.setColumnWidth(50, 0);
                            obj.setColumnWidth(150, 1);
                            obj.setColumnWidth(150, 2);
                            obj.setColumnWidth(150, 3);
                            obj.setColumnWidth(160, 4);
                            obj.setColumnWidth(150, 5);
                            obj.setColumnWidth(150, 6);
                            obj.setHeaderHeight(31);
                            //obj.setSize(1037,249);
                            obj.setSortColumn(SortColIndx); 
                            obj.setSortDirection(SortColDrctn,SortColIndx);
                            //obj.setVirtualMode(false);
                            
                            ObjGridHeaderChkBox = new AW.UI.Checkbox;                
                            ObjGridHeaderChkBox.setEvent("onclick", objGridToggleAllChkBoxes);
                            objGridCellChkBox= new AW.Templates.Checkbox;
                            objGridCellChkBox.setEvent("onclick",objGridCellChkBoxClickHandler); 
                            objGridCellChkBox.setStyle("text-align","center");
                            
                            if(IsToggle == true) 
                                ObjGridHeaderChkBox.setControlValue(true);
                            else 
                                ObjGridHeaderChkBox.setControlValue(false);
                            obj.setHeaderTemplate(ObjGridHeaderChkBox, 0);
                            var totalrowcount = 0;
                            //obj.setCellEditable(false);
                            var newclmnarray=new Array();
                            newclmnarray.push(" ");
                            var blnNodata=false;
                            for(var i=0;i<columnarry.length;i++)
                            {
                                newclmnarray[i+1]=columnarry[i];
                            }
                            var ContNmLblPos=headernames.indexOf('Contact Name');
                            var AccNmLblPos=headernames.indexOf('Account Name');
                            RowCountContGrd=allcontactrecords.length;
                            if(allcontactrecords.length==0)
                            {
                                var getpos=displaycolumn.length;
                                getpos=Math.round(getpos/2);
                                var nodata = '<span style="color: #ff0000 !important;font-weight:bold;">No data to display.</span>';
                                blnNodata=true;
                                obj.setCellText(nodata,1,0);
                                obj.setRowCount((1));
                                
                                         
                            }
                            else
                            {   
                                var p=0;
                                for(var i=0;i<allcontactrecords.length;i++)
                                {
                                    var z=0;
                                    var rowflag = false;
                                    count=0;
                                    var ConId = allcontactrecords[i][columnarry.length-2];
                                    var AccId = allcontactrecords[i][columnarry.length-1];
                                    var RecordId=''+AccId+':'+ConId;
                                    
                                    for(var j=0;j<newclmnarray.length;j++)
                                        {  
                                            if(j==0)
                                            {   
                                                var Id = allcontactrecords[i][columnarry.length-2];
                                                
                                                searchedConIds.push("\'"+Id+"\'");
                                                var ischecked=false;
                                                obj.setCellTemplate(objGridCellChkBox,0);
                                            }   
                                            else if(arrdatetimeIndex.indexOf(j) > -1)
                                            {   
                                                if(allcontactrecords[i][j-1] != '' || allcontactrecords[i][j-1] == null)
                                                {
                                                    var dateVal = new Date(allcontactrecords[i][j-1]);
                                                    try
                                                    { 
                                                       var dateOutput = DateUtil.getDateTimeStringFromUserLocale(dateVal); 
                                                        obj.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                                    }
                                                    catch(err)
                                                    {
                                                        alert('err='+err);
                                                    }   
                                                }
                                            }
                                            else if(arrcurrencyIndex.indexOf(j) > -1){
                                                //alert('records[i]  '+records[i]);
                                                if(allcontactrecords[i][j-1] != '' || allcontactrecords[i][j-1] == null)
                                                {
                                                    try
                                                    { 
                                                        var currencyData = allcontactrecords[i][j-1];
                                                        var getcurrencyfldvalue = getCurrencyValue({!if(isCurrency==true,'true','false')},'{!JSENCODE(strCurrencySystembol)}',allcontactrecords[i],currencyData,LocaleStrings,Namespaceprefix1+"Commitment__c");
                                                        getcurrencyfldvalue = '<span title="'+getcurrencyfldvalue+'">' + getcurrencyfldvalue + '</span>';
                                                        obj.setCellText(getcurrencyfldvalue,j,parseInt(totalrowcount));                              
                                                    }
                                                    catch(err)
                                                    {
                                                        alert('err='+err);
                                                    }   
                                                }
                                                
                                            }
                                            else if(arrdateIndex.indexOf(j) > -1)
                                            {           
                                                if(allcontactrecords[i][j-1] != '' || allcontactrecords[i][j-1] == null)
                                                {
                                                    var dateVal=allcontactrecords[i][j-1];
                                                    var _rcrdsVal=allcontactrecords[i][j-1];
                                                    var splt=_rcrdsVal.split(':');
                                                    
                                                    if(splt.length>1)
                                                    {
                                                        var value = new Date(dateVal);
                                                    
                                                        try
                                                        { 
                                                            var dateOutput = DateUtil.getDateStringFromUserLocale(value); 
                                                            obj.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                                        }
                                                        catch(err)
                                                        {
                                                          alert("Create Data DateIndex Error.."+err);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        var value = new Date(dateVal.replace(/-/g, "/"));
                                                        try
                                                        { 
                                                            var dateOutput = DateUtil.getDateStringFromUserLocale(value); 
                                                            obj.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                                        }
                                                        catch(err)
                                                        {
                                                          alert("Create Data DateIndex Error.."+err);
                                                        }
                                                    }
                                                }
                                            }   
                                            else if(mailindex_scontact.indexOf(j) > -1)
                                            {
                                                var value = allcontactrecords[i][j-1];
                                                var data = '<a href="mailto:'+ value+'" title='+value+' >'+ value +'</a>';  
                                                obj.setCellText(data,j,parseInt(totalrowcount));
                                            }
                                            else if(blnValIndx_scontact.indexOf(j) > -1)
                                            {
                                                var value = allcontactrecords[i][j-1];
                                                var boolDsply;
                                                if(value==true || value=='true')
                                                {
                                                    boolDsply="<img  style='margin-left: 40%;width:16px; height:16px;' src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/check_60.png')}' />";
                                                }
                                                else
                                                {
                                                    boolDsply=""; 
                                                }
                                                obj.setCellText(boolDsply,j,parseInt(totalrowcount));
                                            }
                                            else if(j==AccNmLblPos)
                                            {
                                                var value = allcontactrecords[i][j-1];
                                                while(value.trim().indexOf(" ") >-1)
                                                {
                                                    value=value.replace(" ","&nbsp;").replace("\'","&apos;").replace("\"","&quot;");
                                                }
                                                var data = '<div onmouseover="showicon(\''+AccId+''+i+'\');" onmouseout="hideicon(\''+AccId+''+i+'\');"><a title="'+value+'" class="float_l" target=\'_blank\' href="/'+AccId+'" style="margin-right:5px;">'+value+'</a><a  title='+value+' onclick="Past_Fundraisings_PopUp(\''+AccId+'\'); return false;" style="position:relative; top:-2px; display:none;" id="imgid'+AccId+''+i+'"><div aria-hidden="true" class="slds-icon icon-utility-info slds-icon-text-default" style="width:16px; height:16px; position:relative; left:10px; padding-left:10px;"><img src="{!URLFOR($Resource.SLDS100,'assets/icons/utility/info_60.png')}" style="width:16px; height:16px; position:relative; right:15px;" /></div></a></div>';  
                                                obj.setCellText(data,j,parseInt(totalrowcount));
                                            }
                                            else if(j==ContNmLblPos)
                                            {
                                                var value = allcontactrecords[i][j-1];
                                               while(value.trim().indexOf(" ") >-1)
                                                {
                                                    value=value.replace(" ","&nbsp;").replace("\'","&apos;").replace("\"","&quot;");
                                                }
                                                var data = '<div onmouseover="showicon(\''+ConId+''+i+'\');" onmouseout="hideicon(\''+ConId+''+i+'\');"><a title="'+value+'" class="float_l" target=\'_blank\' href="/'+ConId+'" style="margin-right:5px;">'+value+'</a><a  title='+value+' onclick="Past_FundraisingsContact_PopUp(\''+ConId+'\'); return false;" style="position:relative; top:-2px; display:none;" id="imgid'+ConId+''+i+'"><div aria-hidden="true" class="slds-icon icon-utility-info slds-icon-text-default" style="width:16px; height:16px; position:relative; left:10px; padding-left:10px;"><img src="{!URLFOR($Resource.SLDS100,'assets/icons/utility/info_60.png')}" style="width:16px; height:16px; position:relative; right:15px;" /></div></a></div>';  
                                                obj.setCellText(data,j,parseInt(totalrowcount));
                                            }
                                            else
                                            {
                                                
                                                var getstr1=columnarry[j];
                                                var data;
                    
                                                data=allcontactrecords[i][j-1];                                   
                                                if(data!=null && data!='')
                                                {
                                                    data = data.split('?').join('&#63;');
                                                    data = data.split('/').join('&#47;');
                                                }
                                                else
                                                    data = '';
                                                
                                                obj.setCellText(data,j,parseInt(totalrowcount));                        
                                            }
                                        }  
                                        
                                    totalrowcount = totalrowcount+1;
                                    if(Contact_acc[allcontactrecords[i][columnarry.length - 2]] == null)
                                    {
                                        Contact_acc[allcontactrecords[i][columnarry.length - 2]] = allcontactrecords[i][columnarry.length - 1];
                                    }
                                    if(AccConMaplist[allcontactrecords[i][columnarry.length - 1]] != null)
                                    {
                                        var ChildArr = AccConMaplist[allcontactrecords[i][columnarry.length - 1]];
                                        if(ChildArr.indexOf(allcontactrecords[i][columnarry.length - 2]) == -1)
                                        {
                                            ChildArr.push(allcontactrecords[i][columnarry.length - 2]);
                                        }
                                        AccConMaplist[allcontactrecords[i][columnarry.length - 1]] = ChildArr;
                                    }   
                                    else
                                    {
                                        var ChildArr = [];
                                        ChildArr.push(allcontactrecords[i][columnarry.length - 2]);
                                        AccConMaplist[allcontactrecords[i][columnarry.length - 1]] = ChildArr;
                                    }
                                }
                                
                            }
                            
                            
                            if(allRecsSize<2000)
                            { 
                                document.getElementById('ShowAllLink').style.display = 'none';
                                document.getElementById('grid2').innerHTML = allcontactrecords.length;
                            }
                            else 
                            {   
                               if(allRecsSize>2000 && blnShowAllClicked==false && blnNodata==false){
                                    document.getElementById('grid2').innerHTML = '1999+ ';
                                    document.getElementById('ShowAllLink').style.display = 'block';
                                }
                                else
                                {
                                    document.getElementById('grid2').innerHTML = allcontactrecords.length;
                                    document.getElementById('ShowAllLink').style.display = 'none';
                                }
                                
                            }
                            
                            obj.onHeaderClicked = function(event,column){
                                
                                if(column==0)
                                {
                                    return true;
                                }
                                else if(arrNonSortHdrs.toString().indexOf(column) > -1)
                                {   
                                    return true;
                                }
                                else
                                {
                                    showImz();
                                    clckdHedrNmLbl=headernames[column];
                                    blnHedrClkdMain=true;
                                    if(column==SortColIndx)
                                    {   
                                        if(SortColDrctn=='ascending')
                                        {
                                            SortColDrctn='descending';
                                            qrySortDrctn='DESC NULLS LAST';
                                        }
                                        else
                                        {
                                            SortColDrctn='ascending';
                                            qrySortDrctn='ASC NULLS FIRST';
                                        }
                                    }
                                    else
                                    {
                                        SortColDrctn='ascending';
                                        qrySortDrctn='ASC NULLS FIRST';
                                    }
                                    document.getElementById('fcs').focus();
                                    document.getElementById('fcs').blur();
                                    SortColIndx=column;
                                    arrObjSelectedRows = new Array();
                                    temp_accidsarray = new Array();
                                    srchRsltGrdSrtng();
                                }
                                
                            }
                            obj.onCellMouseOver = function(event, column, row)
                            {
                                this.setCellTooltip(function(column, row) {
                                    if (column > 0) 
                                    {
                                        var temp = document.createElement("pre");
                                        temp.innerHTML = this.getCellValue(column, row);
                                        if (temp.firstChild != null) return temp.firstChild.nodeValue;
                                        else return "";
                                    } else {
                                        return "";
                                    }
                                });
                            }
                            obj.setRowCount(allcontactrecords.length);
                            document.getElementById("gridmain").innerHTML = obj;
                            if(allcontactrecords.length==0)
                            {
                                var getpos=displaycolumn.length;
                                getpos=Math.round(getpos/2);
                                var nodata;
                                if(blnSearchClicked)
                                {
                                    nodata = '<span style="color: #ff0000 !important;font-weight:bold;">No matches found.</span>';
                                }
                                else
                                {
                                    nodata = '<span style="color: #ff0000 !important;font-weight:bold;">No data to display.</span>';
                                }
                                obj.setCellText(nodata,1,0);
                                obj.setRowCount((1));
                                         
                            }
                            if(allcontactrecords.length>2000)
                            {
                                document.getElementById('blurred').style.display='';
                                myVar = setTimeout(hidePopup, 3000);
                            }
                            else
                            {   document.getElementById('blurred').style.display='';
                                myVar = setTimeout(hidePopup, 1000);
                            }
                            blnHedrClkdMain=false;
                            blnSearchClicked=false;
                        
                        }
                        catch(ex){
                            
                        }
                        
                        //obj.refresh();
                    }   
                    function TabClicked(TabId)
                    {  
                        blnOnLoad=true;
                        close_allcalendaropen();
                        document.getElementById('j_id0:CreateFundraisingFormId:FndNmLdPgId').value='';
                        gridValueFinal="";
                        glblTabId=TabId;
                        accountfieldarray=new Array();  
                        FundRaisngFldArray=new Array();
                        FundContFldArray=new Array();
                        contactfieldarray=new Array();
                        operatorarray=new Array();
                        arrayOfAccountFields = [];
                        arryAccountContactApiLabel = {};
                        fundfieldarray=new Array();
                        arrFieldsLabel=new Array();
                        arrFieldsApi=new Array();
                        
                        // Adding operators to the search filter ALL Contacts Tab
                        operatorarray=[["=","equals"],["!=","not equal to"],["like","starts with"],["contains","contains"],["doesnotcontain","does not contain"],["<","less than"],[">","greater than"],["<=","less or equal"],[">=","greater or equal"],["includes","includes"],["excludes","excludes"]];
                        for(var i=1;i<=1;i++){ // Adding opertor in operator fields
                        
                            var selectlist1=document.getElementById('opt1');
                            for(var j=0;j<operatorarray.length;j++){           
                                selectlist1.options[j]=new Option(operatorarray[j][1],operatorarray[j][0]);                       
                            }
                        }
                            blnOnlyFundContTab=true;
                                
                            if(glblTabId=='AccContTabId')
                            {
                                document.getElementById('oldFundRsngDiv').style.display='none';
                                pageName = 'CMFA';
                                ContQuery=true;
                                AccContFields();
                                
                            }   
                            else{
                               
                                document.getElementById('oldFundRsngDiv').style.display='';
                                pageName = 'CMF';
                                AccContFields();
                                var result = sforce.connection.describeSObject(namespacePrefix+"fundraising__c");
                                
                                for (var i=0; i<result.fields.length; i++) {
                                    var field = result.fields[i];

                                    var fieldarray=new Array();
                                    
                                    if(field.type=='reference'){
                                        FRApiSecurity.push(field.name);
                                        FRLabelSecurity.push(field.label);
                                            
                                    }else if(field.type!='textarea'){
                                            fieldarray.push(field.name);
                                            fieldarray.push(field.label);
                                            fieldarray.push(field.type);
                                    }else if(field.type =='textarea' && field.length<=255){
                                            fieldarray.push(field.name);
                                            fieldarray.push(field.label);
                                            fieldarray.push(field.type); 
                                    }       
                                    if(fieldarray.length>0){
                                            FundRaisngFldArray.push(fieldarray);
                                    }
                                    
                                }                

                                FundRaisngFldArray=sortarraydata(FundRaisngFldArray,1,'ASC');
                                for(var i=1;i<=1;i++){ 
                                // Adding Contact field in selection crtieria picklist, as initially we are showing 1, so take loop of one
                                  
                                    for(var j=0;j<FundRaisngFldArray.length;j++){ 
                                    
                                        var FundRsngldtype=FundRaisngFldArray[j][2].toUpperCase();
                                        
                                       if((FundRsngldtype!='ENCRYPTEDSTRING') && (FundRsngldtype!='ID') && (FundRaisngFldArray[j][0].toUpperCase()!='SYSTEMMODSTAMP'))
                                        {
                                            if(FundRaisngFldArray[j][0] == 'RecordType')
                                            {
                                             FundRaisngFldArray[j][0] = 'RecordType.name';
                                             FRApiSecurity.push('RecordTypeId');
                                            }
                                            
                                            var value1='Fundraising:'+FundRaisngFldArray[j][0]+':'+FundRaisngFldArray[j][1]+':'+FundRaisngFldArray[j][2]; //0.FIELD NAME 1.FIELD LABEL 2.FIELD TYPE
                                            
                                            FRApiSecurity.push(FundRaisngFldArray[j][0]);
                                            FRLabelSecurity.push(FundRaisngFldArray[j][1]);
                                            arrayOfAccountFields.push('Fundraising:'+FundRaisngFldArray[j][1]);
                                            arryAccountContactApiLabel['Fundraising:'+FundRaisngFldArray[j][1]] = value1; 
                                          
                                        }                   
                                                        
                                    }
                                    
                                }
                                            
                                if(FRApiSecurity.indexOf('RecordTypeId') == -1){
                                    FRApiSecurity.push('RecordTypeId');
                                    FRLabelSecurity.push('Record Type');
                                
                                }
                                FCApiSecurity=[];
                                FCLabelSecurity=[];
                                var result = sforce.connection.describeSObject(namespacePrefix+"Fundraising_Contact__c");
                                for (var i=0; i<result.fields.length; i++) {
                                    var field = result.fields[i];
                                
                                    var fieldarray=new Array();
                                    
                                    if(field.type=='reference'){
                                        FCApiSecurity.push(field.name);
                                        FCLabelSecurity.push(field.label);
                                            
                                    }else if(field.type!='textarea'){
                                            fieldarray.push(field.name);
                                            fieldarray.push(field.label);
                                            fieldarray.push(field.type);
                                    }else if(field.type =='textarea' && field.length<=255){
                                            fieldarray.push(field.name);
                                            fieldarray.push(field.label);
                                            fieldarray.push(field.type); 
                                    }       
                                    if(fieldarray.length>0){
                                            FundContFldArray.push(fieldarray);
                                    }
                                    
                                }                

                                FundContFldArray=sortarraydata(FundContFldArray,1,'ASC');
                                for(var i=1;i<=1;i++){ 
                                // Adding Contact field in selection crtieria picklist, as initially we are showing 1, so take loop of one
                                    for(var j=0;j<FundContFldArray.length;j++){ 
                                    
                                        var FundContldtype=FundContFldArray[j][2].toUpperCase();
                                        
                                       
                                       if((FundContldtype!='ENCRYPTEDSTRING') && (FundContldtype!='ID') && (FundContFldArray[j][0].toUpperCase()!='SYSTEMMODSTAMP'))
                                        {
                                            if(FundContFldArray[j][0] == 'RecordType')
                                            {
                                             FundContFldArray[j][0] = 'RecordType.name';
                                             FCApiSecurity.push('RecordTypeId');
                                            }
                                            FCApiSecurity.push(FundContFldArray[j][0]);
                                            FCLabelSecurity.push(FundContFldArray[j][1]);
                                        }                   
                                                        
                                    }
                                    
                                }
                                            
                                if(FCApiSecurity.indexOf('RecordTypeId') == -1){
                                    FCApiSecurity.push('RecordTypeId');
                                    FCLabelSecurity.push('Record Type');
                                }
                                    if (glblTabId=='FundContTabId')
                                    {       pageName = 'CMFC';
                                            FCApiSecurity=[];
                                            FCLabelSecurity=[];
                                            FundContFldArray=[];
                                            var result = sforce.connection.describeSObject(namespacePrefix+"Fundraising_Contact__c");
                                            for (var i=0; i<result.fields.length; i++) {
                                                var field = result.fields[i];

                                                var fieldarray=new Array();
                                                
                                                if(field.type=='reference'){
                                                    FCApiSecurity.push(field.name);
                                                    FCLabelSecurity.push(field.label);
                                                        
                                                }else if(field.type!='textarea'){
                                                        fieldarray.push(field.name);
                                                        fieldarray.push(field.label);
                                                        fieldarray.push(field.type);
                                                }else if(field.type =='textarea' && field.length<=255){
                                                        fieldarray.push(field.name);
                                                        fieldarray.push(field.label);
                                                        fieldarray.push(field.type); 
                                                }       
                                                if(fieldarray.length>0){
                                                        FundContFldArray.push(fieldarray);
                                                }
                                                
                                            }                

                                            FundContFldArray=sortarraydata(FundContFldArray,1,'ASC');
                                            for(var i=1;i<=1;i++){ 
                                            // Adding Contact field in selection crtieria picklist, as initially we are showing 1, so take loop of one
                                                for(var j=0;j<FundContFldArray.length;j++){ 
                                                
                                                    var FundContldtype=FundContFldArray[j][2].toUpperCase();
                                                    
                                                   
                                                   if((FundContldtype!='ENCRYPTEDSTRING') && (FundContldtype!='ID') && (FundContFldArray[j][0].toUpperCase()!='SYSTEMMODSTAMP'))
                                                    {
                                                        if(FundContFldArray[j][0] == 'RecordType')
                                                        {
                                                         FundContFldArray[j][0] = 'RecordType.name';
                                                         FCApiSecurity.push('RecordTypeId');
                                                        }
                                                        
                                                        var value1='Fundraising Contact:'+FundContFldArray[j][0]+':'+FundContFldArray[j][1]+':'+FundContFldArray[j][2]; //0.FIELD NAME 1.FIELD LABEL 2.FIELD TYPE
                                                        FCApiSecurity.push(FundContFldArray[j][0]);
                                                        FCLabelSecurity.push(FundContFldArray[j][1]);
                                                        arrayOfAccountFields.push('Fundraising Contact:'+FundContFldArray[j][1]);
                                                        arryAccountContactApiLabel['Fundraising Contact:'+FundContFldArray[j][1]] = value1;    
                                                    }                   
                                                                    
                                                }
                                                
                                            }
                                                        
                                            if(FCApiSecurity.indexOf('RecordTypeId') == -1){
                                                FCApiSecurity.push('RecordTypeId');
                                                FCLabelSecurity.push('Record Type');
                                            }
                                    }   
                            }   
                            getNavatarSetupData();
                    }
                    function AccContFields()
                    {
                        //This block puts the fields from the describe call on Account object into the accountfieldarray array
                        var result = sforce.connection.describeSObject("Account");
                        arrayOfAccountFields = [];
                        arryAccountContactApiLabel = {};
                        for (var i=0; i<result.fields.length; i++){
                            var field = result.fields[i];
                            var fieldarray=new Array();
                            if(field.type!='textarea' && field.type  !='address')
                            {    
                                 var x = field.name;
                                var y = field.label;
                                if(x.indexOf("__c") == -1){
                                    if(y.indexOf("Institution") != 1 && x != 'AccountNumber' ){
                                        y = y.replace(/Institution /gi, "");
                                    }
                                }
                            
                                fieldarray.push(field.name);
                                fieldarray.push(y);
                                fieldarray.push(field.type); 
                            }else if(field.type =='textarea' && field.length<=255)
                            {
                                 var x = field.name;
                                var y = field.label;
                                if(x.indexOf("__c") == -1){
                                    if(y.indexOf("Institution") != 1 && x != 'AccountNumber'){
                                        y = y.replace(/Institution /gi, "");
                                    }
                                }
                            
                                fieldarray.push(field.name);
                                fieldarray.push(field.label);
                                fieldarray.push(field.type); 
                            }       
                            if(fieldarray.length>0){
                                accountfieldarray.push(fieldarray);
                            }
                        }
                     

                        accountfieldarray=sortarraydata(accountfieldarray,1,'ASC');
                        for(var i=1;i<=1;i++){
                        // Adding Accounts field in selection crtieria picklist, as initially we are showing 1, so take loop of one
                          
                            for(var j=0;j<accountfieldarray.length;j++){ 
                                var accountfldtype=accountfieldarray[j][2].toUpperCase();       
                                  if((accountfldtype!='ENCRYPTEDSTRING') && (accountfldtype!='ID') && (accountfieldarray[j][0] !='JigsawCompanyId') && (accountfieldarray[j][0].toUpperCase()!='SYSTEMMODSTAMP'))
                                  {            
                                    if(accountfieldarray[j][0] == 'RecordType')
                                    {
                                     accountfieldarray[j][0] = 'RecordType.name';
                                    }
                                     var value1='Account:'+accountfieldarray[j][0]+':'+accountfieldarray[j][1]+':'+accountfieldarray[j][2];
                                     accountApiSecurity.push(accountfieldarray[j][0]);
                                     accountLabelSecurity.push(accountfieldarray[j][1]);
                                     arrayOfAccountFields.push('Account:'+accountfieldarray[j][1]);
                                     arryAccountContactApiLabel['Account:'+accountfieldarray[j][1]] = value1;
                                }
                            }                       
                        }
                     if(accountApiSecurity.indexOf('RecordTypeId') == -1){
                            accountApiSecurity.push('RecordTypeId');
                            accountLabelSecurity.push('Record Type');
                        }
                         <!--Describe call for Contact Object-->
                            //contactfieldarray contains the name,label and type of all the  fields of Contact object
                            
                            var result = sforce.connection.describeSObject("contact");
                            //This block puts the fields from the describe call on Contact object into the contactfieldarray array
                            for (var i=0; i<result.fields.length; i++) {
                                var field = result.fields[i];

                                var fieldarray=new Array();
                                if(field.type!='textarea' && field.type  !='address'){
                                        fieldarray.push(field.name);
                                        fieldarray.push(field.label);
                                        fieldarray.push(field.type);
                                }else if(field.type =='textarea' && field.length<=255){
                                        fieldarray.push(field.name);
                                        fieldarray.push(field.label);
                                        fieldarray.push(field.type); 
                                }       
                                if(fieldarray.length>0){
                                        contactfieldarray.push(fieldarray);
                                }
                            }           
                            contactfieldarray=sortarraydata(contactfieldarray,1,'ASC');
                            for(var i=1;i<=1;i++){ 
                            // Adding Contact field in selection crtieria picklist, as initially we are showing 1, so take loop of one
                                for(var j=0;j<contactfieldarray.length;j++){ 
                                
                                    var Confldtype=contactfieldarray[j][2].toUpperCase();
                                    var confldname=contactfieldarray[j][0].toLowerCase();
                                    
                                   if((Confldtype!='ENCRYPTEDSTRING') && (Confldtype!='ID') && (contactfieldarray[j][0].toUpperCase()!='SYSTEMMODSTAMP') && (contactfieldarray[j][1].toLowerCase()!='jigsaw contact id') && ( confldname!='jigsaw')  )
                                    {
                                        if(contactfieldarray[j][0] == 'RecordType')
                                        {
                                         contactfieldarray[j][0] = 'RecordType.name';
                                         contactApiSecurity.push('RecordTypeId');
                                        }
                                        var value1='Contact:'+contactfieldarray[j][0]+':'+contactfieldarray[j][1]+':'+contactfieldarray[j][2]; //0.FIELD NAME 1.FIELD LABEL 2.FIELD TYPE
                                        contactApiSecurity.push(contactfieldarray[j][0]);
                                        contactLabelSecurity.push(contactfieldarray[j][1]);
                                        arrayOfAccountFields.push('Contact:'+contactfieldarray[j][1]);
                                        arryAccountContactApiLabel['Contact:'+contactfieldarray[j][1]] = value1;
                                        
                                    }                   
                                                        
                                }
                            }  
                            if(contactApiSecurity.indexOf('RecordTypeId') == -1){
                                        contactApiSecurity.push('RecordTypeId');
                                        contactLabelSecurity.push('Record Type');
                            }
                    }
                    function showImz() {
                        $("#blurred").show();
                        if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {
                            myVar = setTimeout(hidePopup, 2000);
                        } else if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
                            myVar = setTimeout(hidePopup, 2000);
                        } else
                            myVar = setTimeout(hidePopup, 2500);
                    }
                    function hidePopup() {
                        $("#blurred").hide();
                    }
                    function rfrshPnlMthd(TabId)
                    {
                        CustomFilterRowId=[];
                        
                        number_of_rows = 1;
                        finalfiltr=[];
                        CustomFilterRowId.push(1);
                        document.getElementById('ReqFldLndPgId').style.display='none'; 
                        if(glblTabId!='AllContTabId')   
                        {
                            hide_filterlogicerror();  
                        }   
                        
                        RfrshFilterDiv(TabId);
                    }
                    function getNavatarSetupData()
                    {   
                        ns_update = false;
                        var query="select id, "+Namespaceprefix1+"CMF_Setting__c FROM "+Namespaceprefix1+"Navatar_Setup__c where OwnerId = '{!$User.Id}' ";  
                        var resultdesc = sforce.connection.query(query);   
                
                        var recsize = resultdesc.getArray("size");
                        if(recsize == 0)
                        {
                            MainGridFildsAC = MainGridFildsDefalutAC;
                            SortColIndx=1;
                            SortHeaderName='Name';
                            SortColDrctn='ascending';
                            
                        }
                        else
                        {
                            var recordsdesc = resultdesc.getArray("records");
                            var CMFValue = recordsdesc[0].get(Namespaceprefix1+'CMF_Setting__c');
                            if(CMFValue != '' && CMFValue != null)
                            {
                                if(CMFValue.indexOf('CMF:') > -1)
                                {
                                    var gridFields = CMFValue.split('CMF:')[1];   
                                    if(gridFields != null || gridFields != '')
                                    {
                                        MainGridFildsAC = gridFields.split(',');
                                        for(var i=0;i<MainGridFildsAC.length;i++){
                                            var ObjectName=MainGridFildsAC[i].split(':')[0];
                                            var MainfieldName = MainGridFildsAC[i].split(':')[1];
                                            if(ObjectName.toLowerCase()=='contact' && MainfieldName.toLowerCase()=='name' && blnHedrClkdMain==false)
                                            {
                                                SortColIndx=i+1;
                                                SortHeaderName=MainfieldName;
                                                SortColDrctn='ascending';
                                            }
                                            var apiName = MainGridFildsAC[i].split(':');
                                            
                                        }
                                        //MainGridFildsDefalutAC=MainGridFildsAC;
                                        
                                    }
                                    else
                                    {
                                        MainGridFildsAC = MainGridFildsDefalutAC;
                                    } 
                                    
                                }
                                else
                                {
                                    MainGridFildsAC = MainGridFildsDefalutAC;
                                    
                                }
                            }
                            else
                            {
                                MainGridFildsAC = MainGridFildsDefalutAC;
                                if(blnHedrClkdMain==false)
                                {
                                    SortColIndx=1;
                                    SortHeaderName='Name';
                                    SortColDrctn='ascending';
                                }
                            }
                        }
                        for(i = MainGridFildsDefalutAC.length-1;i>=0;i--){
                                var tempField = MainGridFildsDefalutAC[i].split(':');
                                
                                if(tempField[0] == 'Account'){
                                    if(accountApiSecurity.indexOf(tempField[1]) == -1){
                                        MainGridFildsDefalutAC.splice(i,1);
                                    }
                                    else{
                                        if (accountLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = accountLabelSecurity[accountApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsDefalutAC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                                else if(tempField[0] == 'Contact'){
                                    if(contactApiSecurity.indexOf(tempField[1]) == -1){
                                        MainGridFildsDefalutAC.splice(i,1);
                                    }
                                    else{
                                        if (contactLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = contactLabelSecurity[contactApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsDefalutAC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }                       
                            }
                            
                            for(i = MainGridFildsAC.length-1;i>=0;i--)
                            {
                                var tempField = MainGridFildsAC[i].split(':');
                                
                                
                                if(tempField[0] == 'Account'){
                                    if(accountApiSecurity.indexOf(tempField[1]) == -1){
                                      MainGridFildsAC.splice(i,1);
                                    }
                                    else{
                                        if (accountLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = accountLabelSecurity[accountApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsAC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                                else if(tempField[0] == 'Contact')
                                {
                                    if(contactApiSecurity.indexOf(tempField[1]) == -1){
                                      MainGridFildsAC.splice(i,1);
                                    }
                                    else{
                                        if (contactLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = contactLabelSecurity[contactApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsAC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                            }
                            headerValuesOnLoad();
                    }
                    function getNavatarSetupDataPFC(ContId)
                    {   
                        
                        
                        var SetupSettings='';
                        var dataSeprtorVal='';
                        var updateSetting='';
                        if(blnPastFundRsngAcc)
                        {
                            SetupSettings=Namespaceprefix1+"CMF_PFA_Setting__c";
                            dataSeprtorVal="CMF_PFA:";
                            updateSetting="CMF_PFA";
                            //PFC Grid Default Fields Initialisation.
                            headerfieldsPFC = ""+Namespaceprefix1+"Fundraising__c:Name:Fundraising Name:string,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Stage__c:Stage:Picklist,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Investment_Likely_Amount_USD_mn__c:Investment Likely Amount (mn):Currency,"+Namespaceprefix1+"Fundraising__c:CreatedDate:Created Date:Datetime";
                            fieldsPFC = ""+Namespaceprefix1+"Fundraising__c:Name:Fundraising Name:string,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Stage__c:Stage:Picklist,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Investment_Likely_Amount_USD_mn__c:Investment Likely Amount (mn):Currency,"+Namespaceprefix1+"Fundraising__c:CreatedDate:Created Date:Datetime";
                        }
                        else
                        {
                            SetupSettings=Namespaceprefix1+"CMF_PFC_Setting__c";
                            dataSeprtorVal="CMF_PFC:";
                            updateSetting="CMF_PFC";
                            //PFC Grid Default Fields Initialisation.
                            headerfieldsPFC = ""+Namespaceprefix1+"Fundraising__c:Name:Fundraising Name:string,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Stage__c:Stage:Picklist,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Investment_Likely_Amount_USD_mn__c:Investment Likely Amount (mn):Currency,"+Namespaceprefix1+"Fundraising_Contact__c:"+Namespaceprefix1+"Role__c:Role:Picklist,"+Namespaceprefix1+"Fundraising_Contact__c:"+Namespaceprefix1+"IsPrimary__c:Primary:boolean,"+Namespaceprefix1+"Fundraising__c:CreatedDate:Created Date:DateTime";
                            fieldsPFC = ""+Namespaceprefix1+"Fundraising__c:Name:Fundraising Name:string,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Stage__c:Stage:Picklist,"+Namespaceprefix1+"Fundraising__c:"+Namespaceprefix1+"Investment_Likely_Amount_USD_mn__c:Investment Likely Amount (mn):Currency,"+Namespaceprefix1+"Fundraising_Contact__c:"+Namespaceprefix1+"Role__c:Role:Picklist,"+Namespaceprefix1+"Fundraising_Contact__c:"+Namespaceprefix1+"IsPrimary__c:Primary:boolean,"+Namespaceprefix1+"Fundraising__c:CreatedDate:Created Date:DateTime";
                        }
                        MainGridFildsPFC=headerfieldsPFC.split(',');
                        MainGridFildsDefalutPFC=MainGridFildsPFC;
                        
                        ContIdPF=ContId;
                        
                        ns_update = false;
                           
                        var query="select id, "+SetupSettings+" FROM "+Namespaceprefix1+"Navatar_Setup__c where OwnerId = '{!$User.Id}' ";  
                        var resultdesc = sforce.connection.query(query);   
                
                        var recsize = resultdesc.getArray("size");
                     
                        if(recsize == 0)
                        {
                            MainGridFildsPFC = MainGridFildsDefalutPFC;
                            SortColIndxPFC=0;
                            SortHeaderNamePFC='Name';
                            SortColDrctnPFC='ascending';
                        }
                        else
                        {
                            var recordsdesc = resultdesc.getArray("records");
                            
                            var CMFValue = recordsdesc[0].get(SetupSettings);
                            
                            if(CMFValue != '' && CMFValue != null)
                            {
                                if(CMFValue.indexOf(dataSeprtorVal) > -1)
                                {
                                    var gridFields = CMFValue.split(dataSeprtorVal)[1];                            
                                    if(gridFields != null || gridFields != '')
                                    {
                                        MainGridFildsPFC = gridFields.split(',');
                                        for(var i=0;i<MainGridFildsPFC.length;i++){
                                            var apiName = MainGridFildsPFC[i].split(':');
                                            var ObjectName=MainGridFildsPFC[i].split(':')[0];
                                            var ApiNameFlds=MainGridFildsPFC[i].split(':')[1];
                                            if(apiName[1] == 'RecordTypeId'){
                                                apiName[1] = 'RecordType.name';
                                            }
                                            if(ObjectName==Namespaceprefix1+'Fundraising__c' && ApiNameFlds.toLowerCase()=='name' && blnHedrClkdPFC==false)
                                            {
                                                SortColIndxPFC=i;
                                                SortHeaderNamePFC=ApiNameFlds;
                                                SortColDrctnPFC='ascending';
                                            }
                                             
                                        }
                                        //MainGridFildsDefalutPFC=MainGridFildsPFC;
                                    }
                                    else
                                    {
                                        MainGridFildsPFC = MainGridFildsDefalutPFC;
                                    } 
                                    
                                }
                                else
                                {
                                    MainGridFildsPFC = MainGridFildsDefalutPFC;
                                }
                            }
                            else
                            {
                                MainGridFildsPFC = MainGridFildsDefalutPFC;
                                if(blnHedrClkdPFC==false)
                                {
                                    for(var i=0;i<MainGridFildsPFC.length;i++){
                                        var ObjectName=MainGridFildsPFC[i].split(':')[0];
                                        var ApiName=MainGridFildsPFC[i].split(':')[1];
                                        if(ObjectName==Namespaceprefix1+'Fundraising__c' && ApiName.toLowerCase()=='name')
                                            {
                                                SortColIndxPFC=i;
                                                SortHeaderNamePFC=ApiName;
                                                SortColDrctnPFC='ascending';
                                            }
                                    
                                    }
                                }
                            }
                        }
                        
                        for(i = MainGridFildsDefalutPFC.length-1;i>=0;i--){
                                var tempField = MainGridFildsDefalutPFC[i].split(':');
                                
                                if(tempField[0] == Namespaceprefix1+'Fundraising__c'){
                                    if(FRApiSecurity.indexOf(tempField[1]) == -1){
                                        MainGridFildsDefalutPFC.splice(i,1);
                                    }
                                    else{
                                        if (FRLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = FRLabelSecurity[FRApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsDefalutPFC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                                
                                else if(tempField[0] == Namespaceprefix1+'Fundraising_Contact__c'){
                                    if(FCApiSecurity.indexOf(tempField[1]) == -1){
                                        MainGridFildsDefalutPFC.splice(i,1);
                                    }
                                    else{
                                        if (FCLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = FCLabelSecurity[FCApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsDefalutPFC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }                       
                            }
                            
                            for(i = MainGridFildsPFC.length-1;i>=0;i--){
                                var tempField = MainGridFildsPFC[i].split(':');
                                
                                
                                if(tempField[0] == Namespaceprefix1+'Fundraising__c'){
                                    if(FRApiSecurity.indexOf(tempField[1]) == -1){
                                      MainGridFildsPFC.splice(i,1);
                                    }
                                    else{
                                        if (FRLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = FRLabelSecurity[FRApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsPFC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                                else if(tempField[0] == Namespaceprefix1+'Fundraising_Contact__c')
                                {
                                    if(FCApiSecurity.indexOf(tempField[1]) == -1){
                                      MainGridFildsPFC.splice(i,1);
                                    }
                                    else{
                                        if (FCLabelSecurity.indexOf(tempField[2]) == -1){
                                            tempField[2] = FCLabelSecurity[FCApiSecurity.indexOf(tempField[1])];
                                            MainGridFildsPFC[i] = tempField[0]+':'+tempField[1]+':'+tempField[2]+':'+tempField[3];
                                        }
                                    }
                                }
                            }
                            headerValuesOnLoadPstFndRsngAcc();
                    }
                    function headerValuesOnLoadPstFndRsngAcc()
                    {
                        Namespaceprefix1 = Namespaceprefix1;
                        fieldsPFC = '';
                        
                        headerfieldsPFC = '';
                        for(var i=0;i<MainGridFildsPFC.length;i++){                                
                            var mainfield = MainGridFildsPFC[i].split(':');
                            if(blnPastFundRsngAcc)
                            {
                                if(mainfield[3].toLowerCase()=='reference' )
                                {
                                    var RefFieldApi=mainfield[1];
                                    var stdRefChk;
                                    stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                    if(stdRefChk=='__c')
                                    {
                                        RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                        fieldNamePFC =RefFieldApi+'r.Name';
                                    }
                                    else
                                    {
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                        if(stdRefChk.toLowerCase()=='id')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                            fieldNamePFC=RefFieldApi+'.Name';
                                        }
                                        else
                                        {
                                            fieldNamePFC =RefFieldApi;
                                        }
                                    }
                                }
                                else
                                {
                                    fieldNamePFC = mainfield[1];
                                }
                            }
                            else
                            {
                                if(mainfield[0]==Namespaceprefix1+'Fundraising__c')
                                {
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldNamePFC =Namespaceprefix1+'Fundraising__r.'+RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                stdRefFieldApi=mainfield[1];
                                                stdRefFieldApi=stdRefFieldApi.substring(0,stdRefFieldApi.length-2);
                                                stdRefFieldApi=stdRefFieldApi+'.Name';
                                                fieldNamePFC=Namespaceprefix1+'Fundraising__r.'+stdRefFieldApi;
                                            }
                                            else
                                            {
                                                fieldNamePFC=Namespaceprefix1+'Fundraising__r.'+mainfield[1];
                                            }
                                            
                                        }
                                        
                                    }
                                    
                                    else
                                    {
                                        fieldNamePFC = Namespaceprefix1+'Fundraising__r.'+mainfield[1];
                                    }
                                }
                                else
                                {
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldNamePFC =RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldNamePFC=RefFieldApi+'.Name';
                                                
                                            }
                                            else
                                            {
                                                fieldNamePFC =RefFieldApi+'r.Name';
                                            }
                                            
                                        }
                                        
                                        
                                    }
                                    else
                                    {
                                        fieldNamePFC = mainfield[1];
                                    }
                                    
                                }
                                
                            }
                            if(i==0){
                                headerfieldsPFC = MainGridFildsPFC[i];
                                fieldsPFC+= fieldNamePFC;
                            }else{
                                headerfieldsPFC +=','+ MainGridFildsPFC[i];
                                fieldsPFC+= ','+fieldNamePFC;  
                            }
                        }
                        executequeryMainPFC(fieldsPFC);
                    }
                     var recordRelParent="";
                    function executequeryMainPFC(fields)
                    {
                        Namespaceprefix1 = Namespaceprefix1 ;
                        try{ 
                            columnarryPFC = new Array();
                            headernamesPFC = new Array();
                            getSelectedfieldsPFC = new Array();
                            
                            var getqryPFC;              
                            
                            if(headerfieldsPFC != null && headerfieldsPFC != 'null' && headerfieldsPFC != ''){            
                                getSelectedfieldsPFC = headerfieldsPFC.split(','); //fields;//
                            }
                            else{
                                return false;
                            } 
                            setHeaderValuesPFC();
                            getcolumn = getqueryMainPFC.substring(6,getqueryMainPFC.indexOf(' from ')); 
                            var queryMore =true;
                            gridValueFinalPFC="";
                            var clumnsplit = getcolumn.split(',');        
                            for( var i=0; i<clumnsplit.length; i++)
                            {
                               columnarryPFC.push(clumnsplit[i].trim());
                            }
                            var mainqueryresult = sforce.connection.query(getqueryMainPFC); // Main Query
                            while(queryMore)
                            {   
                                var records;                                
                                records = mainqueryresult.getArray("records");
                                var recordStringPFC="";
                                if(records.length>0)
                                {
                                    for (var i = 0; i < records.length; i++)
                                    {   
                                        recordStringPFC="";
                                       if(blnPastFundRsngAcc)
                                        {
                                            RecordValFundRsng=records[i];
                                            recordRelParentData=RecordValFundRsng.get(Namespaceprefix1+"Legal_Name__r");
                                            recordRelParent=recordRelParentData.Name;
                                            
                                        }
                                        else
                                        {
                                            RecordValFundRsng=records[i].get(Namespaceprefix1+"Fundraising__r");
                                            recordRelParentData=records[i].get(Namespaceprefix1+"Contact__r");
                                            recordRelParent=recordRelParentData.Name;
                                        }
                                        //recordRelParent=records[i].records[i]
                                        for(var j=0;j<getSelectedfieldsPFC.length;j++)
                                        {   
                                            var ObjectName=getSelectedfieldsPFC[j].split(':')[0];
                                            var MainfieldName = getSelectedfieldsPFC[j].split(':')[1];
                                            var FieldType = getSelectedfieldsPFC[j].split(':')[3].toLowerCase();
                                            var boolDsply="<img  style='margin-left: 40%;width:16px; height:16px;' src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/check_60.png')}' />";
                                            
                                            
                                            if(blnPastFundRsngAcc)
                                            {
                                                var RecordValFundRsngRef;
                                                if(RecordValFundRsng!=null)
                                                {   
                                                    if(FieldType.toLowerCase()=='reference')
                                                    {
                                                        var refFieldApi;
                                                        refFieldApi=MainfieldName;
                                                        stdRefChk=refFieldApi.substring(refFieldApi.length-3,refFieldApi.length);
                                                        if(stdRefChk=='__c')
                                                        {
                                                            refFieldApi=refFieldApi.substring(0,refFieldApi.length-1);
                                                            if(RecordValFundRsng.get(refFieldApi+"r") != null)
                                                            {
                                                                RecordValFundRsngRef=RecordValFundRsng.get(refFieldApi+"r");
                                                                MainfieldName='Name';
                                                                MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                refFieldApi='';
                                                            }
                                                            else
                                                            {
                                                                MainFldData='';
                                                            }
                                                        }
                                                        else
                                                        {
                                                            stdRefChk=refFieldApi.substring(refFieldApi.length-2,refFieldApi.length);
                                                            if(stdRefChk.toLowerCase()=='id')
                                                            {
                                                                MainfieldName=MainfieldName.substring(0,MainfieldName.length-2);
                                                                if(RecordValFundRsng.get(MainfieldName) != null)
                                                                {
                                                                    RecordValFundRsngRef=RecordValFundRsng.get(MainfieldName);
                                                                    MainfieldName='Name';
                                                                    MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                    refFieldApi='';
                                                                }
                                                                else
                                                                {
                                                                    MainFldData='';
                                                                }
                                                            }
                                                            else
                                                            {
                                                                MainFldData = RecordValFundRsng.get(MainfieldName);
                                                            }
                                                            
                                                        }
                                                    }
                                                    else
                                                    {
                                                        MainFldData = RecordValFundRsng.get(MainfieldName);
                                                    }
                                                    if(MainFldData!='')
                                                    {
                                                        MainFldData=specialCharCheck(MainFldData);
                                                    }
                                                    var FundRsngId =RecordValFundRsng.Id;
                                                    if(MainfieldName=='Name' && ObjectName==Namespaceprefix1+'Fundraising__c' && FieldType.toLowerCase()!='reference')
                                                    {  
                                                        MainFldData = '<a title="'+MainFldData+'"  href="/'+FundRsngId+'" class="float_l" target=\'_blank\'  style="margin-right:5px;">'+MainFldData+'</a>';
                                                    }
                                                    
                                                    
                                                }
                                                else
                                                {
                                                    MainFldData='';
                                                }
                                            }
                                            else
                                            {
                                                if(ObjectName==Namespaceprefix1+"Fundraising__c")
                                                {
                                                    var RecordValFundRsngRef;
                                                    if(RecordValFundRsng!=null)
                                                    {   
                                                        if(FieldType.toLowerCase()=='reference')
                                                        {
                                                            var refFieldApi;
                                                            var stdRefChk;
                                                            refFieldApi=MainfieldName;
                                                            stdRefChk=refFieldApi.substring(refFieldApi.length-3,refFieldApi.length);
                                                            if(stdRefChk=='__c')
                                                            {
                                                                refFieldApi=refFieldApi.substring(0,refFieldApi.length-1);
                                                            
                                                                if(RecordValFundRsng.get(refFieldApi+"r") != null)
                                                                {
                                                                    RecordValFundRsngRef=RecordValFundRsng.get(refFieldApi+"r");
                                                                    MainfieldName='Name';
                                                                    MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                    refFieldApi='';
                                                                }
                                                                else
                                                                {
                                                                    MainFldData='';
                                                                }
                                                            }
                                                            else
                                                            {
                                                                stdRefChk=refFieldApi.substring(refFieldApi.length-2,refFieldApi.length);
                                                                if(stdRefChk.toLowerCase()=='id')
                                                                {
                                                                    MainfieldName=MainfieldName.substring(0,MainfieldName.length-2);
                                                                    if(RecordValFundRsng.get(MainfieldName) != null)
                                                                    {
                                                                        RecordValFundRsngRef=RecordValFundRsng.get(MainfieldName);
                                                                        MainfieldName='Name';
                                                                        MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                        refFieldApi='';
                                                                    }
                                                                    else
                                                                    {
                                                                        MainFldData='';
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    MainFldData = RecordValFundRsng.get(MainfieldName);
                                                                }
                                                                
                                                            }
                                                            
                                                        }
                                                        else
                                                        {
                                                            MainFldData = RecordValFundRsng.get(MainfieldName);
                                                        }
                                                        
                                                        if(MainFldData!='')
                                                        {
                                                            MainFldData=specialCharCheck(MainFldData);
                                                        }
                                                        var FundRsngId =RecordValFundRsng.Id;
                                                        if(MainfieldName=='Name' && ObjectName==Namespaceprefix1+'Fundraising__c' &&FieldType.toLowerCase()!='reference')
                                                        {   
                                                            MainFldData = '<a title="'+MainFldData+'"  href="/'+FundRsngId+'" class="float_l" target=\'_blank\'  style="margin-right:5px;">'+MainFldData+'</a>';
                                                        }
                                                    }
                                                    else
                                                    {
                                                        MainFldData='';
                                                    }
                                                }
                                                else
                                                {   var RecordValFundRsngCont;
                                                    RecordValFundRsngCont=records[i];
                                                    if(RecordValFundRsngCont!=null)
                                                    {   
                                                        if(FieldType.toLowerCase()=='reference')
                                                        {
                                                            var refFieldApi;
                                                            var stdRefChk;
                                                            refFieldApi=MainfieldName;
                                                            stdRefChk=refFieldApi.substring(refFieldApi.length-3,refFieldApi.length);
                                                            if(stdRefChk=='__c')
                                                            {
                                                                refFieldApi=refFieldApi.substring(0,refFieldApi.length-1);
                                                                if(RecordValFundRsngCont.get(refFieldApi+"r") != null)
                                                                {
                                                                    RecordValFundRsngRef=RecordValFundRsngCont.get(refFieldApi+"r");
                                                                    MainfieldName='Name';
                                                                    MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                    refFieldApi='';
                                                                }
                                                                else
                                                                {
                                                                    MainFldData='';
                                                                }
                                                            }
                                                            else
                                                            {
                                                                stdRefChk=refFieldApi.substring(refFieldApi.length-2,refFieldApi.length);
                                                                if(stdRefChk.toLowerCase()=='id')
                                                                {
                                                                    MainfieldName=MainfieldName.substring(0,MainfieldName.length-2);
                                                                    if(RecordValFundRsngCont.get(MainfieldName) != null)
                                                                    {
                                                                        RecordValFundRsngRef=RecordValFundRsngCont.get(MainfieldName);
                                                                        MainfieldName='Name';
                                                                        MainFldData = RecordValFundRsngRef.get(MainfieldName);
                                                                        refFieldApi='';
                                                                    }
                                                                    else
                                                                    {
                                                                        MainFldData='';
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    MainFldData = RecordValFundRsngCont.get(MainfieldName);
                                                                }
                                                                
                                                            }
                                                                
                                                        }
                                                        else
                                                        {
                                                            MainFldData=records[i].get(MainfieldName);
                                                        }
                                                    
                                                    }
                                                }
                                            }
                                            if(MainFldData=='null' || MainFldData== null)
                                            {
                                                MainFldData='';
                                            }
                                            if(FieldType=='date')
                                            {   
                                                if(MainFldData != '' || MainFldData == null)
                                                {
                                                    var dateVal=MainFldData;
                                                    var _rcrdsVal=MainFldData;
                                                    var splt=_rcrdsVal.split(':');
                                                    
                                                    if(splt.length>1)
                                                    {
                                                        var value = new Date(dateVal);
                                                        try
                                                        { 
                                                            MainFldData = DateUtil.getDateStringFromUserLocale(value); 
                                                        }
                                                        catch(err)
                                                        {
                                                          alert("Create Data DateIndex Error.."+err);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        var value = new Date(dateVal.replace(/-/g, "/"));
                                                        try
                                                        { 
                                                            MainFldData = DateUtil.getDateStringFromUserLocale(value); 
                                                        }
                                                        catch(err)
                                                        {
                                                          alert("Create Data DateIndex Error.."+err);
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    MainFldData='';
                                                }
                                            }
                                            if(FieldType=='datetime')
                                            {   
                                                if(MainFldData != '' || MainFldData == null)
                                                {
                                                    var dateVal = new Date(MainFldData);
                                                    try
                                                    { 
                                                       MainFldData = DateUtil.getDateTimeStringFromUserLocale(dateVal); 
                                                    }
                                                    catch(err)
                                                    {
                                                        alert('err='+err);
                                                    }   
                                                }
                                                else
                                                {
                                                    MainFldData='';
                                                }
                                            }
                                            if(FieldType=='boolean')
                                            {   
                                                if(MainFldData=='true' || MainFldData==true)
                                                {
                                                    MainFldData=boolDsply;
                                                }
                                                else
                                                {
                                                    MainFldData='';
                                                }
                                            }
                                            if(FieldType=='currency')
                                            {   
                                                if(MainFldData != '' || MainFldData == null)
                                                {
                                                    try
                                                    { 
                                                        var currencyData = MainFldData;
                                                        MainFldData = getCurrencyValue({!if(isCurrency==true,'true','false')},'{!JSENCODE(strCurrencySystembol)}',records[i],currencyData,LocaleStrings,Namespaceprefix1+"Commitment__c");
                                                        MainFldData = '<span title="'+MainFldData+'">' + MainFldData + '</span>';
                                                        MainFldData= MainFldData;
                                                    }
                                                    catch(err)
                                                    {
                                                        alert('err='+err);
                                                    }   
                                                }
                                                else
                                                {
                                                    MainFldData='';
                                                }
                                            }
                                            if(j+1!=getSelectedfieldsPFC.length)
                                            {
                                                recordStringPFC+=MainFldData+'¤';
                                            }
                                            else
                                            {
                                                recordStringPFC+=MainFldData+'';
                                            }
                                        }
                                        gridValueFinalPFC+=""+recordStringPFC+"<¤>";
                                    }
                                }
                                else
                                {
                                    var queryAccBlnkRecFR;
                                    if(ContIdPF.startsWith("001"))
                                    {
                                        objToQry='Account';
                                    }
                                    else
                                    {
                                        objToQry='Contact';
                                    }
                                    queryAccBlnkRecFR = "Select name from "+objToQry+" where id= '"+ContIdPF+"' limit 1 " ;
                                    var queryAccBlnkRecFrRslt = sforce.connection.query(queryAccBlnkRecFR); // Main Query
                                    recordsAftrQuery = queryAccBlnkRecFrRslt.getArray("records");
                                    if(recordsAftrQuery.length>0)
                                    {
                                        recordRelParent=recordsAftrQuery[0].Name;
                                    }
                                    
                                }
                                
                                if(mainqueryresult.getBoolean("done"))
                                {                    
                                    queryMore = false;
                                }
                                else
                                {
                                    if(blnPastFundRsngAcc)
                                    {
                                        if(blnShowAllClickedPFA==true)
                                        {
                                            queryMore = true;
                                            mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);
                                        }
                                        else
                                        {
                                            queryMore = false;
                                        }
                                    }
                                    else
                                    {
                                        if(blnShowAllClickedPFC==true)
                                        {
                                            queryMore = true;
                                            mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);
                                        }
                                        else
                                        {
                                            queryMore = false;
                                        }
                                    }
                                    
                                }
                            }
                            createdataPFC();
                        }
                        catch(ex)
                        {
                            alert('Execute query error  PFC '+ex);
                            if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('15');
                            }
                            else if(ex.faultcode == 'sf:INVALID_FIELD'){
                                showSecurityError('E1');
                            }
                            else{
                               document.getElementById('err').innerHTML ='<Strong>Error2</Strong>: '+ex;
                               document.getElementById('err').style.display='block';
                            }
                        }    
                    }
                    
                    function setHeaderValuesPFC()
                    {    
                        try
                        {   
                            getqueryMainPFC="";
                            var objectType="";
                            var relName="";
                            for (var i=0; i<getSelectedfieldsPFC.length; i++) 
                            {   
                                var ObjectName=getSelectedfieldsPFC[i].split(':')[0];
                                var MainfieldName = getSelectedfieldsPFC[i].split(':')[1];
                                var FieldLabel=getSelectedfieldsPFC[i].split(':')[2];
                                var FieldType=getSelectedfieldsPFC[i].split(':')[3];
                                
                                headernamesPFC.push(getSelectedfieldsPFC[i].split(':')[2]);
                                
                            }
                            if(blnPastFundRsngAcc)
                            {
                                queryObj=Namespaceprefix1+"Fundraising__c";
                                FundRsngId="";
                                /*if(!headerclickedPFC)
                                {
                                    SortHeaderNamePFC='Name';
                                }*/
                                
                                whereClausePF=" where "+Namespaceprefix1+"Legal_Name__r.id ='"+ContIdPF+"'";
                                relName=Namespaceprefix1+"Legal_Name__r.Name";
                                
                            }
                            else
                            {
                                queryObj=Namespaceprefix1+"Fundraising_Contact__c";
                                FundRsngId=""+Namespaceprefix1+"Fundraising__r.Id ,";
                                /*if(!headerclickedPFC)
                                {
                                    SortHeaderNamePFC=Namespaceprefix1+"Fundraising__r.Name";
                                }*/
                                
                                whereClausePF=" where "+Namespaceprefix1+"Contact__r.id ='"+ContIdPF+"'";
                                relName=Namespaceprefix1+"Contact__r.Name";
                            }
                            
                            getqueryMainPFC = "Select id,"+FundRsngId+" "+fieldsPFC+" from  "+queryObj+" "+whereClausePF+" Order By "+SortHeaderNamePFC+" "+qrySortDrctnPFC+"  "  ;
                            if(getqueryMainPFC.indexOf(relName)>-1)
                            {
                                relName='';
                            }
                            else
                            {
                                relName=","+relName;
                            }
                            getqueryMainPFC = "Select id,"+FundRsngId+" "+fieldsPFC+" "+relName+" from  "+queryObj+" "+whereClausePF+" Order By "+SortHeaderNamePFC+" "+qrySortDrctnPFC+"  "  ;
                            
                        }   
                        catch(ex)
                        {
                            if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                            }
                            else{
                                document.getElementById('err').innerHTML ='<Strong>Error1</Strong>: '+ex;
                                document.getElementById('err').style.display='block';
                            }   
                        } 
                    }
                    
                    
                    function advance_filter_qry(){
                       try
                        {  
                            crtia_ContainFundR = false; 
                            Namespaceprefix1 = Namespaceprefix1;
                            var namespaceforcls=Namespaceprefix1.substring(0, Namespaceprefix1.length-2);
                            if(namespaceforcls.length>0)
                            {
                                namespaceforcls=namespaceforcls+'.';
                            }
                            
                            var queryvariablearray=new Array();
                            var call_operator_operation=false;
                            var countBlankField = 0;
                            
                            
                            for(var i=1;i<=CustomFilterRowId.length;i++)
                            {
                                var fieldid='a'+CustomFilterRowId[i-1]+'aa';
                                var fieldLabal = document.getElementById(fieldid).value
                                var get_field1 = arryAccountContactApiLabel[fieldLabal];
                                var operatorid='opt'+CustomFilterRowId[i-1];
                                var txtboxid='criteriatextbox'+CustomFilterRowId[i-1];
                                var get_operator1=document.getElementById(operatorid).value;
                                var get_value1=document.getElementById(txtboxid).value;         
                                
                                if(get_field1!=null && get_field1!='None' )
                                {
                                    if(get_value1.toLowerCase().trim()=='enter a value'.toLowerCase().trim())
                                    {
                                        get_value1='';
                                    }
                                    var selectioncriteriaobj={};
                                    call_operator_operation=true;
                                    selectioncriteriaobj.serialnumber=i;
                                    selectioncriteriaobj.field=get_field1;
                                    var getfieldaary1_temp = get_field1.split(':');
                                    if(getfieldaary1_temp[3].toLowerCase()=='date')
                                    {
                                        if(get_value1.trim().length>0 && get_value1!='')
                                        {
                                            var getdate_temp=sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdate", {getqueryjson:get_value1});
                                            selectioncriteriaobj.Value=getdate_temp.toString()
                                        }
                                    }
                                    else if(getfieldaary1_temp[3].toLowerCase()=='datetime')
                                    {
                                        if(get_value1.trim().length>0 && get_value1!='')
                                        {  
                                            var tempdate1=sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdatetime", {getqueryjson:get_value1});
                                           
                                            selectioncriteriaobj.Value=tempdate1.toString();   
                                        }       
                                    }
                                    else if(getfieldaary1_temp[3].toLowerCase()=='percent')
                                    {
                                        if(get_value1.trim().length>0 && get_value1!='' && (get_value1.indexOf('.') > -1))
                                        {  
                                            if(get_value1.indexOf('.%') == (get_value1.length-2))
                                            {
                                                selectioncriteriaobj.Value =   get_value1.replace(".%", ".0%"); ;
                                            }
                                            else if(get_value1.indexOf('.') == (get_value1.length-1))
                                            {
                                                selectioncriteriaobj.Value =   get_value1.replace(".", ".0"); ;
                                            }
                                            else if(get_value1.indexOf('.') == (get_value1.length-2))
                                            {
                                                selectioncriteriaobj.Value =   parseFloat(get_value1).toFixed(1);
                                            }
                                            else
                                            {
                                                selectioncriteriaobj.Value = get_value1;
                                            }                           
                                        }
                                        else
                                        {
                                            selectioncriteriaobj.Value = get_value1;
                                        }                       
                                    }
                                    else
                                    {
                                        selectioncriteriaobj.Value=get_value1;
                                    }
                                    selectioncriteriaobj.Operator=get_operator1;
                                    queryvariablearray.push(selectioncriteriaobj);
                                }
                                else
                                    countBlankField++ ;
                            }
                            
                            
                            if(call_operator_operation==true)
                            {
                                var res2 ;
                                for(var i=0;i<queryvariablearray.length;i++)
                                {  
                                    var FieldArrayObj = queryvariablearray[i].field.split(':');
                                    if(glblTabId=='AllContTabId')
                                    {
                                        if(FieldArrayObj[0].indexOf('Contact')>-1)
                                        {
                                           arrContSrchFlds.push(queryvariablearray[i]);
                                        }
                                        else{
                                            arrFundRAccSrchFlds.push(queryvariablearray[i]);
                                        }
                                    }
                                    else
                                    {
                                        arrFundRAccSrchFlds.push(queryvariablearray[i]);
                                    }
                                }
                                if(glblTabId != 'AllContTabId')
                                {
                                    filterstr=document.getElementById('j_id0:CreateFundraisingFormId:textfilt').value;
                                    filterstr=filterstr.trim();
                                    if(filterstr!='')
                                    {
                                        blnFilterValCheck=FilterValCheck(filterstr);
                                        if(blnFilterValCheck)
                                        {
                                            blnChckVal=check_value();
                                            if(blnChckVal)
                                            {
                                                whereClauseCreation(arrFundRAccSrchFlds);
                                            }
                                            
                                        }
                                        
                                    }
                                    else
                                    {
                                        finalfiltr= new Array();
                                        whereClauseCreation(arrFundRAccSrchFlds);
                                    }
                                    //check_value();//Advance filter Logic Added
                                }
                                else
                                {
                                    whereClauseCreation(arrFundRAccSrchFlds);
                                }
                                
                            }
                            
                            else
                            {
                                whereClause="";
                            }
                        }
                        catch(err)
                        {
                            alert(err);
                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('5');
                                
                            }
                        }   
                    }
                    function replacer(key, value) 
                    {
                        if (typeof value === 'number' && !isFinite(value)) 
                        {
                            return String(value);
                        }
                        return value;
                    }
                     function showSecurityError(num){
                
                        if(num=='E1'){
                            loadPopupnew('fancybox_background','InsufficientPrivlagesError');
                            centerPopupnew('InsufficientPrivlagesError');
                            
                            newUrl = '/'+'{!JSENCODE(retrunURlID)}';
                            window.location.href  = newUrl;
                        }
                        else if(num=='E2'){
                            closepopup('fancybox_background','FancyboxContainer');
                            loadPopupnew('fancybox_background','InsufficientPrivlagesError');
                            centerPopupnew('InsufficientPrivlagesError');
                        }
                    }
                    
                    function whereClauseCreation(whereCreator)
                    {
                        var stringJson = JSON.stringify(whereCreator,replacer);
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CommonUtilityGlobal.executequery1}', stringJson,pageName,finalfiltr.toString(),function(result, event)
                            {
                                if (event.status) 
                                {   
                                             
                                    var clsresult=result.replace(/\&lt\;/g,'<').replace(/\&lt\;/g,'<').replace(/\&gt\;/g,'>').replace(/\&amp\;/g,'&').replace(/&#39;/g, "'").replace(/\&quot\;/g, '"');
                                    if(clsresult.indexOf('The filter logic references an undefined filter:')==0)
                                    {
                                      document.getElementById('displayerrorcomponent').style.display='block';
                                      document.getElementById('displayerrorcomponent').innerHTML=' <span style="font-family:Arial,Helvetica,sans-serif;font-size:14px;font-weight:700;color:#FF0000;line-height:16px;">Error</span><br/>'+clsresult;
                                    }
                                    else
                                    {
                                        whereClause=clsresult;
                                        if(whereClause.indexOf('Contact__r') > -1)
                                        {
                                            var levelSearch = Namespaceprefix1+"Contact__r";
                                            var str = whereClause; 
                                            var myRegExp = new RegExp('Contact__r' ,'gi');
                                            whereClause = str.replace(myRegExp, levelSearch);
                                        }
                                        if(whereClause.indexOf('Legal_Name__r') > -1){
                                            
                                            var levelSearch = Namespaceprefix1+"Legal_Name__r";
                                            var str = whereClause; 
                                            var myRegExp = new RegExp('Legal_Name__r' ,'gi');
                                            whereClause = str.replace(myRegExp, levelSearch);
                                        }
                                        if(whereClause.indexOf('Institution__r') > -1){
                                            
                                            var levelSearch = Namespaceprefix1+"Institution__r";
                                            var str = whereClause; 
                                            var myRegExp = new RegExp('Institution__r' ,'gi');
                                            whereClause = str.replace(myRegExp, levelSearch);
                                        }
                                        if(whereClause.indexOf('Fundraising__r') > -1){
                                            
                                            var levelSearch = Namespaceprefix1+"Fundraising__r";
                                            var str = whereClause; 
                                            var myRegExp = new RegExp('Fundraising__r' ,'gi');
                                            whereClause = str.replace(myRegExp, levelSearch);
                                        }
                                        if(!ContQuery && glblTabId=='AllContTabId')
                                        {   
                                            queryFndRsngAllCont(whereClause);
                                        }
                                        else
                                        {
                                            var str;
                                            var whereClauseAllCont;
                                            if(whereClause=='')
                                            {
                                                whereClauseAllCont="";
                                            }
                                            else
                                            {
                                                whereClauseAllCont="AND ("+whereClause +")";
                                            }
                                            if(glblTabId=='FundContTabId')
                                            {
                                                str = " "+Namespaceprefix1+"Fundraising__r."+Namespaceprefix1+"Fund_Name__c = '"+LndPgFundId  +"'  "+whereClauseAllCont+" ";
                                            }
                                            else if(glblTabId=='AllContTabId')
                                            {
                                                //str = " AccountId In  ("+arrAllContAccIds+") "+whereClauseAllCont+" "; 
                                                str = " AccountId In  ("+finalFundRaisingQuery+") "+whereClauseAllCont+" ";
                                            }
                                            else{
                                                str = " ("+whereClause+") "; 
                                            }
                                            whereClause=str;
                                            ContQueryCreated=true;
                                            if(blnSearchClicked)
                                            {
                                                getNavatarSetupData();
                                            }
                                            else
                                            {
                                                executequeryMain(fields,whereClause);
                                            }
                                            
                                        }
                                    }
                                }
                                else if (event.type === 'exception') 
                                {
                                    sessionError('5');
                                }
                                else 
                                {
                                    
                                }
                            }, 
                            {escape: true}
                        );
                    }
                    function noOfContClickedQuery(selectedContIds,contClickedQuery,orderByAddOn)
                    {   
                        
                        
                    }
                    function queryFndRsngAllCont(whereClause)
                    {   
                        var queryMore=true;
                        arrAllContAccIds=[];
                        if(whereClause=='')
                        {
                            whereClause="";
                        }
                        else
                        {
                            whereClause="AND ("+whereClause +")";
                        }
                        var FundRsngQuery="SELECT "+Namespaceprefix1+"Legal_Name__c FROM "+Namespaceprefix1+"Fundraising__c where "+Namespaceprefix1+"Fund_Name__c = '"+LndPgFundId  +"'  "+whereClause +"  ";
                        var FundRsngQueryResult = sforce.connection.query(FundRsngQuery);
                        finalFundRaisingQuery = FundRsngQuery;
                        var rec = FundRsngQueryResult.getArray("records");
                        while(queryMore)
                        {
                            if(rec.length > 0)
                            {
                                for(var i=0;i<rec.length;i++)
                                {   
                                    var AccId=rec[i].get(Namespaceprefix1+"Legal_Name__c");
                                    if(AccId != null)
                                    {
                                        AccId='\''+AccId+'\'';
                                        if(arrAllContAccIds.indexOf(AccId)==-1)
                                        {
                                            arrAllContAccIds.push(AccId);
                                        }
                                        queryMore = false;
                                       break;
                                    }
                                }
                                queryMore = false;
                                break;
                            }
                            else{
                                queryMore = false;
                                break;
                            }
                            
                        }
                        
                        
                        ContQuery=true;
                        whereClauseCreation(arrContSrchFlds);
                    }
                    function headerValuesOnLoad()
                    {   
                        Namespaceprefix1 = Namespaceprefix1;
                        //strfieldsContByDefault='';
                        fields = '';
                        headerfields = '';
                        
                        for(var i=0;i<MainGridFildsAC.length;i++)
                        {                                
                            var mainfield = MainGridFildsAC[i].split(':');
                            if(glblTabId!='FundContTabId')
                            {
                                if(mainfield[0]=='Account')
                                {
                                    fieldName ='Account.'+mainfield[1];
                                    
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldName ='Account.'+RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldName='Account.'+RefFieldApi+'.Name';
                                            }
                                            else
                                            {
                                                fieldName ='Account.'+RefFieldApi;
                                            }
                                        }   
                                    }
                                    else{
                                        fieldName ='Account.'+mainfield[1];
                                    }
                                    
                                    
                                }
                                else{
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldName =RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldName=RefFieldApi+'.Name';
                                            }
                                            else
                                            {
                                                fieldName =RefFieldApi;
                                            }
                                        }   
                                    }
                                    else{
                                        fieldName =mainfield[1];
                                    }
                                }
                            }
                            else{
                            
                                if(mainfield[0]=='Account')
                                {
                                    fieldName =Namespaceprefix1+'Institution__r.'+mainfield[1];
                                    
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldName =Namespaceprefix1+'Institution__r.'+RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldName=Namespaceprefix1+'Institution__r.'+RefFieldApi+'.Name';
                                            }
                                            else
                                            {
                                                fieldName =Namespaceprefix1+'Institution__r.'+RefFieldApi;
                                            }
                                        }   
                                    }
                                    else{
                                        fieldName =Namespaceprefix1+'Institution__r.'+mainfield[1];
                                    }
                                    
                                    
                                }
                                else if(mainfield[0]=='Contact')
                                {
                                    fieldName =Namespaceprefix1+'Contact__r.'+mainfield[1];
                                    
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldName =Namespaceprefix1+'Contact__r.'+RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldName=Namespaceprefix1+'Contact__r.'+RefFieldApi+'.Name';
                                            }
                                            else
                                            {
                                                fieldName =Namespaceprefix1+'Contact__r.'+RefFieldApi;
                                            }
                                        }   
                                    }
                                    else{
                                        fieldName =Namespaceprefix1+'Contact__r.'+mainfield[1];
                                    }
                                    
                                    
                                }
                                else{
                                    if(mainfield[3].toLowerCase()=='reference' )
                                    {
                                        var RefFieldApi=mainfield[1];
                                        var stdRefChk;
                                        stdRefChk=RefFieldApi.substring(RefFieldApi.length-3,RefFieldApi.length);
                                        if(stdRefChk=='__c')
                                        {
                                            RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-1);
                                            fieldName =RefFieldApi+'r.Name';
                                        }
                                        else
                                        {
                                            stdRefChk=RefFieldApi.substring(RefFieldApi.length-2,RefFieldApi.length);
                                            if(stdRefChk.toLowerCase()=='id')
                                            {
                                                RefFieldApi=RefFieldApi.substring(0,RefFieldApi.length-2);
                                                fieldName=RefFieldApi+'.Name';
                                            }
                                            else
                                            {
                                                fieldName =RefFieldApi;
                                            }
                                        }   
                                    }
                                    else{
                                        fieldName =mainfield[1];
                                    }
                                }
                                
                            }
                            
                            if(i==0){
                                headerfields = MainGridFildsAC[i];
                                fields+= fieldName;
                                
                                
                            }else{
                                headerfields +=','+ MainGridFildsAC[i];
                                fields+= ','+fieldName;  
                                
                            }
                            if(glblTabId=='AllContTabId')
                            {
                                strfieldsContByDefault= fields;
                            }
                        }
                        var clumnsplit = fields.split(','); 
                        var blnAccfldsFundTypExist=false;
                        var blnAccfldsInstTypExist=false;
                        var blnConEmailExist=false;
                        arrQueryEmail="Email:Email";
                        updtFieldValEmail=getUpdatedHeaderVal(arrQueryEmail,"Contact");
                        if(!blnConEmailAccDenied)
                        {
                            AccNmCol=3;
                            RoleColPos=4;
                        }
                        else
                        {
                            AccNmCol=2;
                            RoleColPos=3;
                        }
                        
                        if(glblTabId=='FundContTabId')
                        {
                            AccfldsInstTyp= Namespaceprefix1+"Institution__r."+Namespaceprefix1+"Institution_Type__c";
                            AccfldsFundTyp= Namespaceprefix1+"Institution__r."+Namespaceprefix1+"Fund_Types__c";
                            AccFldsAccName= Namespaceprefix1+"Institution__r.Name";
                            
                            if(!blnConEmailAccDenied)
                            {
                                ContEmailField= Namespaceprefix1+"Contact__r.Email";
                            }
                                                
                        }
                        else
                        {
                            AccfldsInstTyp= "Account."+Namespaceprefix1+"Institution_Type__c";
                            AccfldsFundTyp= "Account."+Namespaceprefix1+"Fund_Types__c";
                            AccFldsAccName= "Account.Name";
                            
                            if(!blnConEmailAccDenied)
                            {
                                ContEmailField= "Email";
                            }
                            
                        }
                        
                        for( var k=0; k<clumnsplit.length; k++)
                        {   
                            if(clumnsplit[k].indexOf(AccfldsInstTyp) > -1)
                            {
                                blnAccfldsInstTypExist=true;
                            }
                            if(clumnsplit[k].indexOf(AccfldsFundTyp) > -1)
                            {
                                blnAccfldsFundTypExist=true;
                            }
                            if(!blnConEmailAccDenied)
                            {
                                if(clumnsplit[k].indexOf(ContEmailField) > -1)
                                {
                                    blnConEmailExist=true;
                                }
                            }
                        }
                        if(!blnAccfldsFundTypExist)
                        {
                            fields+= ','+AccfldsFundTyp;
                        }
                        if(!blnAccfldsInstTypExist)
                        {
                            fields+= ','+AccfldsInstTyp;
                        }
                        if(!blnConEmailAccDenied)
                        {
                            if(!blnConEmailExist)
                            {
                                fields+= ','+ContEmailField;
                            }
                        }
                        executequeryMain(fields,whereClause);
                    }  
                    function ShowAllClicked()
                    {
                        //showImz();
                        blnShowAllClicked=true;
                        executequeryMain(fields,whereClause);
                    }
                    
                    function ShowAllClickedPFC()
                    {
                        if(blnPastFundRsngAcc)
                        {
                            blnShowAllClickedPFA=true;
                        }
                        else
                        {
                            blnShowAllClickedPFC=true;
                        }
                        document.getElementById('blurred').style.display='';
                        executequeryMainPFC();
                        document.getElementById('blurred').style.display='none';
                    }
                    function srchRsltGrdSrtng()
                    {
                        for (var i=0; i<getSelectedfields.length; i++) 
                        {   
                            var ObjectName=getSelectedfields[i].split(':')[0];
                            var MainfieldName = getSelectedfields[i].split(':')[1];
                            var FieldLabel=getSelectedfields[i].split(':')[2];
                            var AccName;
                            var ContLstName;

                            if(MainfieldName=='Name'  && ObjectName=='Contact')
                            {
                                ContLstName=FieldLabel;
                            }
                            if(MainfieldName=='Name'  && ObjectName=='Account')
                            {
                                AccName=FieldLabel;
                            }
                            
                            
                            if(clckdHedrNmLbl=='Contact Name' && ObjectName=='Contact' && MainfieldName=='Name'   )
                            {
                                clckdHedrNmLbl=ContLstName;
                            }
                            if(clckdHedrNmLbl=='Account Name' && ObjectName=='Account' &&  MainfieldName=='Name'  )
                            {
                                clckdHedrNmLbl=AccName;
                            }
                            if(clckdHedrNmLbl==FieldLabel)
                            {
                                if(glblTabId=='FundContTabId')
                                {
                                    if(ObjectName=='Account')
                                    {
                                        SortHeaderName=Namespaceprefix1+"Institution__r."+MainfieldName;
                                    }
                                    else
                                    {
                                        SortHeaderName=Namespaceprefix1+"Contact__r."+MainfieldName;
                                    }
                                }
                                else
                                {
                                    if(ObjectName=='Account')
                                    {
                                        SortHeaderName="Account."+MainfieldName;
                                    }
                                    else
                                    {
                                        SortHeaderName=MainfieldName;
                                    }
                                }
                                break;
                            }
                        }
                        headerValuesOnLoad();
                    }
                    function srchRsltGrdSrtngPFC()
                    {
                        for (var i=0; i<getSelectedfieldsPFC.length; i++) 
                        {   
                            var ObjectName=getSelectedfieldsPFC[i].split(':')[0];
                            var MainfieldName = getSelectedfieldsPFC[i].split(':')[1];
                            var FieldLabel=getSelectedfieldsPFC[i].split(':')[2];
                            
                            if(clckdHedrNmLblPFC==FieldLabel)
                            {
                                
                                if(blnPastFundRsngAcc)
                                {
                                    if(ObjectName==Namespaceprefix1+"Fundraising_Contact__c")
                                    {
                                        SortHeaderNamePFC=Namespaceprefix1+"Fundraising_Contact__r."+MainfieldName;
                                    }
                                    else
                                    {
                                        SortHeaderNamePFC=MainfieldName;
                                    }
                                }
                                else
                                {
                                    if(ObjectName==Namespaceprefix1+"Fundraising__c")
                                    {
                                        SortHeaderNamePFC=Namespaceprefix1+"Fundraising__r."+MainfieldName;
                                    }
                                    else
                                    {
                                        SortHeaderNamePFC=MainfieldName;
                                    }
                                }
                                
                            }
                        }
                        getNavatarSetupDataPFC(ContIdPF);
                    }
                    function createdataPFC()
                    {
                        var OrgValrecordRelParent=recordRelParent;
                        if(recordRelParent.length>25)
                        {
                            recordRelParent=recordRelParent.substring(0,25)+'...';
                        }
                        if(blnPastFundRsngAcc)
                        {
                            ShowAllLinkId="ShowAllLinkPFA";
                            RecordsDsplyId="grid2PFA"
                            
                            document.getElementById('AccOrContNm').innerHTML=recordRelParent;
                           // document.getElementById('AccOrContNm').title=OrgValrecordRelParent;
                        }
                        else
                        {
                            ShowAllLinkId="ShowAllLinkPFC";
                            RecordsDsplyId="grid2PFC"
                            
                            document.getElementById('ContNmPFC').innerHTML=recordRelParent;
                            //document.getElementById('ContNmPFC').title=OrgValrecordRelParent;
                        }
                        // create grid object
                        var obj = new AW.UI.Grid;
                        var gridListStrArr="";
                        gridValueFinalPFC.trim();
                        gridListStrArr = gridValueFinalPFC.split('<¤>');
                        var gridListLen = gridListStrArr.length - 1;
                        var count = 0;   
                        for(var i=0; i<gridListLen; i++)
                        {
                            var subSplitfundr = gridListStrArr[i].split('¤');
                            for(var j=0; j<subSplitfundr.length; j++)
                            {
                                obj.setCellText(subSplitfundr[j],j,count);
                            }
                            count++;
                        }
                        //obj.setCellTooltip(subSplitfundr);
                        obj.setHeaderText(headernamesPFC);
                        obj.setRowCount(gridListLen);
                        columnnum=headernamesPFC.length; 
                        obj.setColumnCount(columnnum);  
                        obj.setHeaderTooltip(headernamesPFC);
                        if(blnPastFundRsngAcc)
                        {
                            obj.setId("Past_Fundraisings");
                        }
                        else
                        {
                            obj.setId("Past_FundraisingsContact");
                        }
                        obj.setHeaderHeight(31);
                        
                        obj.onSelectedRowsChanged = function(arrayOfRowIndices){
                        window.status = arrayOfRowIndices;
                        }
                        obj.setControlImage("fontsize");
                        obj.setControlValue("mixed");
                        obj.setSortColumn(SortColIndxPFC); 
                        obj.setSortDirection(SortColDrctnPFC,SortColIndxPFC);
                        obj.setCellEditable(false);
                        if(gridListLen<1999)
                        { 
                            document.getElementById(ShowAllLinkId).style.display = 'none';
                            if(gridListLen==0)
                            {
                                obj.setRowCount(1);
                                obj.setCellText('<span style="color:red; font-weight:bold;">No data to display.</span>',0,0);
                            }
                             
                            document.getElementById(RecordsDsplyId).innerHTML = gridListLen;
                        }
                        else 
                        {   if(gridListLen==2000){
                            document.getElementById(RecordsDsplyId).innerHTML = '1999+ ';
                            document.getElementById(ShowAllLinkId).style.display = 'block';}
                            else
                            {
                                //alert('gridlength else else entered.....'+gridListLen);
                                document.getElementById(RecordsDsplyId).innerHTML = gridListLen;
                                document.getElementById(ShowAllLinkId).style.display = 'none';
                            }
                        }
                        var columnwidth=700/headernamesPFC.length;
                        if(headernamesPFC.length<=7)
                        { 
                            for(var i=0;i<headernamesPFC.length;i++)
                            {                    
                                obj.setColumnWidth(columnwidth,i);                       
                            }
                        }
                        else
                        {
                            for(var i=0;i<headernamesPFC.length;i++)
                            {                               
                                obj.setColumnWidth(180,i);       
                            }
                        }
                        //for tooltip added by Qadir Khan..
                        obj.onCellMouseOver = function(event, column, row)
                            {
                                this.setCellTooltip(function(column, row) {
                                    if (column > 0) 
                                    {
                                        var temp = document.createElement("pre");
                                        temp.innerHTML = this.getCellValue(column, row);
                                        if (temp.firstChild != null) return temp.firstChild.nodeValue;
                                        else return "";
                                    } else {
                                        return "";
                                    }
                                });
                            }
                        obj.onHeaderClicked = function(event,column){
                            clckdHedrNmLblPFC=headernamesPFC[column];
                            blnHedrClkdPFC=true;
                            if(column==SortColIndxPFC)
                            {   if(SortColDrctnPFC=='ascending')
                                {
                                    SortColDrctnPFC='descending';
                                    qrySortDrctnPFC='DESC NULLS LAST';
                                }
                                else
                                {
                                    SortColDrctnPFC='ascending';
                                    qrySortDrctnPFC='ASC NULLS FIRST';
                                }
                            }
                            else
                            {
                                SortColDrctnPFC='ascending';
                                qrySortDrctnPFC='ASC NULLS FIRST';
                            }
                            document.getElementById('fcs2').focus();
                            document.getElementById('fcs2').blur();
                            SortColIndxPFC=column;
                            srchRsltGrdSrtngPFC();
                        
                        };
                        
                        
                        // write obj to the page
                        if(blnPastFundRsngAcc)
                        {
                            document.getElementById("gridPFA").innerHTML = obj;
                        }
                        else
                        {
                            document.getElementById("gridPFC").innerHTML = obj;
                        }
                        
                        //obj.refresh();
                    }
                    function ContClickedHome()
                    {
                        ContClickedHomeAF();
                    }
                    function ContClickedCompany()
                    {
                        ContClickedComAF();
                    }
                    function fundTypValidCheckHome()
                    {
                        if(!blnFundIdMatchedHome)
                        {
                            document.getElementById('ErrMsgFundTyp').style.display='';
                            document.getElementById('blurred').style.display='none';
                        }
                        else
                        {   
                            document.getElementById('ErrMsgFundTyp').style.display='none';
                            comTypValidCheckHome();
                        }
                    }
                    function comTypValidCheckHome()
                    {
                        if(!blnValidCompTyp)
                        {
                            document.getElementById('ErrMsgCompTyp').style.display='';
                            document.getElementById('blurred').style.display='none';
                        }
                        else
                        {   
                            document.getElementById('ErrMsgCompTyp').style.display='none';
                            LndngPageRfrshAF();
                            closepopup('fancybox_background','FancyboxContainer');
                            document.getElementById('blurred').style.display='none';
                        }
                    }
                    function LndngPageRfrsh()
                    {
                        
                        if(document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgFundHome')==null && document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgCompHome')==null )
                        {
                            if(isCoInvestmentStngOn)
                            {
                                fundTypValidCheckHome();
                            }
                            else if(blnCompValidEntr && isCoInvestmentStngOn==false)
                            {
                                comTypValidCheckHome();
                            }
                            else
                            {
                                LndngPageRfrshAF();
                                closepopup('fancybox_background','FancyboxContainer');
                                document.getElementById('blurred').style.display='none';
                            }
                        }
                        else
                        {
                            document.getElementById('blurred').style.display='none';
                        }
                        
                    }
                    function comTypValidCheckCompny()
                    {
                        if(!blnValidCompTyp)
                        {
                            document.getElementById('ErrMsgCompTypComp').style.display='';
                            document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=true;
                            
                        }
                        else
                        {   
                            if(blnKeyprs)
                            {
                                document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=true;
                            }
                            else
                            {
                                document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=false;
                                document.getElementById('ErrMsgCompTypComp').style.display='none';
                                document.getElementById('lookupFundComDsblDivId').style.display='none';
                                document.getElementById('lookupFundComDivId').style.display='';
                                
                            }
                            blnKeyprs=false;
                            
                        }
                    }
                    function KeyPrssCompTyp()
                    {
                        blnKeyprs=true;
                        if(document.getElementById('j_id0:CreateFundraisingFormId:lookupIdCom2').value=='')
                        {
                            document.getElementById('ErrMsgCompTypComp').style.display='none';
                            document.getElementById('j_id0:CreateFundraisingFormId:FundSelectListId').disabled=true;
                            document.getElementById('lookupFundComDsblDivId').style.display='none';
                            document.getElementById('lookupFundComDivId').style.display='';
                            
                        }
                    }
                    function KeyPrssCompTypWrng()
                    {
                        blnKeyprs=true;
                        if(document.getElementById('j_id0:CreateFundraisingFormId:lookupIdComWrng').value=='')
                        {
                            document.getElementById('ErrMsgCompTypCompWrng').style.display='none';
                        }
                    }
                    function KeyPrssHomeCompTyp()
                    {
                        blnKeyprs=true;
                        if(document.getElementById('j_id0:CreateFundraisingFormId:lookupIdCom').value=='')
                        {
                            document.getElementById('ErrMsgCompTyp').style.display='none';
                        }
                    }
                    function objGridToggleAllChkBoxes()
                    {
                        //flagChkCount = 0;
                        if(ObjGridHeaderChkBox.getControlValue() == false )
                        { 
                            
                            var noData = obj.getCellText(1,0);
                            if(noData.search('No records found.')==-1){
                                for(var i=0;i<RowCountContGrd;i++)
                                {
                                    var data= allcontactrecords[parseInt(i)];
                                    var contactID;
                                    var AccountID;                          
                                    if(data.length>0)
                                    {
                                        contactID= data[data.length-2];
                                        AccountID= data[data.length-1];
                                        if(arrObjSelectedRows.indexOf(i)==-1){
                                          arrObjSelectedRows.push(i);
                                          temp_accidsarray.push(AccountID+":"+contactID);                
                                        }
                                        obj.setCellValue(true, 0, i);
                                        flagChkCount++;
                                    }                               
                                    
                                }
                            }
                            else{
                                return null;
                            }
                            if(document.documentMode ==11)  
                            {
                                ObjGridHeaderChkBox.setControlValue(true);
                            }

                            if(document.documentMode < 9)  
                            {
                                ObjGridHeaderChkBox.setControlValue(false);
                            } 
                            
                            //Fix for IE Header Check bug
                        }
                        else if(ObjGridHeaderChkBox.getControlValue() == true)
                        {
                            
                            
                            var noData = obj.getCellText(1,0);
                            
                            
                            for(var i=0;i<RowCountContGrd;i++)
                            {
                                var data= allcontactrecords[parseInt(i)];
                                var contactID;
                                var AccountID;                          
                                if(data.length>0)
                                {
                                    contactID= data[data.length-2];
                                    AccountID= data[data.length-1];
                                    if(arrObjSelectedRows.indexOf(i)>-1){
                                      arrObjSelectedRows.remove(i);
                                      temp_accidsarray.remove(AccountID+":"+contactID);                
                                    }
                                    obj.setCellValue(false,0,i);
                                    flagChkCount--;
                                }                               
                                
                            }
                            if(document.documentMode == 11)  
                            {
                                ObjGridHeaderChkBox.setControlValue(false);
                            }
                            if(document.documentMode < 9)  
                            {
                                ObjGridHeaderChkBox.setControlValue(false);
                            } //Fix for IE Header Check bug
                            
                            if(noData.search('No match found.')==-1){                                   
                            }
                            else{
                                return null;
                            }
                             
                            
                        } 
                        
                        
                        
                        
                        if(arrObjSelectedRows.length > 0){
                            var gridText = obj.getCellValue(1,0);
                            
                            if(gridText=='No data to display'){
                                return false;
                            }
                        }
                        button1disable();
                        obj.refresh();
                    }
                    var arrParts;
                    function objGridCellChkBoxClickHandler(scltdVal)
                    {
                        arrParts = (this.getId()).split("-");
                        var data= allcontactrecords[parseInt(arrParts[3])];                      
                        var contactID= data[data.length-2];
                        var AccountID= data[data.length-1];
                        if(!obj.getCellValue(0,arrParts[3]) || obj.getCellValue(0,arrParts[3]) == 'false')
                        {
                            obj.setCellValue(true,0,arrParts[3]);
                            
                            if(arrObjSelectedRows.indexOf( parseInt(arrParts[3]))==-1){
                              arrObjSelectedRows.push(parseInt(arrParts[3]));
                              temp_accidsarray.push(AccountID+":"+contactID);                
                            }
                            flagChkCount++;
                            //arrObjSelectedRowsReport.push(contactID);
                        }
                        else
                        {
                            var removeIndex= parseInt(arrParts[3]);
                            obj.setCellValue(false,0,arrParts[3]);
                            if(arrObjSelectedRows.indexOf(removeIndex)>-1){
                              arrObjSelectedRows.remove(removeIndex);
                              temp_accidsarray.remove(AccountID+":"+contactID);
                            }
                              flagChkCount = flagChkCount-1;
                            
                        }
                       
                        if(flagChkCount == RowCountContGrd)
                           ObjGridHeaderChkBox.setControlValue(true);
                        else
                           ObjGridHeaderChkBox.setControlValue(false);
                        
                        button1disable();
                    }
                    function button1disable(){
                        if(arrObjSelectedRows.length > 0){
                            $('#addBtn1').removeAttr('disabled');
                            document.getElementById('addBtn1').style.pointerEvents = 'auto';
                        }
                        else{
                            $('#addBtn1').attr('disabled','disabled');
                            document.getElementById('addBtn1').style.pointerEvents = 'none';
                        } 
                    }
            </script>
            <script>
            var tempSearchHisotry ;
            var batchNo_rl = 0;
            var allcontactrecords_rl =new Array();
            var columnarry_rl;
            var displaycolumn_rl = new Array(1,2,3,4,5,6);
            
            var nomatchfound_rl = false;
            var totalpages_rl = 0;
            var getqueryMain_rl;
            var AccNameindex_rl;
            var hasoffundraisingindex_rl;
            var removeindex_rl;
            var direction_rl = 'ascending';
            var columnno_rl = 6;
            var gridIdReviewList;
            var arrObj = new Array();
            var accidsarray = new Array();
            var arrObjSelectedRows_rl=new Array();
            var arrObjConIdSelectedRows_temp=new Array();
            var arrObjConIdSelectedRowsFrQuery=new Array();
            
            var fundContactCount = 0;
            var instiSelContact = {};
            var dataSelContact = {};    // save previous grid 4 data 
            var fundRCon = new Object();
            var selConData2;
            var numberOfCon = {};
            var allcontactrecords_Temp= new Array();
            var allcontactrecords_rl_temp= new Array();
            var arrObjSlctdRowAllId= new Array();
            var arrMovedAccountId= new Array();
            var RecValContEmail;
            var RecordValCont;                                
            var RecordValAcc;                                
            var RecValAccId;                                
            var RecValAccName;                                
            var RecValContId;                                
            var RecValContName;  
            var RecValContEmail; 
            var arrQueryEmail;      
            var changedAcc = new Array();     
            var arrConData= new Array();
            var arrConData2= new Array();
            var arrRowToDel= new Array();
            finalArrayData = new Object();
            arrRowToDel=[];
            arrMovedAccountId=[];
            var MapReviewGridData = {}; 
            var Map_ConAccId = {};  
            var AccConMaplist = {}; 
            var AccConCount = new Array();
             
            function addToList(){
                try{
                    var AccoAndCon= new Array();
                    document.getElementById('blurred').style.display='';
                    arrObjSlctdRowAllId =[];
                    allcontactrecords_Temp= [];
                    allcontactrecords_rl_temp = [];
                    
                    
                    arrObjConIdSelectedRowsFrQuery=[];
                    flagChkCount = 0 ;
                    
                    for(var i=0;i<arrObjSelectedRows.length;i++){
                        var scltdVal = new Array();
                        arrConData2= new Array();
                        arrConData= new Array();                            
                        var scltdValAccId = allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1];
                        var scltdValConId = allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-2];
                        
                        if(AccConCount.indexOf(scltdValAccId)==-1){
                            AccConCount.push(scltdValAccId);
                            AccoAndCon.push(scltdValAccId);
                        }
                        if(AccConCount.indexOf(scltdValConId)==-1){
                            AccConCount.push(scltdValConId);
                            AccoAndCon.push(scltdValConId);
                        }
                    }
                    if(AccConCount.length<=4000){
                        for(var i=0 ; i < temp_accidsarray.length; i++){
                            var scltdVal=temp_accidsarray[i].split(':');                        
                            if(accidsarray.indexOf(scltdVal[0])==-1)
                            {
                                accidsarray.push(scltdVal[0]);
                            }                       
                        }
                        temp_accidsarray.length = 0;
                        if(accidsarray.length > 0){
                            for(var i=0;i<arrObjSelectedRows.length;i++){
                                var scltdVal = new Array();
                                arrConData2= new Array();
                                arrConData= new Array();
                               
                                var scltdValAccId = '\''+allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1]+'\'';
                                var scltdValConId = '\''+allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-2]+'\'';
                                var ConIdSlctd=allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-2];
                                ConIdSlctd=ConIdSlctd.substring(0,ConIdSlctd.length-1)
                                arrObjConIdSelectedRows_temp.push(scltdValConId);
                                arrObjConIdSelectedRowsFrQuery.push(scltdValConId);
                                arrObjSelectedRows_rl.push(scltdValAccId);
                                 
                                 
                                if(arrObjSlctdRowAllId.indexOf(ConIdSlctd) == -1)
                                {
                                    arrObjSlctdRowAllId.push(ConIdSlctd);
                                }
                                
                                var MapAccConIdKey=''+allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1]+'';
                             
                                
                                var arrConIdPerAcc=new Array();
                                arrConIdPerAcc.push(scltdValConId);
                                
                                if(MapAccConIdKey in dataSelContact){
                                    var arrExstngConId = new Array();
                                    for(var k=0;k<dataSelContact[MapAccConIdKey].length;k++)
                                    {
                                        arrExstngConId.push(dataSelContact[MapAccConIdKey][k]);
                                    }
                                    for(var j=0;j<arrConIdPerAcc.length;j++)
                                    {
                                       if(arrExstngConId.indexOf(arrConIdPerAcc[j])==-1)
                                        {
                                            arrExstngConId.push(arrConIdPerAcc[j]);
                                        }
                                    }
                                    dataSelContact[MapAccConIdKey]= arrExstngConId;
                                }
                                else
                                {
                                    dataSelContact[MapAccConIdKey] = arrConIdPerAcc ;
                                    
                                }
                                
                                if(allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1] in MapReviewGridData){
                                    arrRowToDel.push(arrObjSelectedRows[i]);    
                                }
                                else
                                {
                                    MapReviewGridData[allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1]] = allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-2];
                                    allcontactrecords_rl.push(allcontactrecords[arrObjSelectedRows[i]]);
                                    arrRowToDel.push(arrObjSelectedRows[i]);
                                   
                                }
                                    RecValAccId=allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-1];
                                    RecValContId=allcontactrecords[arrObjSelectedRows[i]][allcontactrecords[arrObjSelectedRows[i]].length-2];
                                    
                                    if(!blnConEmailAccDenied)
                                    {
                                        RecValContEmail=allcontactrecords[arrObjSelectedRows[i]][arrContEmailIndex[0]];
                                    }
                                    else
                                    {
                                        RecValContEmail="";
                                    }
                                    RecValContName=allcontactrecords[arrObjSelectedRows[i]][arrContNameIndex[0]];
                                    RecValAccName=allcontactrecords[arrObjSelectedRows[i]][arrAccNameIndex[0]];
                                    arrConData = [RecValContName,RecValContEmail,RecValAccName,"","",RecValContId];
                                    arrConData2.push(arrConData);
                                    
                                    
                                    //fundRCon[RecValAccId] = arrConData2;
                                    if(RecValAccId in fundRCon){
                                        var arrExstngConRecID = new Array();
                                        var arrExstingConRec = new Array();
                                        for(var z=0;z<fundRCon[RecValAccId].length;z++)
                                        {
                                            arrExstngConRecID.push(fundRCon[RecValAccId][z][fundRCon[RecValAccId][z].length-1]);
                                            arrExstingConRec.push(fundRCon[RecValAccId][z]);
                                        }
                                        for(var j=0;j<arrConData2.length;j++)
                                        {
                                           if(arrExstngConRecID.indexOf(arrConData2[j][arrConData2[j].length-1])==-1)
                                            {
                                                arrExstingConRec.push(arrConData2[j]);
                                            }
                                        }
                                        fundRCon[RecValAccId]= arrExstingConRec;
                                       
                                    }
                                    else
                                    {
                                        fundRCon[RecValAccId] = arrConData2;
                                        
                                    }
                                    
                            }
                            
                            
                            arrRowToDel.reverse();
                            for(var b=0;b<arrRowToDel.length;b++)
                            {
                                allcontactrecords.splice(arrRowToDel[b],1);
                            }
                            arrRowToDel=new Array();
                            createdata_rll();
                            createdata();
                            document.getElementById('idSelectdContCountDiv').innerHTML=arrObjSelectedRows.length;
                            
                            
                            arrObjSelectedRows= new Array();//.length = 0;
                            button1disable(); 
                            arrObj = new Array();
                            AddToListClicked=true;
                            document.getElementById('blurred').style.display='none';
                            loadPopupnew('ContactsSuccessfullyAdded');
                            centerPopupnew('ContactsSuccessfullyAdded');
                            myVar = setTimeout(closepopup('FancyboxContainer'), 1500);
                        }
                    
                    }                   
                    else{
                        for(var k=0; k<AccoAndCon.length;k++){
                            AccConCount.remove(AccoAndCon[k]);
                        }
                        loadPopupnew('fancybox_background','AccConCountError');
                        centerPopupnew('AccConCountError');
                        document.getElementById("AccConCountId").innerHTML="A maximum of 4000 records (Accounts and Contacts) can be processed for creating fundraisings. Please remove some records and try again.";
                    }
                    
                    
                    myVar = setTimeout(hidePopup, 1000);
                }
                
                
                catch(err){
                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('25');
                    }
                }   
            }
            
            function executequeryMain_rl()
            {   
                try{    
                    document.getElementById('err').style.display='none';
                    allcontactrecords_rl = new Array();
                    columnarry_rl = new Array();
                    AccNameindex_rl = new Array();
                    hasoffundraisingindex_rl = new Array();
                    removeindex_rl = new Array();
                    var getcolumn;
                    var getqry;      
                    
                    getqueryMain_rl = "Select Id,Name,"+Namespaceprefix1+"Institution_Type__c,"+Namespaceprefix1+"Fund_Types__c from Account ";
                    if(arrObjSelectedRows_rl.length>0){
                      getqueryMain_rl +=" where id in ("+arrObjSelectedRows_rl+") ";
                      getqueryMain_rl +=" order by Name ASC Limit " + limit;
                    }
                    else
                    {
                      getqueryMain_rl +=" order by Name ASC Limit 0" ;
                    }
                    getcolumn = getqueryMain_rl.substring(6,getqueryMain_rl.indexOf(' from ')); 
                
                    var clumnsplit = getcolumn.split(',');        
                    for( var i=0; i<clumnsplit.length; i++)
                    {
                       columnarry_rl.push(clumnsplit[i].trim());
                    }
                    var mainqueryresult = sforce.connection.query(getqueryMain_rl); // Main Query
                    var queryMore = true;
                     
                    while(queryMore)
                    {   
                        var records;                                
                        records = mainqueryresult.getArray("records");
                        for (var i = 0; i < records.length; i++)
                        {   
                            var str1=new Array();
                            for(var j=0;j<columnarry_rl.length;j++)
                            {   
                               if(columnarry_rl[j].indexOf('.')==-1)
                                {
                                    if(records[i].get(columnarry_rl[j]) != null)
                                        str1.push(records[i].get(columnarry_rl[j]));
                                    else
                                        str1.push('');
                                }                           
                                else
                                {                                       
                                    var getparentobjname=columnarry_rl[j].substring(0,columnarry_rl[j].indexOf('.'));
                                    var getparentobjfld=columnarry_rl[j].substring(columnarry_rl[j].indexOf('.')+1,columnarry_rl[j].length);
                                    var getparentobj=records[i].get(getparentobjname);                                
                                   
                                    if(getparentobj!=null)
                                    {  
                                        var getparentobjfldvalue;
                                        getparentobjfldvalue = getparentobj.get(getparentobjfld) + records[i].get(columnarry_rl[j+1]); if(getparentobjfldvalue != null){
                                            var myRegExp = new RegExp('<' ,'gi');
                                            getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&#60;');
                                            myRegExp = new RegExp('>' ,'gi');
                                            getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&gt;');
                                            str1.push(getparentobjfldvalue);
                                        }
                                        else
                                            str1.push('');
                                    }
                                    else
                                    {
                                       str1.push('');
                                    }             
                                }  
                            }
                           allcontactrecords_rl.push(str1);
                        }
                       if(mainqueryresult.getBoolean("done"))
                        {                    
                            queryMore = false;
                        }
                        else
                        {   
                            mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);   
                        }
                        first = false;
                    }
                    if( parseInt(allcontactrecords_rl.length) == 1999){
                    }
                    createdata_rll(); 
                }
                catch(ex)
                {
                    if(ex.faultcode != 'sf:INVALID_SESSION_ID'  ){
                        document.getElementById('err').innerHTML ='<Strong>Error4</Strong>: '+ex;
                        document.getElementById('err').style.display='block';
                    }
                }    
            }
            var mainRowData = new Array();
            var finalConData = new Array();
            var Accdes;
            var contactSelected = false;
            var sorted = false;
            var sortSelCon = false;
            var instiNameCount = new Array();
            var arrAccReqQueryFlds = new Array();
            var strAccReqFldsFinl="";
            function getUpdatedHeaderVal(crntFieldNameApi,Object)
            {
                var tempField = crntFieldNameApi.split(':');
                var updtdFieldName="";
                if(Object=="Account")
                {
                    if (accountLabelSecurity.indexOf(tempField[0]) == -1){
                        updtdFieldName = accountLabelSecurity[accountApiSecurity.indexOf(tempField[1])];
                        updtdFieldName= ""+updtdFieldName+"";
                    }
                    else
                    {
                        updtdFieldName=""+tempField[0]+"";
                    }
                }
                else if(Object=="Contact")
                {
                    if (contactLabelSecurity.indexOf(tempField[0]) == -1){
                        
                        if(contactApiSecurity.indexOf(tempField[1]) ==-1)
                        {
                            blnConEmailAccDenied=true;
                        }
                        else
                        {
                            updtdFieldName = contactLabelSecurity[contactApiSecurity.indexOf(tempField[1])];
                            updtdFieldName= ""+updtdFieldName+"";
                        }
                    }
                    else
                    {
                        
                        updtdFieldName=""+tempField[0]+"";
                    }
                }
                else
                {
                    if (FCLabelSecurity.indexOf(tempField[0]) == -1){
                    updtdFieldName = FCLabelSecurity[FCApiSecurity.indexOf(tempField[1])];
                    updtdFieldName= ""+updtdFieldName+"";
                    }
                    else
                    {
                        updtdFieldName=""+tempField[0]+"";
                    }
                }
                
                return updtdFieldName;
            }
            var blnIconClicked =false;
            function createdata_rll()
            {
                try
                {   
                    /* strAccReqFldsFinl="";
                     arrAccReqQueryFlds=["Institution Type:"+Namespaceprefix1+"Institution_Type__c",];*/
                    var arrQueryInstTyp="";
                    var arrQueryFundPref="";
                    arrQueryInstTyp="Institution Type:"+Namespaceprefix1+"Institution_Type__c";
                    updtFieldValInstTyp=getUpdatedHeaderVal(arrQueryInstTyp,"Account");
                    arrQueryFundPref="Fund Preferences:"+Namespaceprefix1+"Fund_Types__c";
                    updtFieldValFundPref=getUpdatedHeaderVal(arrQueryFundPref,"Account");
                    
                    var myHeaders =["Remove", "Account Name", updtFieldValInstTyp,updtFieldValFundPref, "# of Fundraising Contacts &nbsp;<span onclick='iconClicked();' pointer-events='none'><span class='YellowTooltip'  title='Click on the Fundraising Contacts link to add more Contacts to the same Fundraising.'  style='position:relative; top:-11px; left:-4px;'><span class='slds-icon icon-utility-info slds-icon-text-default'><img src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/info_60.png')}'  style='width:16px; height:16px;' /></span></span></span>"];
                                    
                    var myCells = [
                        ["<div class='slds-icon icon-utility-clear slds-icon-text-default' style='width:16px; height:16px;position:relative; top:-2px; left:20px;'><img src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/clear_60.png')}' /></div>", "Apax Partners", "Private Equity" , "Bridge Fund"  , "<a onclick='Past_FundraisingsContact2_PopUp(); return false;' href='#'>1 Contact(s)</a>"],
                    ];
                    var myHeadersTooltip =["Remove", "Account Name", updtFieldValInstTyp,updtFieldValFundPref, "# of Fundraising Contacts"];
                    // create grid object
                    var count=0             //will count number of reference type field
                    var columnnum=0;
                    var asc = 'ascending';
                    var ascdt = 'ascending';              
                    gridIdReviewList = new AW.UI.Grid;
                    AW.UI.Grid.prototype.setEvent("oncontextmenu", "");
                    gridIdReviewList.setId("Institution_of_Selected_Contacts");
                    gridIdReviewList.setHeaderText(myHeaders);
                    columnnum=myHeaders.length;
                    
                    gridIdReviewList.setHeaderTooltip(myHeadersTooltip);
                    // set number of columns/rows   
                    gridIdReviewList.setColumnCount(5);
                    //gridIdReviewList.setRowCount(7);
                    gridIdReviewList.setRowCount(accidsarray.length);
                    gridIdReviewList.setColumnWidth(70, 0);
                    gridIdReviewList.setColumnWidth(200, 1);
                    gridIdReviewList.setColumnWidth(200, 2);
                    gridIdReviewList.setColumnWidth(200, 3);
                    gridIdReviewList.setColumnWidth(230, 4);
                    gridIdReviewList.setHeaderHeight(31);     
                    gridIdReviewList.setRowHeight(30);
                    gridIdReviewList.getScrollTemplate().setEvent(AW.ie ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdReviewList.getScrollTemplate().setEvent(AW.safari ? "onmousewheel" : "onDOMMouseScroll", "");  
                    gridIdReviewList.getScrollTemplate().setEvent(AW.chrome ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdReviewList.getScrollTemplate().setEvent(AW.Firefox ? "onmousewheel" : "onDOMMouseScroll", "");
                    gridIdReviewList.setColumnCount(myHeaders.length); 
                    gridIdReviewList.setStyle("border", "0px solid white");   
                    gridIdReviewList.setStyle("width", "100%");
                    gridIdReviewList.setStyle("height", "320px");  
                    //gridIdReviewList.setsortDirection(ascdt);
                    gridIdReviewList.setSortColumn(1); 
                    gridIdReviewList.setSortDirection(ascdt,1);
                    //gridIdReviewList.setVirtualMode(false);             
                    var totalrowcount = 0;
                    var arrayIndex = 0;
                    var newclmnarray=new Array();
                    newclmnarray.push(" ");
                    var rowData = new Array();
                    
                    if(accidsarray.length>0){
                    
                        //for(var i=0;i<accidsarray.length;i++){              
                            
                                for(var j=0;j<allcontactrecords_rl.length;j++){
                                    if(accidsarray.indexOf(allcontactrecords_rl[j][allcontactrecords_rl[j].length-1])> -1)
                                    {
                                        //if(allcontactrecords_rl[j].indexOf(accidsarray[i])> -1){    
                                        if(allcontactrecords_rl[j][allcontactrecords_rl[j].length-1] in dataSelContact){
                                           count = dataSelContact[allcontactrecords_rl[j][allcontactrecords_rl[j].length-1]].length;
                                        }
                                        arrConData2=new Array();
                                        arrConData=new Array();
                                        var Id = allcontactrecords_rl[j][allcontactrecords_rl[j].length-1];
                                        myTempAccId = Id;
                                        var idData = '<a href="/'+ Id +'" target="_blank">'+ allcontactrecords_rl[j][strNameTypIndex] +'</a>';
                                        var linkData = '<a title="'+count+' Contact(s)" class="Con_popup"  onclick="contactPopupOpen(\''+Id+'\');">'+count+' Contact(s)</a>';                          
                                        var removeLink = "<div class='slds-icon icon-utility-clear slds-icon-text-default' style='width:16px; height:16px;position:relative; top:-2px; left:20px;'><a  title='Remove Row' onClick='removeItemFromGrid(\""+Id+"\");'><img src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/clear_60.png')}' /></div></a>"; 
                                        var instTyp=allcontactrecords_rl[j][strInstTypIndex];
                                        var fundPref=allcontactrecords_rl[j][strFundTypIndex];
                                        rowData = [removeLink,idData,instTyp,fundPref,linkData,Id];
                                        
                                        totalrowcount += 1;
                                        var existingID = false;
                                        for(var p=0;p<mainRowData.length;p++){                                  
                                            if(mainRowData[p].indexOf(Id)!=-1){
                                                existingID = true;
                                                mainRowData[p].splice(4,1,linkData);
                                            }
                                        }
                                        if(existingID==false){
                                            mainRowData.splice(arrayIndex,0,rowData);
                                            arrayIndex +=1;
                                        }
                                    }
                                }
                        gridIdReviewList.setCellText(mainRowData);              
                        gridIdReviewList.sort(1,ascdt);
                        
                        count = 0;
                        $('#cmfButton').removeAttr('disabled');
                        document.getElementById('cmfButton').style.pointerEvents = 'auto';
                    }
                    else{
                        var nodata = '<span style="color: #ff0000 !important;font-weight:bold;">No data to display.</span>';
                        gridIdReviewList.setCellText(nodata,1,0);
                        gridIdReviewList.setRowCount((1));
                        mainRowData.length=0;
                        $('#cmfButton').attr('disabled','disabled');
                        document.getElementById('cmfButton').style.pointerEvents = 'none';
                    }
                    document.getElementById("gridreviewresult").innerHTML = gridIdReviewList;
                    document.getElementById("IdRecCntAddLst").innerHTML = "Records: "+mainRowData.length;
                    
                    gridIdReviewList.onCellMouseOver = function(event, column, row)
                    {
                        this.setCellTooltip(
                            function(column,row)
                            {
                                if(column>=0)
                                {
                                    var temp=document.createElement("pre");
                                    temp.innerHTML=this.getCellValue(column, row);
                                    if(temp.firstChild != null )
                                        return temp.firstChild.nodeValue;
                                    else
                                        return "";                   
                                }
                                else
                                {
                                    return "";
                                }
                            }
                        );
                    }
                    nomatchfound_rl=false;  
                    
                    
                    gridIdReviewList.onHeaderClicked = function(event,column)
                    {   
                        
                        var headervalue2=this.getHeaderText(column); 
                        if(column==0)
                        {
                            return true;
                        }
                        else if(blnIconClicked )
                        {
                            blnIconClicked=false;
                            return true;
                            
                        }
                        else
                        {
                            if(columnno_rl==column)
                            {    
                                if(direction_rl=='DESC')
                                direction_rl='ASC';
                                else
                                direction_rl='DESC';
                            }
                            else
                            {   
                                direction_rl='ASC';
                            }
                        }
                        
                        blnIconClicked=false;
                        columnno_rl=column;               
                        gridIdReviewList.sort(column,direction_rl);
                        sorted = true;
                      
                        return 1;
                        
                    }
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('45');
                    }
                    else{
                        document.getElementById('err').innerHTML ='<Strong>Error8</Strong>: '+ex;
                        document.getElementById('err').style.display='block';
                    }   
                } 
            }
            function iconClicked()
            {
                blnIconClicked=true;
            }
            function removeItemFromGrid(recordId){
               
                for(var j=0;j<mainRowData.length;j++){
                    if(mainRowData[j].indexOf(recordId)>-1){
                    
                        mainRowData.splice(j,1);
                    }
                }
               
                if(accidsarray.indexOf(recordId)>-1){
                    accidsarray.splice(accidsarray.indexOf(recordId),1);
                    createdata_rll();
                    
                }
                
                if(recordId in instiSelContact){
                    delete instiSelContact[recordId];
                }
                
                if(recordId in dataSelContact){              
                   
                    for(var k=0;k<dataSelContact[recordId].length;k++)
                    {
                        var data1= dataSelContact[recordId][k].substring(1,dataSelContact[recordId][k].length-1);
                        if(AccConCount.indexOf(data1)>-1){
                            AccConCount.splice(AccConCount.indexOf(data1),1);
                        }
                    }

                    if(AccConCount.indexOf(recordId)>-1){
                        AccConCount.splice(AccConCount.indexOf(recordId),1);
                    } 
                    delete dataSelContact[recordId];
                }
                
                
                delete fundRCon[recordId];
                arrObjSelectedRows_stdcontact.length=0;
                arrObjSelectedRows_scontact_temp.length=0;
                selContIdArray.length = 0;
                selectedDataArray.length = 0;
                finalConData.length = 0;
                assignedValue==false;
            }   
            //var arrSlctdCont
            var allcontactrecords_stdcontact=new Array();
            function contactPopupOpen(accId){
                DeletedContactIDs = new Array();
                document.getElementById('blurred').style.display='';
                blnShowAllClicked_FC=false;
                allcontactrecords_stdcontact=new Array();
                tempSearchHisotry = '';
                primaryContact=''; 
                defaultCon=true; 
                linkClickedStart=true;
                arrObjSelectedRows_scontact.length=0;
                arrObjSelectedRows_scontact_temp.length=0;
                selContIdArray.length = 0;
                finalConData.length = 0;
                arrObjSelectedRows_scontact.length = 0;
                flagChkCount = 0;
                searched=false;
                arrDfltSlctdContFRC=new Array();
                arrOnlyDefaultSlctedCont=new Array();
               
                
                try{
                    if(checkFirstClick){
                        picklistData = getPickVals(Namespaceprefix1+'Fundraising_Contact__c',Namespaceprefix1+'Role__c');
                        checkFirstClick = false;
                    }
                    if(accId in dataSelContact){
                        for(var k=0;k<dataSelContact[accId].length;k++)
                        {
                            //var NewVal=dataSelContact[accId][k].substring(1,dataSelContact[accId][k].length-1)
                            arrDfltSlctdContFRC.push(dataSelContact[accId][k]);
                        }
                        
                    }
                    for(var z=0;z<fundRCon[accId].length;z++)
                    {       
                        allcontactrecords_stdcontact.push(fundRCon[accId][z]);
                    }
                    
                    executequeryMain_fRcontact();
                    executequeryMain_scontact(accId);
                    //executequeryMain_stdcontact(accId);
                    ContactAccess_fancybox();   
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('46');
                        clear_grid_3_value();
                        closepopup('fancybox_background','FancyboxContainer');
                    }
                    else if(ex.faultcode == 'sf:INVALID_FIELD' || ex.faultcode == 'sf:INVALID_TYPE' || ex == 'readonly'){
                        document.getElementById('blurred').style.display='none';
                        showSecurityError('E2');
                    }
                    else{
                       document.getElementById('err').innerHTML ='<Strong>Error5</Strong>: '+ex;
                       document.getElementById('err').style.display='block';
                    }
                }  
                return false;
            }
            
            function executequeryMain_fRcontact(){
                var queryFR = "Select   "+Namespaceprefix1+"Institution__c,"+Namespaceprefix1+"IsPrimary__c,"+Namespaceprefix1+"Role__c  from "+Namespaceprefix1+"Fundraising_Contact__c Limit 1" ;
                var mainqueryresult1 = sforce.connection.query(queryFR);
                //alert('mainqueryresult1   '+mainqueryresult1);
                var result = sforce.connection.describeSObject(Namespaceprefix1+"Fundraising_Contact__c");
                for (var i=0; i<result.fields.length; i++) 
                {
                    var field = result.fields[i];
                    if((field.name == Namespaceprefix1+"Role__c") || (field.name == Namespaceprefix1+"IsPrimary__c") || (field.name == Namespaceprefix1+"Institution__c")){
                        if(field.createable=='false') {
                            throw "readonly";
                            break;
                        }
                    }
                }   
            }
            
            function ContactAccess_fancybox()
            {
                document.getElementById('blurred').style.display='none';
                loadPopupnew('fancybox_background','ContactAccess_fancybox');
                centerPopupnew('ContactAccess_fancybox');
            }
            var batchNo_stdcontact = 0;
            var batchSize_stdcontact = 5;
            var allcontactrecords_stdcontact;
            var columnarry_stdcontact;
            var displaycolumn_stdcontact = new Array(1,2,3,4,5,6);
            var arrObjSelectedRows_stdcontact = new Array();
            var nomatchfound_stdcontact = false;
            var totalpages_stdcontact = 0;
            var headernames_stdcontact;
            var getqueryMain_stdcontact;
            var mailindex_stdcontact;
            var primaryindex_stdcontact;
            var roleindex_stdcontact;
            
            var columnno_stdcontact = 6;
            var gridIdSelectedContact;
            var start_stdcontact=0;
            var end_stdcontact=0;
            var finalData = new Array();
            var checkboxArray = new Array();
            var clickedSelectCon = false;
            
            var ConLimit = 50000;
            var batchNo_scontact = 0;
            var batchSize_scontact = 5;
            var allcontactrecords_scontact;
            var recordsRemotngCont;
            var columnarry_scontact;
            var displaycolumn_scontact = new Array(1,2,3,4,5,6);
            var arrObjSelectedRows_scontact = new Array();
            var arrObjSelectedRows_scontact_temp = new Array();
            var arrObjSelectedRows_scontact_imp = new Array();
            var nomatchfound_scontact = false;
            var totalpages_scontact = 0;
            var headernames_scontact;
            var getqueryMain_scontact;
            var arrDfltSlctdContFRC=new Array();
            var arrOnlyDefaultSlctedCont=new Array();
            var blnSearchClicked_FC=false;
            
            var direction_scontact = 'ASC NULLS FIRST';
            var columnno_scontact = 1;
            var gridIdSelectContact;
            var start_scontact=0;
            var end_scontact=0;
            var searchText_scontact="";
            var assignedValue= false;
            var searched = false;
            var selectedAccs = new Array();
            var searchedConIds = new Array();
            var defaultCon;
            var Limit_stdContact='';
            var arrChckFrQuery='';
             //Execute Query for Grid 1 
            function executequeryMain_scontact(accountid)
            { 
                $('#addSelConBtn').attr('disabled','disabled');
                document.getElementById('addSelConBtn').style.pointerEvents = 'none';
                //arrDfltSlctdContFRC=[];
                document.getElementById('hidden_id_inst').value=accountid;      
                document.getElementById('err').style.display='none';
                allcontactrecords_scontact = new Array();
                recordsRemotngCont = new Array();   
                
                columnarry_scontact = new Array();
                headernames_scontact = new Array();
                
                var getcolumn;
                var getqry;      
                headernames_scontact.unshift("") ; 
                for(var i=1;i<headernames.length;i++)
                {
                    headernames_scontact.push(headernames[i]);
                }
                var existingacc = false;
                if(glblTabId=='FundContTabId')
                {
                    getqueryMain_scontact = "Select "+strfieldsContByDefault+",Id from Contact where ";
                }
                else
                {
                    getqueryMain_scontact = "Select "+fields+",Id from Contact where ";
                }
                if(linkClickedStart == true){
                    getqueryMain_scontact +="Accountid='"+accountid+"'";
                    //linkClickedStart = false;
                }
                else{
                    
                    getqueryMain_scontact +="(";
                    var blnFieldError;
                    for (var i=0; i<getSelectedfields.length; i++) 
                    {   
                        blnFieldError=false;
                        var ObjectName=getSelectedfields[i].split(':')[0];
                        var MainfieldName = getSelectedfields[i].split(':')[1];
                        var FieldLabel=getSelectedfields[i].split(':')[2];
                        var FieldType=getSelectedfields[i].split(':')[3];
                        FieldType=FieldType.toLowerCase();
                        
                        if(ObjectName=='Account')
                        {
                            MainfieldName="Account."+MainfieldName;
                        }
                        else
                        {
                            MainfieldName=MainfieldName;
                        }
                        if(FieldType =='boolean' )
                        {
                           valuelower=searchText_scontact.toLowerCase();
                           blnFieldError=true;
                           if(valuelower=='true' || valuelower=='false')
                           {
                                blnFieldError=false;
                                
                                getqueryMain_scontact+=" Or  ( "+MainfieldName+" = "+searchText_scontact+" )";
                           }
                            
                        }
                        else if(FieldType  == 'currency' || FieldType  ==  'double') 
                        {
                           var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error
                           blnFieldError=true;
                           if(objRegExp.test(searchText_scontact))
                           {
                                blnFieldError=false;
                                searchText_scontact = parseFloat(searchText_scontact).toFixed(2);
                                getqueryMain_scontact+=" Or ( "+MainfieldName+" = "+searchText_scontact+" )";
                           }
                        }
                        else if(FieldType =='int')
                        {
                            var objRegExp = /^\s*-?[0-9]{1,18}\s*$/;        // In this number  is a Integer
                            blnFieldError=true;
                            if(objRegExp.test(searchText_scontact))
                            {   
                                if(searchText_scontact<=2147483647)
                                {
                                    blnFieldError=false;
                                    getqueryMain_scontact+=" Or ( "+MainfieldName+" = "+searchText_scontact+" )";
                                }
                            }
                        }
                        
                        else if(FieldType =='percent')
                        {
                            var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;
                            var getlaststing='';
                            var serachtext=searchText_scontact.toString();
                            blnFieldError=true;
                            if(serachtext.indexOf('%')>-1)
                            {
                                serachtext=serachtext.substring(0,serachtext.length-1);
                            }
                         
                            if(objRegExp.test(serachtext))
                            {
                                if(searchText_scontact<=2147483647)
                                {
                                    blnFieldError=false;
                                    getqueryMain_scontact+=" Or ( "+MainfieldName+" = "+searchText_scontact+" )";
                                }
                            }
                        }
                        else if(FieldType == 'multipicklist')
                        {
                             getqueryMain_scontact+=' Or  ( '+MainfieldName+' includes ( \''+searchText_scontact+'\' ))';
                        }
                        else if(FieldType == 'picklist')
                        {
                            getqueryMain_scontact+=' Or  ( '+MainfieldName+' like \'%'+searchText_scontact+'%\' )';
                        }
                        else if(FieldType=='string' || FieldType=='phone' )
                        {
                            getqueryMain_scontact+=' Or ( '+MainfieldName+' like \'%'+searchText_scontact+'%\' )';
                        }
                        else if(FieldType=='email')
                        {
                            getqueryMain_scontact+=' Or ( '+MainfieldName+' like \'%'+searchText_scontact+'%\' )';
                        }
                        else if(FieldType=='url')
                        {
                            getqueryMain_scontact+=' Or ( '+MainfieldName+' = \''+searchText_scontact+'\' )';
                        }
                        else if(FieldType=='date' || FieldType=='datetime')
                        {
                            blnFieldError=true;
                        }
                        else if(FieldType=='reference')
                        {
                            refTyp=MainfieldName.substring(MainfieldName.length-3,MainfieldName.length);
                            if(refTyp.indexOf("__c")>-1)
                            {
                                MainfieldName=MainfieldName.substring(0,MainfieldName.length-1);
                                MainfieldName=MainfieldName+"r.Name";
                            }
                            else
                            {
                                MainfieldName=MainfieldName+".Name";
                            }
                            getqueryMain_scontact+=' Or ( '+MainfieldName+' like \'%'+searchText_scontact+'%\' )';
                        }
                        else
                        {
                              getqueryMain_scontact+=' Or ( '+MainfieldName+' like \'%'+searchText_scontact+'%\' )';
                        }
                        if(getSelectedfields.length==i+1)
                        {
                            getqueryMain_scontact +=")";
                        }
                    }
                }  
                
                getqueryMain_scontact=getqueryMain_scontact.replace('where ( Or','where (');
                getqueryMain_scontact +="  order by "+SortHeaderName_FC+" "+qrySortDrctn_FC+"";
                getcolumn = getqueryMain_scontact.substring(6,getqueryMain_scontact.indexOf(' from ')); 
            
                var clumnsplit = getcolumn.split(',');  
                for( var x=0; x<clumnsplit.length; x++)
                {
                   columnarry_scontact.push(clumnsplit[x].trim());
                }
                var mainqueryresult = sforce.connection.query(getqueryMain_scontact); // Main Query
                var queryMore = true;
                var first = true;
                var skipNext = false;
                var arrDfltSlctdContFRC_temp= new Array();
                for(var p=0;p<arrDfltSlctdContFRC.length;p++)
                {
                    if(arrDfltSlctdContFRC_temp.indexOf(arrDfltSlctdContFRC[p])==-1)
                    {
                        arrDfltSlctdContFRC_temp.push(arrDfltSlctdContFRC[p]);
                    }
                    
                }
                if(blnSearchClicked_FC || blnSearchClicked_FC=='true')
                {
                    arrDfltSlctdContFRC_temp=new Array();
                }
                
                while(queryMore)
                {   
                    var records;                                
                    records = mainqueryresult.getArray("records");
                    
                    for (var i = 0; i < records.length; i++)
                    {   
                        var str1=new Array();
                        var StrConId='\''+records[i].get(columnarry_scontact[columnarry_scontact.length-1])+'\'';
                        
                        if(arrDfltSlctdContFRC_temp.indexOf(StrConId)== -1)
                        {
                            for(var j=0;j<columnarry_scontact.length;j++)
                            {   
                               if(columnarry_scontact[j].indexOf('.')==-1)
                                {
                                    if(records[i].get(columnarry_scontact[j]) != null){
                                        var conData = records[i].get(columnarry_scontact[j]) ;
                                        var myRegExp = new RegExp('<' ,'gi');
                                        conData = conData.replace(myRegExp,'&#60;');
                                        myRegExp = new RegExp('>' ,'gi');
                                        conData = conData.replace(myRegExp,'&gt;');
                                        str1.push(conData);
                                    }   
                                    else
                                        str1.push('');
                                }                           
                                else
                                {                                       
                                    var getparentobjname=columnarry_scontact[j].substring(0,columnarry_scontact[j].indexOf('.'));
                                    var getparentobjfld=columnarry_scontact[j].substring(columnarry_scontact[j].indexOf('.')+1,columnarry_scontact[j].length);
                                    var getparentobj=records[i].get(getparentobjname);                                
                                   
                                    if(getparentobj!=null)
                                    {  
                                        var getparentobjfldvalue;
                                          
                                        if(skipNext == false)
                                            getparentobjfldvalue = getparentobj.get(getparentobjfld);
                                        else
                                            getparentobjfldvalue = getparentobj.get(getparentobjfld) + records[i].get(columnarry_scontact[j+1]);                                      

                                        if(getparentobjfldvalue != null){
                                            var myRegExp = new RegExp('<' ,'gi');
                                            getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&#60;');
                                            myRegExp = new RegExp('>' ,'gi');
                                            getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&gt;');
                                            str1.push(getparentobjfldvalue);
                                        }
                                        else
                                            str1.push('');
                                    }
                                    else
                                    {
                                       str1.push('');
                                    }             
                               }  
                            }
                        
                            allcontactrecords_scontact.push(str1);
                        }
                    }
                    if(mainqueryresult.getBoolean("done"))
                    {                    
                        queryMore = false;
                    }
                    else
                    {
                        if(blnShowAllClicked_FC==true)
                        {
                            queryMore = true;
                            mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);
                        }
                        else
                        {
                            queryMore = false;
                        }
                    }
                }
                createdata_scontact();  
                createdata_stdcontact();                
            }            
            
            var selContIdArray = new Array();
            var flagChks ;
            var IsToggle_scontact;
            var ObjGridHeaderChkBox_scontact;
            var objGridCellChkBox_scontact;
            function createdata_scontact()
            {  
             try{
                    flagChks = 0;
                    searchedConIds.length = 0;
                    var asc = 'ascending';
                    var ascdt = 'ascending';
                        
                    gridIdSelectContact = new AW.UI.Grid;
                    AW.UI.Grid.prototype.setEvent("oncontextmenu", "");
                    gridIdSelectContact.setId("Past_FundraisingsContact2");
                    gridIdSelectContact.setHeaderText(headernames_scontact);
                    gridIdSelectContact.setHeaderTooltip(headernames_scontact);
                    gridIdSelectContact.setColumnWidth(60, 0);
                    gridIdSelectContact.setColumnWidth(130, 1);
                    gridIdSelectContact.setColumnWidth(130, 2);
                    gridIdSelectContact.setColumnWidth(100, 3);
                    gridIdSelectContact.setColumnWidth(150, 4);
                    gridIdSelectContact.setColumnWidth(150, 5);
                    gridIdSelectContact.setColumnWidth(140, 6);
                    gridIdSelectContact.setRowHeight(27);    
                    gridIdSelectContact.setHeaderHeight(31);
                    //gridIdSelectContact.setVirtualMode(false);
                    gridIdSelectContact.setColumnResizable(false,0);   
                    gridIdSelectContact.getScrollTemplate().setEvent(AW.ie ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdSelectContact.getScrollTemplate().setEvent(AW.safari ? "onmousewheel" : "onDOMMouseScroll", "");  
                    gridIdSelectContact.getScrollTemplate().setEvent(AW.chrome ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdSelectContact.getScrollTemplate().setEvent(AW.Firefox ? "onmousewheel" : "onDOMMouseScroll", "");
                    gridIdSelectContact.setColumnCount(headernames_scontact.length); 
                    gridIdSelectContact.setStyle("border", "0px solid white");   
                    gridIdSelectContact.setStyle("width", "100%");
                    gridIdSelectContact.setStyle("height", "175px"); 
                    ObjGridHeaderChkBox_scontact = new AW.UI.Checkbox;                
                    ObjGridHeaderChkBox_scontact.setEvent("onclick", objGridToggleAllChkBoxes_scontact);
                    objGridCellChkBox_scontact= new AW.Templates.Checkbox;
                    objGridCellChkBox_scontact.setEvent("onclick",objGridCellChkBoxClickHandler_scontact);
                    if(IsToggle_scontact == true) 
                        ObjGridHeaderChkBox_scontact.setControlValue(true);
                    else 
                        ObjGridHeaderChkBox_scontact.setControlValue(false);
                    gridIdSelectContact.setHeaderTemplate(ObjGridHeaderChkBox_scontact, 0);

                    
                    var newclmnarray=new Array();
                    newclmnarray.push(" ");
                    for(var i=0;i<columnarry_scontact.length;i++)
                    {
                        newclmnarray[i+1]=columnarry_scontact[i];
                    }
                    
                    var totalrowcount = 0;
                    var ContNmLblPos=headernames_scontact.indexOf('Contact Name');
                    if(allcontactrecords_scontact.length==0)
                    {
                        var getpos=displaycolumn_scontact.length;
                        getpos=Math.round(getpos/2);
                        if(nomatchfound_scontact==false)
                        {
                            var nodata = '<span style="color: #ff0000 !important;font-weight:bold;">No data to display.</span>';
                            gridIdSelectContact.setCellText(nodata,1,0);
                            gridIdSelectContact.setRowCount((1));
                        }             
                    }
                    else
                    {   
                        var p=0;
                        for(var i=0;i<allcontactrecords_scontact.length;i++)
                        {
                            var z=0;
                            var rowflag = false;
                            count=0;
                            
                            for(var j=0;j<newclmnarray.length;j++)
                                {  
                                    if(j==0)
                                    {   
                                        var Id = allcontactrecords_scontact[i][columnarry_scontact.length-1];
                                        
                                        searchedConIds.push("\'"+Id+"\'");
                                        var ischecked=false;
                                        
                                        if(arrObjSelectedRows_scontact_imp.indexOf("\'"+Id+"\'")>-1)   
                                        {
                                            ischecked=true;
                                            flagChks++;
                                        }
                                        gridIdSelectContact.setCellTemplate(objGridCellChkBox_scontact,0);
                                    }   
                                    else if(arrdatetimeIndex.indexOf(j) > -1)
                                    {   
                                        if(allcontactrecords_scontact[i][j-1] != '' || allcontactrecords_scontact[i][j-1] == null)
                                        {
                                            var dateVal = new Date(allcontactrecords_scontact[i][j-1]);
                                            try
                                            { 
                                               var dateOutput = DateUtil.getDateTimeStringFromUserLocale(dateVal); 
                                                gridIdSelectContact.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                            }
                                            catch(err)
                                            {
                                                alert('err='+err);
                                            }   
                                        }
                                    }
                                    else if(arrcurrencyIndex.indexOf(j) > -1){
                                        //alert('records[i]  '+records[i]);
                                        if(allcontactrecords_scontact[i][j-1] != '' || allcontactrecords_scontact[i][j-1] == null)
                                        {
                                            try
                                            { 
                                                var currencyData = allcontactrecords_scontact[i][j-1];
                                                var getcurrencyfldvalue = getCurrencyValue('{!if(isCurrency==true,'true','false')}','{!JSENCODE(strCurrencySystembol)}',allcontactrecords_scontact[i],currencyData,LocaleStrings,Namespaceprefix1+"Commitment__c");
                                                getcurrencyfldvalue = '<span title="'+getcurrencyfldvalue+'">' + getcurrencyfldvalue + '</span>';
                                                gridIdSelectContact.setCellText(getcurrencyfldvalue,j,parseInt(totalrowcount));                              
                                            }
                                            catch(err)
                                            {
                                                alert('err='+err);
                                            }   
                                        }
                                        
                                    }
                                    else if(arrdateIndex.indexOf(j) > -1)
                                    {           
                                        if(allcontactrecords_scontact[i][j-1] != '' || allcontactrecords_scontact[i][j-1] == null)
                                        {
                                            var dateVal=allcontactrecords_scontact[i][j-1];
                                            var _rcrdsVal=allcontactrecords_scontact[i][j-1];
                                            var splt=_rcrdsVal.split(':');
                                            
                                            if(splt.length>1)
                                            {
                                                var value = new Date(dateVal);
                                            
                                                try
                                                { 
                                                    var dateOutput = DateUtil.getDateStringFromUserLocale(value); 
                                                    gridIdSelectContact.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                                }
                                                catch(err)
                                                {
                                                  alert("Create Data DateIndex Error.."+err);
                                                }
                                            }
                                            else
                                            {
                                                var value = new Date(dateVal.replace(/-/g, "/"));
                                                try
                                                { 
                                                    var dateOutput = DateUtil.getDateStringFromUserLocale(value); 
                                                    gridIdSelectContact.setCellText(dateOutput,j,parseInt(totalrowcount));                                 
                                                }
                                                catch(err)
                                                {
                                                  alert("Create Data DateIndex Error.."+err);
                                                }
                                            }
                                        }
                                    }   
                                    else if(mailindex_scontact.indexOf(j) > -1)
                                    {
                                        var value = allcontactrecords_scontact[i][j-1];
                                        var data = '<a href="mailto:'+ value+'" title='+value+' >'+ value +'</a>';  
                                        gridIdSelectContact.setCellText(data,j,parseInt(totalrowcount));
                                    }
                                    else if(blnValIndx_scontact.indexOf(j) > -1)
                                    {
                                        var value = allcontactrecords_scontact[i][j-1];
                                        var boolDsply;
                                        if(value==true || value=='true')
                                        {
                                            boolDsply="<img  style='margin-left: 40%;width:16px; height:16px;' src='{!URLFOR($Resource.SLDS100, 'assets/icons/utility/check_60.png')}' />";
                                        }
                                        else
                                        {
                                            boolDsply=""; 
                                        }
                                        gridIdSelectContact.setCellText(boolDsply,j,parseInt(totalrowcount));
                                    }
                                    else if(j==ContNmLblPos)
                                    {
                                        var value = allcontactrecords_scontact[i][j-1];
                                        var data = '<a title="'+value+'" class="float_l" target=\'_blank\' href="/'+Id+'" style="margin-right:5px;">'+value+'</a>';  
                                        gridIdSelectContact.setCellText(data,j,parseInt(totalrowcount));
                                    }
                                    else
                                    {
                                        
                                        var getstr1=columnarry_scontact[j];
                                        var data;
            
                                        data=allcontactrecords_scontact[i][j-1];                                   
                                        if(data!=null && data!='')
                                        {
                                            data = data.split('?').join('&#63;');
                                            data = data.split('/').join('&#47;');
                                        }
                                        else
                                            data = '';
                                        
                                        gridIdSelectContact.setCellText(data,j,parseInt(totalrowcount));                        
                                    }
                                }  
                                
                            totalrowcount = totalrowcount+1;
                        }
                        gridIdSelectContact.setRowCount((totalrowcount));
                    }        
                    if(allcontactrecords_scontact.length<1999)
                    { 
                        document.getElementById('ShowAllLink_FC').style.display = 'none';
                        if(allcontactrecords_scontact.length==0)
                        {
                            gridIdSelectContact.setRowCount(1);
                            gridIdSelectContact.setCellText('<span style="color:red; font-weight:bold;">No data to display.</span>',1,0);
                        }
                         
                        document.getElementById('grid2_FC').innerHTML = allcontactrecords_scontact.length;
                    }
                    else 
                    {   
                        if(allcontactrecords_scontact.length==2000){
                        document.getElementById('grid2_FC').innerHTML = '1999+ ';
                        document.getElementById('ShowAllLink_FC').style.display = 'block';}
                        else
                        {
                            document.getElementById('grid2_FC').innerHTML = allcontactrecords_scontact.length;
                            document.getElementById('ShowAllLink_FC').style.display = 'none';
                        }
                    }
                    gridIdSelectContact.setSortColumn(SortColIndx_FC); 
                    gridIdSelectContact.setSortDirection(SortColDrctn_FC,SortColIndx_FC);
                    gridIdSelectContact.onHeaderClicked = function(event,column){
                      
                        
                        if(column==0)
                        {
                            return true;
                        }
                        else if(arrNonSortHdrs.toString().indexOf(column) > -1)
                        {   
                            return true;
                        }
                        else
                        {
                            clckdHedrNmLbl_FC=headernames_scontact[column];
                            $("#blurred").show();
                            myVar = setTimeout(hidePopup, 2000);
                            if(column==SortColIndx_FC)
                            {   if(SortColDrctn_FC=='ascending')
                                {
                                    SortColDrctn_FC='descending';
                                    qrySortDrctn_FC='DESC NULLS LAST';
                                }
                                else
                                {
                                    SortColDrctn_FC='ascending';
                                    qrySortDrctn_FC='ASC NULLS FIRST';
                                }
                            }
                            else
                            {
                                SortColDrctn_FC='ascending';
                                qrySortDrctn_FC='ASC NULLS FIRST';
                            }
                            document.getElementById('searchcon_grid_select_contact').focus();
                            document.getElementById('searchcon_grid_select_contact').blur();
                            SortColIndx_FC=column;
                            selContIdArray = new Array();
                            arrObjSelectedRows_scontact_imp = new Array();
                            srchRsltGrdSrtng_FC();
                        }
                    }
                    gridIdSelectContact.onCellMouseOver = function(event, column, row)
                        {
                            this.setCellTooltip(function(column, row) {
                                closeAllCombo();
                                if (column > 0) 
                                {
                                    var temp = document.createElement("pre");
                                    temp.innerHTML = this.getCellValue(column, row);
                                    if (temp.firstChild != null) return temp.firstChild.nodeValue;
                                    else return "";
                                } else {
                                    return "";
                                }
                            });
                        }
                    
                    if(allcontactrecords_scontact.length>2000)
                    {
                        myVar = setTimeout(hidePopup, 2000);
                    }
                    else
                    {
                        myVar = setTimeout(hidePopup, 1000);
                    }
                    document.getElementById("divSelectContact").innerHTML = gridIdSelectContact;
                }
                
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('30');
                    }
                    else{
                        document.getElementById('err').innerHTML ='<Strong>Error6</Strong>: '+ex;
                        document.getElementById('err').style.display='block';
                    }   
                }
            } 
            var arrParts_scontact;
            function objGridCellChkBoxClickHandler_scontact(obj)
            {
                try{
                    var totRows2 = gridIdSelectContact.getRowCount();
                    arrParts_scontact = (this.getId()).split("-");
                    var contactID= allcontactrecords_scontact[arrParts_scontact[3]][allcontactrecords_scontact[arrParts_scontact[3]].length-1];                      
                    //var contactID= data[data.length-2];
                    
                    if(!gridIdSelectContact.getCellValue(0,arrParts_scontact[3]) || gridIdSelectContact.getCellValue(0,arrParts_scontact[3]) == 'false')
                    {
                        gridIdSelectContact.setCellValue(true,0,arrParts_scontact[3]);
                        
                        if(arrObjSelectedRows_scontact_imp.indexOf(parseInt(arrParts_scontact[3]))==-1){
                          arrObjSelectedRows_scontact_imp.push(parseInt(arrParts_scontact[3]));
                            selContIdArray.push(contactID);
                        }
                        
                        flagChks++;
                        //arrObjSelectedRowsReport.push(contactID);
                    }
                    else
                    {
                        var removeIndex= parseInt(arrParts_scontact[3]);
                        gridIdSelectContact.setCellValue(false,0,arrParts_scontact[3]);
                       
                        if(arrObjSelectedRows_scontact_imp.indexOf(parseInt(arrParts_scontact[3]))>-1){
                          arrObjSelectedRows_scontact_imp.remove(parseInt(arrParts_scontact[3]));
                          selContIdArray.remove(contactID);
                        }
                          flagChks = flagChks-1;
                        
                    }
                    if( flagChks == totRows2)
                       ObjGridHeaderChkBox_scontact.setControlValue(true);
                    else
                        ObjGridHeaderChkBox_scontact.setControlValue(false);
                        
                    if(arrObjSelectedRows_scontact_imp.length==0){
                        $('#addSelConBtn').attr('disabled','disabled');
                        document.getElementById('addSelConBtn').style.pointerEvents = 'none';
                        
                    }
                    else{
                        $('#addSelConBtn').removeAttr('disabled');
                        document.getElementById('addSelConBtn').style.pointerEvents = 'auto';
                    }
                    
                    if(searchedConIds.indexOf("\'"+contactID+"\'")>-1){
                        searchedConIds.remove("\'"+contactID+"\'");
                    }
                }
                catch(ex){
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('37');}
                }           
            }
            
            function objGridToggleAllChkBoxes_scontact()
            {
                try{
                
                    if(ObjGridHeaderChkBox_scontact.getControlValue() == false )
                    { 
                        
                        var noData = gridIdSelectContact.getCellText(1,0);
                        if(noData.search('No records found.')==-1){
                            for(var i=0;i<allcontactrecords_scontact.length;i++)
                            {
                                var data= allcontactrecords_scontact[parseInt(i)];
                                var contactID;
                                                    
                                if(data.length>0)
                                {
                                    contactID= data[data.length-1];
                                    if(arrObjSelectedRows_scontact_imp.indexOf(i)==-1){
                                      arrObjSelectedRows_scontact_imp.push(i);
                                      selContIdArray.push(contactID);                
                                    }
                                    gridIdSelectContact.setCellValue(true, 0, i);
                                    flagChks = gridIdSelectContact.getRowCount();
                                }                               
                                
                            }
                        }
                        else{
                            return null;
                        }
                        if(document.documentMode ==11)  
                        {
                            ObjGridHeaderChkBox_scontact.setControlValue(true);
                        }

                        if(document.documentMode < 9)  
                        {
                            ObjGridHeaderChkBox_scontact.setControlValue(false);
                        } 
                        
                        //Fix for IE Header Check bug
                    }
                    else if(ObjGridHeaderChkBox_scontact.getControlValue() == true)
                    {
                        
                        
                        var noData = gridIdSelectContact.getCellText(1,0);
                        
                        
                        for(var i=0;i<allcontactrecords_scontact.length;i++)
                        {
                            var data= allcontactrecords_scontact[parseInt(i)];
                            var contactID;
                            if(data.length>0)
                            {
                                contactID= data[data.length-1];
                                if(arrObjSelectedRows_scontact_imp.indexOf(i)>-1){
                                  arrObjSelectedRows_scontact_imp.remove(i);
                                  selContIdArray.remove(contactID);                
                                }
                                gridIdSelectContact.setCellValue(false,0,i);
                                flagChks = 0;
                            }                               
                            
                        }
                        if(document.documentMode == 11)  
                        {
                            ObjGridHeaderChkBox.setControlValue(false);
                        }
                        if(document.documentMode < 9)  
                        {
                            ObjGridHeaderChkBox.setControlValue(false);
                        } //Fix for IE Header Check bug
                        
                        if(noData.search('No match found.')==-1){                                   
                        }
                        else{
                            return null;
                        }
                         
                        
                    } 
                    
                    if(arrObjSelectedRows_scontact_imp.length==0){
                        
                        $('#addSelConBtn').attr('disabled','disabled');
                        document.getElementById('addSelConBtn').style.pointerEvents = 'none';
                        
                    }
                    else{
                        $('#addSelConBtn').removeAttr('disabled');
                        document.getElementById('addSelConBtn').style.pointerEvents = 'auto';
                    }
                    
                    if(arrObjSelectedRows_scontact.length > 0){
                        var gridText = gridIdSelectContact.getCellValue(1,0);
                        if(gridText=='No data to display'){
                            flagChks = 0;
                            return false;
                        }
                    }
                }
                catch(ex){
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('36');
                    }
                }   
            }
            
            function Add_placeholder_onblur_select_contact(th){
                if(th.value == '')
                {
                    th.placeholder = 'Search'; 
                }
            }
            function getEnterEvent_select_contact1(e,th)
            {
                if(document.getElementById('searchcon_grid_select_contact').value !=''||document.getElementById('searchcon_grid_select_contact').value != null)
                {
                    document.getElementById('clearsearchenb_select_contact').style.display = 'block';
                }
                else
                {
                    document.getElementById('clearsearchenb_select_contact').style.display = 'none';
                }
                if(e.keyCode == 13)
                {
                    searchGridSelectContact();
                    document.getElementById('clearsearchenb_select_contact').style.display = 'block';
                }
                else if(e.keyCode ==8 || e.keyCode ==46 )
                {
                    if(th.value != '')
                    {
                        document.getElementById('clearsearchenb_select_contact').style.display = 'block';
                    }
                    else if(th.value=="")
                    {
                        closeAllCombo();
                        document.getElementById('searchcon_grid_select_contact').value='';
                        document.getElementById('searchcon_grid_select_contact').placeholder = 'Search'; 
                        document.getElementById('clearsearchenb_select_contact').style.display = 'none';
                        arrObjSelectedRows_stdcontact.length = 0;
                        arrObjSelectedRows_scontact_temp.length = 0;
                        arrObjSelectedRows_scontact_imp.length = 0;
                        tempSearchHisotry = '';
                        searchText_scontact='';
                        linkClickedStart = true;
                        
                       
                        executequeryMain_scontact(document.getElementById('hidden_id_inst').value);
                        columnno_scontact = 1;
                        gridIdSelectContact.sort(columnno_scontact,'ascending');
                    }
                }
                else if(th.value!='')
                {
                    if(e.keyCode!=8)
                    {
                        document.getElementById('clearsearchenb_select_contact').style.display = 'block';
                    }
                }
            }
            
            var searched_rl;
            function searchGridSelectContact(){
                try{
                    arrObjSelectedRows_stdcontact.length = 0;
                    arrObjSelectedRows_scontact_temp.length = 0;
                    arrObjSelectedRows_scontact_imp.length = 0;
                    tempSearchHisotry = '';
                    searched_rl = 'true';
                    
                    if(document.getElementById('searchcon_grid_select_contact').value == null ||document.getElementById('searchcon_grid_select_contact').value == '')
                    {
                        ShowHide_ConfirmDeletion();
                        
                    }
                    else
                    {
                        $("#blurred").show();
                        linkClickedStart = false;
                        addToListScontClicked = false;
                        blnSearchClicked_FC=true;
                        searchText_scontact=document.getElementById('searchcon_grid_select_contact').value;
                        searchText_scontact= searchText_scontact.replace(/'/g, "\\'");
                        executequeryMain_scontact(document.getElementById('hidden_id_inst').value);
                        columnno_scontact = 1;
                        gridIdSelectContact.sort(columnno_scontact,'ascending');
                    }
                    myVar = setTimeout(hidePopup, 1000);
                }
                catch(ex){
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('38');
                    }
                }   
            }
            
            function ShowAllClicked_FC()
            {
                blnShowAllClicked_FC=true;
                document.getElementById('blurred').style.display='';
                executequeryMain_scontact(document.getElementById('hidden_id_inst').value);
            }
            var blnCrossClicked=false;
            function clear_grid_select_contact(obj)
            {
                ShowAllLink_FC=false;
                addToListScontClicked=false;
                
                arrAddedCondata=new Array();
                if(!blnCrossClicked)
                {
                    arrDfltSlctdContFRC= new Array();
                }
                blnSearchClicked_FC=false;
                
                blnRemoveBtnClckd_stdcontact=false;
                linkClickedStart=true;
                closeAllCombo();
                document.getElementById('searchcon_grid_select_contact').value='';
                document.getElementById('searchcon_grid_select_contact').placeholder = 'Search'; 
                document.getElementById('clearsearchenb_select_contact').style.display = 'none';
                arrObjSelectedRows_stdcontact.length = 0;
                arrObjSelectedRows_scontact_temp.length = 0;
                arrObjSelectedRows_scontact_imp.length = 0;
                tempSearchHisotry = '';
                searchText_scontact='';
                primaryContact = '';
                executequeryMain_scontact(document.getElementById('hidden_id_inst').value);
                if (obj=='btnResetclear'){
                    columnno_scontact = 1;
                    gridIdSelectContact.sort(columnno_scontact,'ascending');
                    $("#hideFilterText1").show();
                    //$("#filterGridContactDiv").hide("fast");
                    $("#displayFilterText1").hide();
                    $("#filterGridContactDiv1").show();
                    $("#SrchSction").show();
                    //closeallcombo();
                }
                else
                {
                    executequeryMain_stdcontact(document.getElementById('hidden_id_inst').value);
                    columnno_scontact = 1;
                    gridIdSelectContact.sort(columnno_scontact,'ascending');
                    closeGridSelCont();
                }   
            }
            function srchRsltGrdSrtng_FC()
            {
                for (var i=0; i<getSelectedfields.length; i++) 
                {   
                    var ObjectName=getSelectedfields[i].split(':')[0];
                    var MainfieldName = getSelectedfields[i].split(':')[1];
                    var FieldLabel=getSelectedfields[i].split(':')[2];
                    if(clckdHedrNmLbl_FC==FieldLabel)
                    {
                        if(glblTabId=='FundContTabId')
                        {
                            if(ObjectName=='Account')
                            {
                                SortHeaderName_FC=Namespaceprefix1+"Institution__r."+MainfieldName;
                            }
                            else
                            {
                                SortHeaderName_FC=Namespaceprefix1+"Contact__r."+MainfieldName;
                            }
                        }
                        else
                        {
                            if(ObjectName=='Account')
                            {
                                SortHeaderName_FC="Account."+MainfieldName;
                            }
                            else
                            {
                                SortHeaderName_FC=MainfieldName;
                            }
                        }
                    }
                }
                executequeryMain_scontact(document.getElementById('hidden_id_inst').value);
            }
            var arrAddedCondata=new Array();
            var arrRowToDel_stdcontact=new Array();
            function addToList_stdcontact(){
                try{
                    
                    $("#blurred").show();
                    addToListScontClicked= true;
                    for( var i=0; i< arrObjSelectedRows_scontact_imp.length;i++){
                        
                        
                        RecValContId_stdcontact=allcontactrecords_scontact[arrObjSelectedRows_scontact_imp[i]][allcontactrecords_scontact[arrObjSelectedRows_scontact_imp[i]].length-1];
                        if(!blnConEmailAccDenied)
                        {
                            RecValContEmail_stdcontact=allcontactrecords_scontact[arrObjSelectedRows_scontact_imp[i]][arrContEmailIndex[0]];
                        }
                        else
                        {
                            RecValContEmail_stdcontact="";
                        }
                        RecValContName_stdcontact=allcontactrecords_scontact[arrObjSelectedRows_scontact_imp[i]][arrContNameIndex[0]];
                        RecValAccName_stdcontact=allcontactrecords_scontact[arrObjSelectedRows_scontact_imp[i]][arrAccNameIndex[0]];
                        arrConData_stdcontact = [RecValContName_stdcontact,RecValContEmail_stdcontact,RecValAccName_stdcontact,"","",RecValContId_stdcontact];
                        arrRowToDel_stdcontact.push(arrObjSelectedRows_scontact_imp[i]);
                        allcontactrecords_stdcontact.push(arrConData_stdcontact);
                        if(arrDfltSlctdContFRC.indexOf("\'"+RecValContId_stdcontact+"\'")==-1)
                        {
                            arrDfltSlctdContFRC.push("\'"+RecValContId_stdcontact+"\'");
                        }
                        
                    }
                    createdata_stdcontact();
                    
                    arrRowToDel_stdcontact.reverse();
                    for(var b=0;b<arrRowToDel_stdcontact.length;b++)
                    {
                        allcontactrecords_scontact.splice(arrRowToDel_stdcontact[b],1);
                    }
                    arrRowToDel_stdcontact=new Array();
                    createdata_scontact();
                    $('#addSelConBtn').attr('disabled','disabled');
                    document.getElementById('addSelConBtn').style.pointerEvents = 'none';
                    
                    arrObjSelectedRows_scontact_imp.length = 0;
                    myVar = setTimeout(hidePopup, 1000);
                    selContIdArray.length = 0;
                   // $("#PageNo_scontact").focus();
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  )
                    sessionError('42');
                }       
            }<!-- grid 4 code start-->
            
            var batchNo_stdcontact = 0;
            var batchSize_stdcontact = 5;
            var columnarry_stdcontact;
            var displaycolumn_stdcontact = new Array(1,2,3,4,5,6);
            var arrObjSelectedRows_stdcontact = new Array();
            var nomatchfound_stdcontact = false;
            var totalpages_stdcontact = 0;
            var headernames_stdcontact;
            var getqueryMain_stdcontact;
            var mailindex_stdcontact;
            var primaryindex_stdcontact;
            var direction_stdcontact = 'ASC NULLS FIRST';
            var columnno_stdcontact = 6;
            var gridIdSelectedContact;
            var start_stdcontact=0;
            var end_stdcontact=0;
            var finalData = new Array();
            var selectedDataArray = new Array();
           
            var emailFrQuery="";
            var AccNmCol;
            var RoleColPos;
            //Execute Query for Grid 1 
   
            function executequeryMain_stdcontact(accoundID)
            {
                try{
                    document.getElementById('err').style.display='none';
                    allcontactrecords_stdcontact = new Array();
                    columnarry_stdcontact = new Array();
                    headernames_stdcontact = new Array();
                    mailindex_stdcontact = new Array();
                    primaryindex_stdcontact = new Array();
                    roleindex_stdcontact = new Array();
                    //var dataarray=new Array();
                    var getcolumn;
                    var getqry;  
                   
                    var updtFieldValRole;
                    var updtFieldValPrimary;
                    headernames_stdcontact.unshift("Remove") ;  
                    headernames_stdcontact.push("Contact Name");
                   
                    
                    arrQueryRole="Role:"+Namespaceprefix1+"Role__c";
                    updtFieldValRole=getUpdatedHeaderVal(arrQueryRole,"FundRCont");
                    arrQueryPrimary="Primary:"+Namespaceprefix1+"IsPrimary__c";
                    updtFieldValPrimary=getUpdatedHeaderVal(arrQueryPrimary,"FundRCont");
                    if(!blnConEmailAccDenied)
                    {
                        emailFrQuery=',Email';
                        headernames_stdcontact.push(updtFieldValEmail);
                        mailindex_stdcontact.push(1);
                        headernames_stdcontact.push("Account Name"); 
                        headernames_stdcontact.push(updtFieldValRole);
                        roleindex_stdcontact.push(3);
                        headernames_stdcontact.push(updtFieldValPrimary);
                        primaryindex_stdcontact.push(4);
                    }
                    else
                    {
                        
                        headernames_stdcontact.push("Account Name"); 
                        headernames_stdcontact.push(updtFieldValRole);
                        roleindex_stdcontact.push(2);
                        headernames_stdcontact.push(updtFieldValPrimary);
                        primaryindex_stdcontact.push(3);
                    }
                    
                    var dataarrayNew=new Array();
                    var AccIdclause;
                    
                    getqueryMain_stdcontact = "Select Id,Name "+emailFrQuery+",Account.Name from Contact   ";
                    
                    if(accoundID in dataSelContact){
                        //dataarray = dataSelContact[accoundID];
                        for(i=0;i<arrDfltSlctdContFRC.length;i++)
                        {
                            var quotedId=arrDfltSlctdContFRC[i].substring(1,arrDfltSlctdContFRC[i].length-1);
                            selContIdArray.push(quotedId);
                        }
                        if(arrDfltSlctdContFRC.length>0){
                             getqueryMain_stdcontact +=" where (id in ("+arrDfltSlctdContFRC+") ";
                            getqueryMain_stdcontact +=" ) order by Name ASC";
                        }
                        else
                        {
                            getqueryMain_stdcontact +="order by Name ASC Limit 0" ;
                        }
                        
                    }
                    
                    
                    
                    getcolumn = getqueryMain_stdcontact.substring(6,getqueryMain_stdcontact.indexOf(' from ')); 
                
                    var clumnsplit = getcolumn.split(',');        
                    for( var i=0; i<clumnsplit.length; i++)
                    {
                       columnarry_stdcontact.push(clumnsplit[i].trim());
                    }
                    
                    
                    var mainqueryresult = sforce.connection.query(getqueryMain_stdcontact); // Main Query
                
                    var queryMore = true;
                    var first = true;
                    var skipNext = false;
                     
                    while(queryMore)
                    {   
                        var records;                                
                        records = mainqueryresult.getArray("records");
                        for (var i = 0; i < records.length; i++)
                        {   
                            var str1=new Array();
                            for(var j=0;j<columnarry_stdcontact.length;j++)
                            {   
                                if(!skipNext)
                                {
                                    if(columnarry_stdcontact[j].indexOf('.')==-1)
                                    {
                                        if(records[i].get(columnarry_stdcontact[j]) != null)
                                            str1.push(records[i].get(columnarry_stdcontact[j]));
                                        else
                                            str1.push('');
                                    }                           
                                    else
                                    {                                       
                                        var getparentobjname=columnarry_stdcontact[j].substring(0,columnarry_stdcontact[j].indexOf('.'));
                                        var getparentobjfld=columnarry_stdcontact[j].substring(columnarry_stdcontact[j].indexOf('.')+1,columnarry_stdcontact[j].length);
                                        var getparentobj=records[i].get(getparentobjname);                                
                                       
                                        if(getparentobj!=null)
                                        {  
                                            var getparentobjfldvalue;
                                              
                                            if(skipNext == false)
                                                getparentobjfldvalue = getparentobj.get(getparentobjfld);
                                            else
                                                getparentobjfldvalue = getparentobj.get(getparentobjfld) + records[i].get(columnarry_stdcontact[j+1]);                                      

                                            if(getparentobjfldvalue != null){
                                                var myRegExp = new RegExp('<' ,'gi');
                                                getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&#60;');
                                                myRegExp = new RegExp('>' ,'gi');
                                                getparentobjfldvalue = getparentobjfldvalue.replace(myRegExp,'&gt;');
                                                str1.push(getparentobjfldvalue);
                                            }   
                                            else
                                                str1.push('');
                                        }
                                        else
                                        {
                                           str1.push('');
                                        }             
                                    }  
                                }
                                else{ skipNext = false;}           
                            }
                           allcontactrecords_stdcontact.push(str1);
                        }
                       if(mainqueryresult.getBoolean("done"))
                        {                    
                            queryMore = false;
                        }
                        else
                        {   
                            mainqueryresult = sforce.connection.queryMore(mainqueryresult.queryLocator);   
                        }
                        first = false;
                    }
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('39');
                    }
                    else{
                        document.getElementById('err').innerHTML ='<Strong>Error7</Strong>: '+ex;
                        document.getElementById('err').style.display='block';
                    }
                }    
            }
            function createdata_stdcontact()
            {  
                try{
                    var count=0;
                    sortSelCon==false;
                    var asc = 'ascending';
                    var ascdt = 'ascending';   
                    var myController = { 
                        onKeyUp:        "selectPreviousRow", 
                        onKeyDown:        "selectNextRow", 
                        onKeyHome:        "selectFirstRow", 
                        onKeyEnd:        "selectLastRow", 
                        onKeyCtrlHome:    "selectFirstRow", 
                        onKeyCtrlEnd:    "selectLastRow", 
                        onKeyPageUp:    "selectPageUpRow", 
                        onKeyPageDown:    "selectPageDownRow", 
                        onRowMouseDown:    "selectClickedRow", 

                        onRowSelectedChanged: function(v, i){this.getRowTemplate(i).refresh()} 
                    }; 
                    columnarry_stdcontact = new Array();
                    headernames_stdcontact = new Array();
                    mailindex_stdcontact = new Array();
                    primaryindex_stdcontact = new Array();
                    roleindex_stdcontact = new Array();
                    //var dataarray=new Array();
                    var getcolumn;
                    var getqry;  
                   
                    var updtFieldValRole;
                    var updtFieldValPrimary;
                    headernames_stdcontact.unshift("Remove") ;  
                    headernames_stdcontact.push("Contact Name");
                   
                    
                    arrQueryRole="Role:"+Namespaceprefix1+"Role__c";
                    updtFieldValRole=getUpdatedHeaderVal(arrQueryRole,"FundRCont");
                    arrQueryPrimary="Primary:"+Namespaceprefix1+"IsPrimary__c";
                    updtFieldValPrimary=getUpdatedHeaderVal(arrQueryPrimary,"FundRCont");
                    if(!blnConEmailAccDenied)
                    {
                        emailFrQuery=',Email';
                        headernames_stdcontact.push(updtFieldValEmail);
                        mailindex_stdcontact.push(2);
                        headernames_stdcontact.push("Account Name"); 
                        headernames_stdcontact.push(updtFieldValRole);
                        roleindex_stdcontact.push(4);
                        headernames_stdcontact.push(updtFieldValPrimary);
                        primaryindex_stdcontact.push(5);
                    }
                    else
                    {
                        
                        headernames_stdcontact.push("Account Name"); 
                        headernames_stdcontact.push(updtFieldValRole);
                        roleindex_stdcontact.push(3);
                        headernames_stdcontact.push(updtFieldValPrimary);
                        primaryindex_stdcontact.push(4);
                    }
                    var data1 = picklistData;
                    gridIdSelectedContact = new AW.UI.Grid;
                    AW.UI.Grid.prototype.setEvent("oncontextmenu", "");
                    gridIdSelectedContact.setId("gridSelectedContact");
                    gridIdSelectedContact.setHeaderText(headernames_stdcontact);
                    gridIdSelectedContact.setHeaderTooltip(headernames_stdcontact);
                    gridIdSelectedContact.setColumnWidth(90, 0);
                    gridIdSelectedContact.setColumnWidth(180, 1);
                    gridIdSelectedContact.setColumnWidth(160, 2);
                    gridIdSelectedContact.setColumnWidth(160, 3);
                    gridIdSelectedContact.setColumnWidth(159, 4);
                    gridIdSelectedContact.setColumnWidth(99, 5);
                    gridIdSelectedContact.setCellEditable(true);
                    gridIdSelectedContact.setCellEditable(false, 0);
                    gridIdSelectedContact.setRowHeight(27);    
                    gridIdSelectedContact.setHeaderHeight(31);
                    gridIdSelectedContact.setColumnResizable(false,0);  
                    gridIdSelectedContact.setController("selection", myController); 
                    gridIdSelectedContact.setCurrentSelection("row"); 
                    gridIdSelectedContact.getScrollTemplate().setEvent(AW.ie ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdSelectedContact.getScrollTemplate().setEvent(AW.safari ? "onmousewheel" : "onDOMMouseScroll", "");  
                    gridIdSelectedContact.getScrollTemplate().setEvent(AW.chrome ? "onmousewheel" : "onDOMMouseScroll", ""); 
                    gridIdSelectedContact.getScrollTemplate().setEvent(AW.Firefox ? "onmousewheel" : "onDOMMouseScroll", "");
                    //gridIdSelectedContact.setVirtualMode(false);
                    gridIdSelectedContact.setColumnCount(headernames_stdcontact.length); 
                    gridIdSelectedContact.setStyle("border", "0px solid white");   
                    gridIdSelectedContact.setStyle("width", "100%");
                    gridIdSelectedContact.setStyle("height", "175px");
                    var value = gridIdSelectedContact.getScrollBars(); 
                    gridIdSelectedContact.setScrollBars(true); 
                    var totalrowcount = 0;
                    var arrayIndex=0;
                    var accExist = false;
                    if(allcontactrecords_stdcontact.length>0){
                        for(var i=0;i<allcontactrecords_stdcontact.length;i++)
                        {   
                                var id,emailLink,removeLink,conName,instiName,role,primary;
                                var selectedData = new Array();
                                var rowData1 = new Array();
                                var emailColPos;
                                var list;
                                list = new AW.UI.List;
                                
                                for(var j=0;j<headernames_stdcontact.length;j++)
                                {  
                                    if(j==0)
                                    { 
                                        id = allcontactrecords_stdcontact[i][allcontactrecords_stdcontact[i].length-1];
                                        rowData1.push(id);
                                        removeLink = '<div class="ShowHide_ConfirmationSelectContact slds-icon icon-utility-clear slds-icon-text-default" style="width:16px; height:16px;position:relative; top:-2px; left:20px;"><img title="Remove" onclick="removeFromSelectedContact(\''+id+'\');" src="{!URLFOR($Resource.SLDS100, 'assets/icons/utility/clear_60.png')}" /></div>';
                                        selectedData[0] = removeLink;
                                    }   
                                    else if(mailindex_stdcontact.indexOf(j) > -1 && blnConEmailAccDenied==false)
                                    {
                                        var value = allcontactrecords_stdcontact[i][mailindex_stdcontact-1];
                                        rowData1.push(value);
                                        emailLink = '<a href="mailto:'+ value+'" title='+value+' >'+ value +'</a>';  
                                        selectedData[j] = emailLink;
                                    }
                                    else if(roleindex_stdcontact.indexOf(j) > -1)
                                    {
                                         
                                        list.setItemText(data1); 
                                        list.setItemCount(data1.length);
                                        list.setSize(158,150);
                                            var ChangedRole=allcontactrecords_stdcontact[i][roleindex_stdcontact-1];
                                            //ChngedRolePrimary(data1,j,id);
                                            if(ChangedRole=='')
                                            {
                                                list.setSelectedItems(data1[0]);
                                            }
                                            else
                                            {
                                                list.setSelectedItems(data1[data1.indexOf(ChangedRole)]);
                                            }
                                            gridIdSelectedContact.setCellTemplate(new AW.Templates.Combo, j);                               
                                            gridIdSelectedContact.setPopupTemplate(list, j,i);
                                            selectedData[j]=ChangedRole;
                                    }
                                    else if(primaryindex_stdcontact.indexOf(j) > -1)
                                    {
                                        var radio = new AW.Templates.Checkbox;
                                        checkboxArray[i] = radio;
                                        radio.setClass("toggle", "radio");
                                        radio.setClass("templates", "radio");
                                        gridIdSelectedContact.setCellTemplate(radio,j);
                                        
                                        var ChangedPrimary=allcontactrecords_stdcontact[i][primaryindex_stdcontact-1];
                                        //ChngedRolePrimary(data1,j,id);
                                        if(ChangedPrimary=='')
                                        {
                                            gridIdSelectedContact.setCellValue(false,j,i);
                                        }
                                        else
                                        {
                                            gridIdSelectedContact.setCellValue(true,j,i);
                                        }
                                        selectedData[j]='';
                                        
                                        
                                    }
                                    else
                                    {
                                        if(j==1)
                                        {
                                            data=allcontactrecords_stdcontact[i][j-1]; 
                                        }
                                        else if(j==AccNmCol)
                                        {
                                            data=allcontactrecords_stdcontact[i][AccNmCol-1]; 
                                        }                                   
                                        if(data!=null && data!='')
                                        {
                                            data = data.split('?').join('&#63;');
                                            data = data.split('/').join('&#47;');
                                        }
                                        else
                                            data = '';
                                            rowData1.push(data);
                                        selectedData[j] = data;
                                    }
                                    selectedData[headernames_stdcontact.length] = id;
                                    
                                var conExist = false;
                                if(finalConData.length>0){
                                    for(var k=0;k<finalConData.length;k++){
                                        if(finalConData[k].indexOf(selectedData[headernames_stdcontact.length])==-1){
                                            continue;                                     
                                        }
                                        else{
                                            conExist = true;
                                            break; 
                                        }
                                    }
                                    if(conExist==true){
                                    }
                                    else{
                                        finalConData.splice(arrayIndex,0,selectedData);
                                        arrayIndex += 1;
                                    }
                                }
                                else{
                                    finalConData.splice(arrayIndex,0,selectedData);
                                    arrayIndex += 1;
                                }
                                totalrowcount = totalrowcount+1;
                            }
                           
                        }
                    }  
                    if(defaultPickValue != ''){
                        if(finalConData.length != 0 ){
                            for(var i = 0; i<finalConData.length; i++){
                                var RoleNewCol;
                                if(!blnConEmailAccDenied)
                                {
                                    RoleNewCol=4;
                                }
                                else
                                {
                                    RoleNewCol=3;
                                }
                                if(finalConData[i][RoleNewCol] == '' || finalConData[i][RoleNewCol] == null){
                                    
                                   finalConData[i][RoleNewCol] = defaultPickValue;
                                }
                            }
                        }
                    }
                    
                   
                    
                    if(finalConData.length==0)
                    {
                        gridIdSelectedContact.setRowCount(1);
                        gridIdSelectedContact.setCellText('<span style="color:red; font-weight:bold;">No data to display.</span>',1,0);
                    }
                    else
                    {
                        gridIdSelectedContact.setRowCount(finalConData.length);
                        gridIdSelectedContact.setCellText(finalConData);
                    }
                   

                    gridIdSelectedContact.sort(1,"ascending");
                    document.getElementById("divSelectedContact").innerHTML = gridIdSelectedContact;   
                    document.getElementById("RcrdCntSlctFundr").innerHTML = finalConData.length;   
                    
                            
                    gridIdSelectedContact.onCellClicked = function(event, col, row){
                        
                        if(!blnConEmailAccDenied)
                        {
                            if(col == 1 || col == 2 || col == 3){
                                closeAllCombo();
                            }
                        }
                        else
                        {
                            if(col == 1 || col == 2){
                                closeAllCombo();
                            }
                        }
                        
                        if(col == RoleColPos){
                            closeAllCombo(row);
                        }
                        //Radio Button cell click
                        else if(col == RoleColPos+1){
                            var gridRowCount = gridIdSelectedContact.getRowCount();
                            primaryContact = gridIdSelectedContact.getCellValue(headernames_stdcontact.length,row);
                            for(var c=0;c<gridRowCount;c++){
                                if(c != row){
                                    gridIdSelectedContact.setCellValue(false,RoleColPos+1,c);
                                }
                            }
                            var countss=0;
                            for(var c=0;c<gridRowCount;c++){
                                if(gridIdSelectedContact.getCellValue(RoleColPos+1,c) == false){
                                    countss++;
                                }
                            }
                            if(countss == gridRowCount){
                               
                            }       
                            closeAllCombo();
                        }
                        
                    }
                    gridIdSelectedContact.onCellMouseOver = function(event, column, row)
                    {
                        this.setCellTooltip(
                            function(column,row)
                            {
                                if(column>0)
                                {
                                    var temp=document.createElement("pre");
                                    temp.innerHTML=this.getCellValue(column, row);
                                    if(temp.firstChild != null )
                                        return temp.firstChild.nodeValue;
                                    else
                                        return "";                   
                                }
                                else
                                {
                                    return "";
                                }
                            }
                        );
                    }
                    gridIdSelectedContact.onCellMouseOut = function(event, column, row)
                    {
                        if(column==4)
                        {
                            return true;
                        }
                        else
                        {
                            closeAllCombo();
                        }
                    }
                    nomatchfound_stdcontact=false;
                    
                    gridIdSelectedContact.onHeaderClicked = function(event,column)
                    {   
                        closeAllCombo();
                        if(!blnConEmailAccDenied)
                        {
                            if(column==0 || column== 5 || column==4){
                                return 'disabled';
                            }
                        }   
                        else
                        {
                            if(column==0 || column== 3 || column==4){
                                return 'disabled';
                            }
                        }
                    }
                    
                    
                }                               
                
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('47');
                    }
                    else{
                        document.getElementById('err').innerHTML ='<Strong>Error9</Strong>: '+ex;
                        document.getElementById('err').style.display='block';
                    }   
                }
            }
            function getPickVals(table,field) {
                    var returnArray = new Array(); //return array holding all values
                    returnArray.push('--None--');
                    var oTable = sforce.connection.describeSObject(table); //connect to table
                    var oFields = oTable.fields; //look at fields on table
                    for (var a=0; a< oFields.length; a++) { //loop through all the fields
                        if (oFields[a].name == field) { //if the field is the requested one
                            var oPicklistVals = oFields[a].picklistValues; //look at all the picklist values for field
                            for (var b=0; b<oPicklistVals.length; b++) { //loop through all picklist values
                                if(oPicklistVals[b].defaultValue == 'true'){
                                    defaultPickValue = oPicklistVals[b].value;
                                }
                                returnArray.push(oPicklistVals[b].value); //push all picklist options to return array
                            }
                            if(defaultPickValue == ''){
                                defaultPickValue = '--None--';  
                            }
                            break; //we found field and picklist values so exit loop
                        }
                    }
                    return returnArray; //send back data
            }
            function ConfirmationRemovingContact()
            {
                loadPopupnew('fancybox_background','Confirmation_PopUp');
                centerPopupnew('Confirmation_PopUp');
            }
            function cancelFundrcontacts(){
                showImz();
            }
            function clear_grid_3_value(){
                linkClickedStart = true ;
                closeAllCombo();
                arrDfltSlctdContFRC=new Array();
                blnRemoveBtnClckd_stdcontact=false;
                arrObjSelectedRows_scontact_imp.length = 0;
                arrObjSelectedRows_stdcontact.length=0;
                arrObjSelectedRows_scontact_temp.length=0;
                arrObjSelectedRows_scontact.length=0;  
                arrObjSelectedRows_scontact_temp = new Array();
                gridIdSelectContact = new AW.UI.Grid;
                
            }   
            function closeAllCombo(clickedRow)
            {
                if(clickedRow == null)
                {
                    $( ".aw-popup-window.aw-system-control" ).remove();
                }
                else
                {
                    var checkOpenedPopUp = $(".aw-popup-window.aw-system-control");         
                    for(var i=0;i<checkOpenedPopUp.length;i++)
                    {
                        var elmtId = $( checkOpenedPopUp[i] ).children( 'span' ).attr('id');
                        var RoleNewColPos;
                        if(!blnConEmailAccDenied)
                        {
                            RoleNewColPos='4';
                        }
                        else
                        {
                            RoleNewColPos='3';
                        }
                        if(elmtId != "gridSelectedContact-popup-"+RoleNewColPos+"-"+clickedRow)
                            $( checkOpenedPopUp[i] ).remove();                      
                    }       
                    var currentClickedSize = $(".aw-popup-window.aw-system-control").length;
                    if(currentClickedSize > 1)
                    {
                        $( ".aw-popup-window.aw-system-control" ).remove();
                    }
                }
            }
            
            //onclick of apply button from fundraising contact popup.
            function createFundrcontacts(){
                try{
                    $("#blurred").show();
                    //fundRCon = new Object();
                   for(var i=0 ; i < DeletedContactIDs.length; i++){
                    if(AccConCount.indexOf(DeletedContactIDs[i])>-1){
                        AccConCount.splice(AccConCount.indexOf(DeletedContactIDs[i]),1);
                    }
                }
                    var gridRowCount = gridIdSelectedContact.getRowCount();
                    fundContactCount = gridRowCount;
                    selConData2 = new Array();
                    var fndRRec2 = new Array();
                    var checkNull = gridIdSelectedContact.getCellValue(1,0);
                    
                    if(checkNull == 'No data to display.' && gridRowCount == 1){
                         selConData2 = new Array();
                         fndRRec2 = new Array();
                         numberOfCon[document.getElementById('hidden_id_inst').value] = 0;
                    }
                    else{
                        numberOfCon[document.getElementById('hidden_id_inst').value] = gridRowCount;
                        for(var j=0;j<gridRowCount;j++){    
                            var fndRRec = new Array();
                            var selConData = new Array();
                            for(var i=0;i<=headernames_stdcontact.length;i++){
                                if(!blnConEmailAccDenied)
                                {
                                    
                                }
                                if(i==headernames_stdcontact.length-1){
                                    fndRRec.push(gridIdSelectedContact.getCellValue(i,j));
                                    selConData.push(gridIdSelectedContact.getCellValue(i,j));
                                }else if(i==0){
                                    selConData.push(gridIdSelectedContact.getCellText(i,j));
                                }
                                else if(i==RoleColPos){
                                    var x = gridIdSelectedContact.getCellText(i,j);
                                    if(x == '--None--'){
                                        selConData.push('');
                                        fndRRec.push('');
                                    }
                                    else{
                                        selConData.push(gridIdSelectedContact.getCellText(i,j));                
                                        fndRRec.push(gridIdSelectedContact.getCellValue(i,j));
                                    }   
                                }
                                else{
                                    selConData.push(gridIdSelectedContact.getCellText(i,j));                
                                    fndRRec.push(gridIdSelectedContact.getCellValue(i,j));
                                }
                            }
                            if(blnConEmailAccDenied)
                            {
                                fndRRec.splice(1, 0, "");
                                selConData.splice(1, 0, "");
                            }
                            fndRRec2.push(fndRRec);
                            var selConDataNew='\''+selConData[6]+'\'';
                            selConData2.push(selConDataNew);
                        }
                        
                    }
                   dataSelContact[document.getElementById('hidden_id_inst').value] = selConData2;
                   fundRCon[document.getElementById('hidden_id_inst').value] = fndRRec2;
                    finalConData.length = 0;
                    contactSelected = true;
                    assignedValue = false;
                    createdata_rll();
                    myVar = setTimeout(hidePopup, 1000);
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  )
                    sessionError('44');
                }       
            }
            var DeletedContactIDs = new Array();
            function removeFromSelectedContact(recordId){
                try{  
                    blnRemoveBtnClckd_stdcontact=true;
                    var recordIdVal="\'"+recordId+"\'";
                    DeletedContactIDs.push(recordId);
                    for(var m=0;m<allcontactrecords_stdcontact.length;m++){         
                        if(allcontactrecords_stdcontact[m].indexOf(recordId)>-1){         
                            allcontactrecords_stdcontact.splice(m,1);
                        }
                                            
                        
                    }
                    for(var l=0;l<arrDfltSlctdContFRC.length;l++){         
                        if(arrDfltSlctdContFRC[l].indexOf(recordIdVal)>-1){               
                            arrDfltSlctdContFRC.splice(l,1);
                        }
                                            
                        
                    }
                    //arrRecIdToRemove_stdcontact.push(recordId);
                    if(recordId == primaryContact){
                        primaryContact = '';
                    }
                    for(var j=0;j<finalConData.length;j++){         
                        if(finalConData[j].indexOf(recordId)>-1){               
                            finalConData.splice(j,1);
                        }   
                    }
                    
                    if(finalConData.length != 0 ){
                        for(var i = 0; i<finalConData.length; i++){
                            if(finalConData[i][6] == primaryContact){
                                gridIdSelectedContact.setCellValue(true,5,i);
                            }
                            else
                                gridIdSelectedContact.setCellValue(false,5,i);
                        }
                    }
                    createdata_stdcontact();
                    //executequeryMain_stdcontact(document.getElementById('hidden_id_inst').value);
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  )
                    sessionError('43');
                }   
            }
            
            //Fundraising Filter code started.
            function popupNew(data) <!-- show popup window when user click on lookup icon-->
            {
                var textboxid='criteriatextbox5'+data;
                var fieldid='a5'+data+'aa';
                var get_field=document.getElementById(fieldid).value;
                var fieldarray=get_field.split(':');
                window.open('/apex/picklistpopup?AKobjectt='+fieldarray[0]+'&page=riahub360component&pickval='+fieldarray[1]+'&datatype_f='+fieldarray[3]+'&nameid='+textboxid+ '&operation=insert','Ratting','width=800,height=520,toolbar=0,menubar=0,status=1,resizable=0');  
            }
            function checkNew(getpicklist,picklistnumber) // parameters are : value, rownumber
            {   
                 try
                {
                    close_allcalendaropen();
                }
                catch(err)
                {
                    alert('7.Calender Issue');
                }
                $(".error_txt").css({ display: "none" });
                var lookupiconid = 'lookupdiv5'+picklistnumber;
                var calendericonid = 'dtediv5'+picklistnumber;
                var picklistval=getpicklist.value;
               
                var picklistvaluearray=picklistval.split(':');
                
               
                
                var arraylength1=picklistvaluearray.length;
               
                var textboxid='criteriatextbox5'+picklistnumber;
              
                
                if(picklistvaluearray[arraylength1-1].toUpperCase() ==  'PICKLIST' || picklistvaluearray[arraylength1-1].toUpperCase() == 'BOOLEAN' || picklistvaluearray[arraylength1-1].toUpperCase() ==  'MULTIPICKLIST')
                {  
                    document.getElementById(calendericonid).style.display = 'none'; 
                    document.getElementById(lookupiconid).style.display = 'block';          
                }
                else if(picklistvaluearray[arraylength1-1].toUpperCase() == 'DATETIME' || picklistvaluearray[arraylength1-1].toUpperCase() == 'DATE' )
                {        
                    
                     document.getElementById(lookupiconid).style.display = 'none'; 
                     document.getElementById(calendericonid).style.display = 'block';         
                }
                else
                {            
                     document.getElementById(calendericonid).style.display = 'none'; 
                     document.getElementById(lookupiconid).style.display = 'none';   
                }
                document.getElementById(textboxid).value='';
            }  
            function closeCal(){
                try
                {
                    close_allcalendaropen();
                }
                catch(err)
                {
                    alert('6.Calender Issue');
                }
            }
            var fundraisingfieldarray=new Array();
            var result = sforce.connection.describeSObject(Namespaceprefix1+"Fundraising__c");
            for (var i=0; i<result.fields.length; i++) 
            {
                var field = result.fields[i];
                if(field.createable=='true')
                {
                    var fieldarray=new Array();
                    if(field.type=='reference')
                    {
                        fieldarray.push(field.relationshipName);
                        fieldarray.push(field.label);
                        fieldarray.push(field.type); 
                    }
                    else if(field.type!='textarea')
                    {
                        fieldarray.push(field.name);
                        fieldarray.push(field.label);
                        fieldarray.push(field.type); 
                    }
                    else if(field.type =='textarea' && field.length<=255)
                    {
                        fieldarray.push(field.name);
                        fieldarray.push(field.label);
                        fieldarray.push(field.type); 
                    }
                    if(fieldarray.length>0)
                    {
                        fundraisingfieldarray.push(fieldarray);
                    }
                }
            }
            fundraisingfieldarray=sortarraydata(fundraisingfieldarray,1,'ASC');
                        
            for(var i=1;i<=1;i++) // Adding Accounts field in selection crtieria picklist, as initially we are showing 3, so take loop of three
            {
                var selectlist=document.getElementById('a5'+i+'aa');
                var count1=selectlist.options.length; 
                for(var j=0;j<fundraisingfieldarray.length;j++)
                { 
                    var fundfldtype=fundraisingfieldarray[j][2].toUpperCase();
                    if((fundfldtype!='ENCRYPTEDSTRING') && (fundfldtype!='ID') && (fundfldtype!='REFERENCE'))
                    {
                        if(fundraisingfieldarray[j][0]!='Name'){
                            var value1='Fundraising:'+fundraisingfieldarray[j][0]+':'+fundraisingfieldarray[j][1]+':'+fundraisingfieldarray[j][2]; //0.FIELD NAME 1.FIELD LABEL 2.FIELD TYPE
                            selectlist.options[count1]=new Option('Fundraising:'+fundraisingfieldarray[j][1],value1);
                            count1=count1+1;
                            fundCount=fundCount+1;
                        }
                    }
                }
            } 
            var number_of_rowsNew=1; 
            CustomFilterRowIdNew=[];
            CustomFilterRowIdNew.push(1);
            function advanceflter_addrowNew()
            {          
                try
                {
                    if(number_of_rowsNew<fundCount)
                      {
                     
                        number_of_rowsNew=number_of_rowsNew+1;
                        var table=document.getElementById('AddRemoveSection1');
                        var rowCount = table.rows.length;
                        var row = table.insertRow(rowCount);
                        var rowid;
                        rowid = CustomFilterRowIdNew[CustomFilterRowIdNew.length -1]+1;
                        CustomFilterRowIdNew.push(rowid);
                        row.setAttribute("class","bg_gray_light");
                        row.setAttribute("id","row5"+rowid);
                        var setrowid1="row5"+rowid;
                        
                         
                        var cell1=document.createElement('TD');
                          
                        var DivElemntFlds=document.createElement('div');
                        DivElemntFlds.setAttribute("class", "slds-select_container");
                        
                        var selectfld = document.createElement("select");
                        selectfld.setAttribute("id", "a5"+rowid+"aa");
                        selectfld.setAttribute("class", "slds-select");
                        selectfld.setAttribute("onchange","checkNew(this,"+rowid+")");
                        selectfld.setAttribute("onclick","closeCal()");
                        var option = document.createElement("option");
                        option.setAttribute("value", "None");
                        option.innerHTML = "--None--";
                        selectfld.appendChild(option);
                                     
                         
                        var count1=1;
                          for(var j=0;j<fundraisingfieldarray.length;j++)
                            { 
                                
                                var accountfldtype=fundraisingfieldarray[j][2].toUpperCase();
                                if((accountfldtype!='ENCRYPTEDSTRING') && (accountfldtype!='ID') && (accountfldtype!='REFERENCE') )
                                {
                                    if(fundraisingfieldarray[j][0]!='Name'){
                                        var value1='Fundraising:'+fundraisingfieldarray[j][0]+':'+fundraisingfieldarray[j][1]+':'+fundraisingfieldarray[j][2];
                                        selectfld.options[count1]=new Option('Fundraising:'+fundraisingfieldarray[j][1],value1);
                                        count1=count1+1;
                                    }
                                }
                            }
                      
                        DivElemntFlds.appendChild(selectfld);     
                        cell1.appendChild(DivElemntFlds);
                        var cell3=document.createElement('TD');
                        var elementtxt = document.createElement("input"); 
                        elementtxt.type = "text";
                        elementtxt.id = "criteriatextbox5"+rowid;                
                        elementtxt.setAttribute("class","slds-input");
                        elementtxt.setAttribute("style", "width:80%");
                        cell3.appendChild(elementtxt);
                        var cell4=document.createElement('TD');
                        var spann1=document.createElement('SPAN');
                        
                        var oImg = document.createElement("img");
                        oImg.setAttribute('src', "{!URLFOR($Resource.PE_35,'PE_3.5/images/icon_calendar.png')}");
                        oImg.setAttribute('alt', 'Calendar');
                        oImg.setAttribute("id", "dtediv5" + rowid);
                        oImg.setAttribute("class", "celen");
                        var Txtbox_id = 'criteriatextbox5' + rowid;
                        oImg.setAttribute("onload", "initialiseCalendar(this,'" + Txtbox_id + "')");
                        oImg.setAttribute("onmouseover", "initialiseCalendar(this,'" + Txtbox_id + "')");
                        oImg.setAttribute("style", "margin-left:-86px; margin-top:-12px;");
                        oImg.style.display = 'none';
                            
                        //Adding Lookup icon element in TD
                        var Lookupimg = document.createElement("img");
                        Lookupimg.setAttribute('src', "{!URLFOR($Resource.PE_35,'PE_3.5/images/search_16.png')}");
                        Lookupimg.setAttribute('alt', 'Search');
                        Lookupimg.setAttribute("id", "lookupdiv5" + rowid);
                        Lookupimg.setAttribute("style", "position:relative; left:-84px;top:-10px;");
                        Lookupimg.setAttribute("onclick", "popupNew(" + rowid + ")");
                        Lookupimg.style.display = 'none';
                        var elementbtn = document.createElement("a");
                        elementbtn.setAttribute('class', 'btn_icon_delete');              
                        elementbtn.title = "Remove Row";
                        elementbtn.setAttribute("style","position:relative; top:9px; left:-60px");
                        elementbtn.setAttribute("id", "h1new" + rowid);
                        elementbtn.setAttribute("onclick", "advanceflter_removerowNew(" + rowCount + "," + rowid + ",\'" + setrowid1 + "\')");
                        spann1.appendChild(elementbtn);
                        spann1.appendChild(Lookupimg);               
                        spann1.appendChild(oImg);  
                        cell4.appendChild(spann1);
                        
                        row.appendChild(cell1);
                        row.appendChild(cell3);
                        row.appendChild(cell4);;
                        rowCount = table.rows.length;
                        var errrow = table.insertRow(rowCount);
                        errrow.setAttribute("class","rowB");
                        errrow.setAttribute("id","row5"+rowid+"_"+rowid);
                        var errcell=document.createElement('TD');
                        errcell.setAttribute("colspan","4");
                        var errordiv1 = document.createElement('div');
                        errordiv1.setAttribute("id", "ak_error5" + rowid);
                        errordiv1.setAttribute("style", "color: #FF0000;padding: 0 0 4px 50.5%;position: relative;   top:-4px;");
                        var errorspan2 = document.createElement('div');
                        errorspan2.setAttribute("id","divfname_opt5"+rowid);               
                        errorspan2.setAttribute("style","display:none;color: #FF0000 ! important;");
                        errorspan2.innerHTML = "Please select a Field.";
                        errcell.appendChild(errordiv1);
                        errcell.appendChild(errorspan2);
                        errrow.appendChild(errcell);                
                    }
                    
                   if (number_of_rowsNew == fundCount)
                   {
                         document.getElementById('AddRow1').className ='not_active';  // add css
                   }
                   else{
                   }
                   
                    /* End */
                   
                }
                catch(err)
                {
                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('48');
                    }
                    else
                        alert('advanceflter_addrowNew Error: '+err);
                }
            }       
            function advanceflter_removerowNew(a,b,c)
            {  
                try
                {
                    close_allcalendaropen();
                }
                catch(err)
                {
                    alert('11.Calender Issue');
                }
                if(number_of_rowsNew>1)
                {
                    var deleterownumber = 0;
                    var table = document.getElementById('AddRemoveSection1');
                    var rowCount = table.rows.length;
                    //var row = document.getElementById('row5'+number_of_rowsNew);
                    for (var i = 0; i < rowCount; i++) 
                    {
                        if (table.rows[i].id == c) {
                            deleterownumber = i;
                            break;
                        }
                    }
                    table.deleteRow(deleterownumber + 1);
                    table.deleteRow(deleterownumber);
                    var getpos = GetPosition_Advance(b, CustomFilterRowIdNew);
                    CustomFilterRowIdNew.splice(getpos, 1);
                    number_of_rowsNew=number_of_rowsNew - 1;
                }
            }           
            var finalArrayData = new Object();
            function createMassFundraising(){
                //showImz();
                try
                {
                    close_allcalendaropen();
                }
                catch(err)
                {
                    alert('8.Calender Issue');
                }
                var flagSt = true;
                for(var i=0;i<CustomFilterRowIdNew.length;i++){
                 
                    document.getElementById('a5'+CustomFilterRowIdNew[i]+'aa').classList.remove("error_border");
                }
                blnLndngPgCrFundrsngClckd=true;
                CreateMassFundraisingFinal();
            }
            function CreateMassFundraisingFinal()
            {
                
                inputvalue = document.getElementById('j_id0:CreateFundraisingFormId:lookupIdComWrng').value;
                for(var i=0;i<CustomFilterRowIdNew.length;i++){
                    document.getElementById('ak_error5'+CustomFilterRowIdNew[i]).innerHTML = ''; 
                    document.getElementById('divfname_opt5'+CustomFilterRowIdNew[i]).innerHTML = '';
                }
                try{
                    if(chk_advancefiltervalidationNew()){
                        finalArrayData = new Object();
                        var fieldArray = new Array();
                        var fieldValueArray = new Array(); // added by Ankit
                        var valueArray = new Array();
                        var fndrrecrds = new Array();
                        var fndrIds = new Array();
                        var tempNo1 = 0 ;
                        var flags = true ;
                        var table=document.getElementById('AddRemoveSection1');
                        var rowCount = table.rows.length;
                        var tempPicklistVal  = new Array(); // added by Ankit
                        
                        for(var i=0;i<CustomFilterRowIdNew.length;i++){
                            var picklistval = document.getElementById('a5'+CustomFilterRowIdNew[i]+'aa').value;
                            var picklistvaluearray=picklistval.split(':');
                            var fieldType = new Array();
                            var fieldVType = new Array(); // added by Ankit
                            var fieldValDT;
                            fieldType.push(picklistvaluearray[1],picklistvaluearray[3]);
                            if(picklistvaluearray[2] != null && picklistvaluearray[2] != ''){
                                fieldVType.push(picklistvaluearray[2]);  // added by Ankit
                            }
                            fieldArray.push(fieldType);
                            fieldValueArray.push(fieldVType); // added by Ankit
                           
                            valueArray.push(document.getElementById('criteriatextbox5'+CustomFilterRowIdNew[i]).value);
                        }
                        
                        
                        if(checkval(fieldValueArray)){ // added by Ankit
                            var jsnData = JSON.stringify(fundRCon);
                            var blankArray = new Array();
                            var blankArray2 = new Array();
                            for(var m = 0; m<6; m++){
                                blankArray.push('');
                            }
                            blankArray2.push(blankArray);
                           
                            for( var i=0; i< accidsarray.length; i++){
                                var tempId = accidsarray[i];
                                
                                var y = jsnData.indexOf(tempId);
                                if(y == -1){
                                   finalArrayData[tempId] = blankArray2;
                                }
                                else if(numberOfCon[tempId] == 0){
                                    var AccNameBlnkCont=allcontactrecords_rl[i][strNameTypIndex];
                                    if(blnConEmailAccDenied)
                                    {
                                        blankArray2[0].splice(1,1,AccNameBlnkCont);
                                    }
                                    else
                                    {
                                        blankArray2[0].splice(2,1,AccNameBlnkCont);
                                    }
                                    
                                    for(var k=0;k<blankArray2.length;k++)
                                    {
                                        var blankTempArray = new Array();
                                        blankTempArray.push(blankArray2[k]);
                                        finalArrayData[tempId] = blankTempArray;
                                    }
                                    
                                }
                                else
                                    finalArrayData[tempId] = fundRCon[tempId];
                            }
                           
                            var jstr = JSON.stringify(finalArrayData);
                            var farray = JSON.stringify(fieldArray);
                            var varray = JSON.stringify(valueArray);
                            if(fundType == 'Co-investment'){
                                if(CompSelected=='' && blnLndngPgCrFundrsngClckd==true)
                                {
                                   document.getElementById('blurred').style.display='none';
                                   Warning_PopUp();
                                }
                                else
                                {
                                    inputvalue=CompSelected;
                                    createMassFundraisings(farray,varray,jstr); 
                                }
                            }
                            else
                            {
                                inputvalue=CompSelected;
                                createMassFundraisings(farray,varray,jstr); 
                            } 
                        }
                    }
                }
                catch(err){
                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                        sessionError('58');
                    }   
                }
            
            }
            
            function Confirmation_PopUp() 
            {
                loadPopupnew('fancybox_background','Confirmation_PopUp');
                centerPopupnew('Confirmation_PopUp');
            }
            var inputid;
            var inputvalue;
            function chk_advancefiltervalidationNew(){
                try{
                    NamespaceprefixCMF = Namespaceprefix1;
                    var namespaceforcls=NamespaceprefixCMF.substring(0, NamespaceprefixCMF.length-2);
                    
                   if(namespaceforcls.length>0)
                    {
                        namespaceforcls=namespaceforcls+'.';
                    }
                    var error = 0;
                    for(var i=0;i<CustomFilterRowIdNew.length;i++){                
                        try
                        {
                            var get_field1=document.getElementById('a5'+CustomFilterRowIdNew[i]+'aa').value; 
                            var get_value1=document.getElementById('criteriatextbox5'+CustomFilterRowIdNew[i]).value;      
                            
                            var getfldarray=get_field1.split(':');
                            
                            if(get_field1.toLowerCase()!='None'.toLowerCase() && get_value1.trim().length != 0)
                            {
                                    if(getfldarray[3].toLowerCase()=='date'.toLowerCase() && get_value1.trim().length != 0 && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim()){
                                    try{
                                        if(get_value1.length>0 && get_value1.trim()!='' && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim()){
                                        
                                            sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdate", {getqueryjson:get_value1.trim()}); 
                                        }
                                    }catch(err){

                                        if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                            sessionError('50');
                                        }
                                        else
                                        {
                                            error = 6;   
                                            $( '#ak_error5'+CustomFilterRowIdNew[i]).html( '<div class="error_txt">Invalid date.</div>' );
                                        }
                                    }
                                }
                                else if(getfldarray[3].toLowerCase()=='datetime'.toLowerCase() && get_value1.trim().length != 0 && get_value1.toLowerCase().trim()!='enter a value'.toLowerCase().trim()){
                            
                                    if(get_value1.length>0 && get_value1.trim()!=''){
                                        try{
                                            var getvaluearray=get_value1.split(' ');                            
                                            if(getvaluearray.length>1){   
                                                sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdatetime", {getqueryjson:get_value1.trim()});                                  
                                            
                                            }else{
                                                sforce.apex.execute(namespaceforcls+"CommonUtilityGlobal","convertdatetime", {getqueryjson:get_value1.trim()});                                                                   
                                                                                                              
                                            }
                                        }
                                        catch(err){
                                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                sessionError('51');
                                            }
                                            else
                                            {           
                                                error = 6;  
                                                $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid date.</div>' );
                                            }
                                        }
                                    }
                                     
                                }
                                var get_value_array = get_value1.trim().split(',');   
                                for(var z=0; z<get_value_array.length; z++){
                                    if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && (getfldarray[3].toLowerCase()=='double'.toLowerCase() || getfldarray[3].toLowerCase()=='int'.toLowerCase())){
                                        var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error                            
                                        try{
                                            parseInt(get_value_array[z].trim());
                                            if(objRegExp.test(get_value_array[z]) == false){
                                                error = 7;                    
                                                $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid number.</div>' );                 
                                            }
                                        }
                                        catch(err){
                                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                sessionError('52');
                                            }
                                            else
                                            {   
                                                error = 7;                    
                                                $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid number.</div>' );
                                            }   
                                        }
                                    }
                                    // validation for currency field conversion.
                                    else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='CURRENCY'.toLowerCase()){
                                        var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error                            
                                        try
                                        {
                                            parseInt(get_value_array[z].trim());
                                            if(objRegExp.test(get_value_array[z]) == false){
                                                error = 8;                    
                                                $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid currency.</div>' );                 
                                            }
                                        }
                                        catch(err){
                                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                sessionError('53');
                                            }
                                            else
                                            {           
                                                error = 8;                    
                                                $( '#ak_error5'+CustomFilterRowIdNew[i]).html( '<div class="error_txt">Invalid currency.</div>' );
                                            }
                                        }
                                    }
                                   
                                    // validation for percentage field conversion.
                                    else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='percent'.toLowerCase()){
                                            var xx;
                                            var objRegExp  = /(^-?\d\d*\.\d\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/;    // In this number 2. is a error                            
                                            try
                                            {
                                                if(get_value_array[z].trim().split(' ').length < 2)
                                                {
                                                    if(get_value_array[z].indexOf('%') > -1){
                                                        if(get_value_array[z].indexOf('%') < (get_value_array[z].length-1)){
                                                            error = 11;                    
                                                            $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid Number.</div>' );
                                                        }
                                                        xx = get_value_array[z].replace(/%/g, "");
                                                        get_value_array[z]= get_value_array[z].replace(/%/g, "");
                                                    }
                                                    else
                                                    {
                                                        xx = get_value_array[z].trim();
                                                        if(objRegExp.test(parseFloat(xx).toFixed(3)) == false)
                                                        {
                                                            error = 11;                    
                                                            $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid Number.</div>' );                 
                                                        }
                                                        else
                                                        {
                                                            if((get_value_array[z].indexOf('.')+3) < (get_value_array[z].length-1) )
                                                            {
                                                                document.getElementById('criteriatextbox5'+CustomFilterRowIdNew[i]).value = parseFloat(xx).toFixed(3);
                                                            }
                                                        }                                           
                                                    }
                                                }
                                                else{
                                                    error = 11;                    
                                                    $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Invalid Number.</div>' );
                                                }                                       
                                            }
                                            catch(err){
                                                if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                    sessionError('54');
                                                }
                                                else{
                                                    error = 11;                    
                                                    $( '#ak_error5'+CustomFilterRowIdNew[i]).html( '<div class="error_txt">Invalid Number.</div>' );
                                                }
                                            }
                                    }
                                    
                                    // validation for boolean field conversion.
                                    else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='boolean'){                                                       
                                        var pp=0;
                                        if(get_value1 != null){
                                            if(get_value1.toLowerCase() == 'true'){
                                                pp++;
                                            }
                                            if(get_value1.toLowerCase() == 'false'){
                                                pp++;
                                            }
                                            if(pp != 1){
                                                error = 9;                    
                                                $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Please use "True" or "False".</div>' );
                                                break;
                                            }
                                        }
                                    }
                                    // validation for picklists fields conversion.
                                    else if(get_value_array[z].toLowerCase().trim()!='enter a value'.toLowerCase().trim() && get_value_array[z].trim().length != 0 && getfldarray[3].toLowerCase()=='picklist'){
                                        try{
                                      
                                            var newValue = '';
                                            var obj = getfldarray[0];
                                            if(obj == 'Fundraising Contact' || obj == 'Fundraising'){
                                                if(obj=='Fundraising Contact')
                                                {
                                                    obj="Fundraising_Contact";
                                                }
                                                obj = NamespaceprefixCMF+obj+'__c';
                                            }
                                            var valArray = get_value_array[z].trim().split(',');   // unique is for unique elements from picklist.                      
                                            var desForPicklist = sforce.connection.describeSObject(obj);
                                                    
                                            for (var d=0; d<desForPicklist.fields.length; d++) {
                                                var field = desForPicklist.fields[d];                                                       
                                                if(field.name == getfldarray[1]){                                           
                                                    var picklistVals = field.picklistValues;                                        
                                                    for (var p = 0; p<valArray.length; p++) {
                                                        var containsVal = false;
                                                        for(var g = 0; g<picklistVals.length; g++){                                                   
                                                            if (picklistVals[g].value.trim() == valArray[p].trim())                                                 
                                                                containsVal = true;                                             
                                                        }
                                                        if(containsVal == false){
                                                            error = 10;    
                                                            $( '#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                                            break;
                                                        }
                                                    }                                                                       
                                                    break;
                                                }
                                            }                                   
                                        }catch(err){
                                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                                sessionError('55');
                                            }
                                            else{
                                                error = 10;  
                                                $('#ak_error5'+CustomFilterRowIdNew[i] ).html( '<div class="error_txt">Picklist value does not exist.</div>' );
                                            }   
                                        }
                                    }                               
                                  
                                }    
                            
                                document.getElementById('criteriatextbox5'+CustomFilterRowIdNew[i]).value = get_value_array; 
                            }
                            else if(get_field1.toLowerCase()=='None'.toLowerCase() && get_value1.trim().length > 0){
                                error = 11;
                                $( '#divfname_opt5'+CustomFilterRowIdNew[i]).html( '<div class="error_txt">Please select a field to save the value.</div>' );
                                document.getElementById('divfname_opt5'+CustomFilterRowIdNew[i]).style.display = 'block';
                            }
                            var errorVal=document.getElementById('ak_error5'+CustomFilterRowIdNew[i]).innerText;
                            errorVal=errorVal.length;
                            if((document.getElementById('divfname_opt5'+CustomFilterRowIdNew[i]).style.display =='block' || document.getElementById('criteriatextbox5'+CustomFilterRowIdNew[i]).style.display =='block' || errorVal > 0 ) )
                                {
                                    document.getElementById('blurred').style.display='none';
                                }
                                    
                        }
                        catch(err){
                            if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                                sessionError('56');
                            }
                            else
                                error = 6;                    
                        }
                    }       
                    if(parseInt(error)==0){
                            return true; 
                    }else{
                        return false;
                    }
                    
                    
                }catch(err){
                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  ){
                            sessionError('57');
                        }
                        else
                            alert('chk_advancefiltervalidationNew Error'+err);
                }    
            }
            /* Check Picklist values same or not*/
            function checkval(PicklistVal)
            {
                try{
                    var fieldCheckUnque = new Array();
                    for(var i=0;i<CustomFilterRowIdNew.length;i++)               
                    {
                        var get_field1=document.getElementById('a5'+CustomFilterRowIdNew[i]+'aa').value;
                        if(get_field1.toLowerCase()!='None'.toLowerCase()){
                            fieldCheckUnque.push(get_field1);
                        }
                        else
                            fieldCheckUnque.push(CustomFilterRowIdNew[i]);
                    }   
                    
                    for (var i = 0; i < fieldCheckUnque.length; i++) 
                    {
                        for (var j = 0; j < fieldCheckUnque.length; j++) 
                        {
                            if (i != j) 
                            {
                                if (fieldCheckUnque[i] == fieldCheckUnque[j]) 
                                {
                                    j = j+1;
                                    $( '#divfname_opt5'+j).html( '<div class="error_txt">Two or more Default Fundraising Values are in conflict.  Please correct in order to continue.</div>' );
                                    document.getElementById('divfname_opt5'+j).style.display = 'block';
                                    document.getElementById('blurred').style.display='none';
                                    return false;
                                }
                            }
                        }
                    }
                    return true;
                }
                catch(err){
                    if(err.faultcode == 'sf:INVALID_SESSION_ID'  )
                        sessionError('59');
                }
                
            }
            function redirectToFund()
            {
                backToHomeAF();  
            }
            function CrteFndRsngClckedWrng()
            {
                var WarngPopupValEntrd={!WarngPopupValEntrd};
                WarngPopupValEntrd=true;
                blnLndngPgCrFundrsngClckd=false;
                CrteFndRsngClckedWrngAF(WarngPopupValEntrd);
            }
            function comTypValidCheckWrng()
            {
                if(document.getElementById('j_id0:CreateFundraisingFormId:StdErrMsgCompWrng')==null)
                {
                    if(!blnValidCompTyp)
                    {
                        document.getElementById('ErrMsgCompTypWrng').style.display='';
                    }
                    else
                    {   
                        document.getElementById('ErrMsgCompTypWrng').style.display='none';
                        CreateMassFundraisingFinal();
                    }
                }
                else
                {
                    
                }
                
            }
            function showConfirmation(){
                try{
                    if(state){
                        document.getElementById('blurred').style.display='none';
                        Confirmation_PopUp();
                    }
                    else if(clnAccDiff)
                    {
                        document.getElementById('blurred').style.display='none';
                        //alert('ErrorMsgDiffAcc '+ErrorMsgDiffAcc);
                        ErrorMsgDiffAcc=ErrorMsgDiffAcc.substring(ErrorMsgDiffAcc.indexOf(',')+2,ErrorMsgDiffAcc.indexOf(': ['));
                        //ErrorMsgDiffAcc=ErrorMsgDiffAcc.substring(ErrorMsgDiffAcc.indexOf(',')+2,ErrorMsgDiffAcc.length);
                        document.getElementById('FRCreatnAccErrorMsg').innerHTML=ErrorMsgDiffAcc;
                        ErrorMsgDiffAcc=ErrorMsgDiffAcc.substring(0,ErrorMsgDiffAcc.indexOf(':'));
                        for(var i=1;i<=number_of_rowsNew;i++){
                            var SlctdValFundR=document.getElementById('a5'+i+'aa').value;
                            SlctdValFundR=SlctdValFundR.split(':');
                            if( SlctdValFundR[2]== ErrorMsgDiffAcc) 
                            {
                                document.getElementById('a5'+i+'aa').classList.add("error_border");
                            }
                        }
                        loadPopupnew('fancybox_background','FRCreatnAccError');
                        centerPopupnew('FRCreatnAccError');
                    }
                    else{
                       // window.scrollTo(0,0);
                       document.getElementById('blurred').style.display='none';
                       loadPopupnew('fancybox_background','InsufficientPrivlagesOnloadError');
                        centerPopupnew('InsufficientPrivlagesOnloadError');
                       
                    } 
                }
                catch(ex)
                {
                    if(ex.faultcode == 'sf:INVALID_SESSION_ID'  )
                        sessionError('1');
                }       
            }
            </script>
            <script>
                <!-------------------------------------------- Date Time Format Validator Starts------------------------------------------------------------->
                 
                 //@initialise Calenda at page load
                function initialiseCalendar(obj,eleId) 
                {
                    var element=document.getElementById(eleId);
                    element=null;
                    var params='close=true';
                    if (null!=element)
                    {
                        if (element.value.length>0)
                        {
                        // date is formatted dd/mm/yyyy - pull out the month and year
                        var month=element.value.substr(3,2);   
                        var year=element.value.substr(6,4);
                        params+=',month='+month;
                        params+=',year='+year;
                        }
                    }
                    fnInitCalendar(obj, eleId, params);
                }
                 
                 
                 
                 //@ Handel the data formate
                function fnSetDateFormat(oDateFormat)
                {
                    oDateFormat['FullYear'];  //Example = 2007
                    oDateFormat['Year'];   //Example = 07
                    oDateFormat['FullMonthName']; //Example = January
                    oDateFormat['MonthName'];  //Example = Jan
                    oDateFormat['Month'];   //Example = 01
                    oDateFormat['Date'];   //Example = 01
                    oDateFormat['FullDay'];   //Example = Sunday
                    oDateFormat['Day'];    //Example = Sun
                    oDateFormat['Hours'];   //Example = 01
                    oDateFormat['Minutes'];   //Example = 01
                    oDateFormat['Seconds'];   //Example = 01
                    var sDateString;                    
                    if('{!JSENCODE(JSENCODE(locale_info))}'=="sl_SI" || '{!JSENCODE(JSENCODE(locale_info))}'=="sl")//d.m.yy
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['Year'];  
                    }               
                    else if('{!JSENCODE(JSENCODE(locale_info))}'=="cs"  || '{!JSENCODE(JSENCODE(locale_info))}'=="cs_CZ" || '{!JSENCODE(JSENCODE(locale_info))}'=="fi"  || '{!JSENCODE(JSENCODE(locale_info))}'=="fi_FI" || '{!JSENCODE(JSENCODE(locale_info))}'=="is_IS"  || '{!JSENCODE(JSENCODE(locale_info))}'=="sk" || '{!JSENCODE(JSENCODE(locale_info))}'=="sk_SK" || '{!JSENCODE(JSENCODE(locale_info))}'=="be_BY" || '{!JSENCODE(JSENCODE(locale_info))}'=="mk_MK" || '{!JSENCODE(JSENCODE(locale_info))}'=="fi_FI_EURO" || '{!JSENCODE(JSENCODE(locale_info))}'=="is"  || '{!JSENCODE(JSENCODE(locale_info))}'=="mk" )// d.m.yyyy
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="sr" || '{!JSENCODE(locale_info)}'=="sr_CS" )//d.m.yyyy.
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear']+"."; 
                    }
                    else if('{!JSENCODE(locale_info)}'=="et_EE"  || '{!JSENCODE(locale_info)}'=="et" || '{!JSENCODE(locale_info)}'=="de_DE_EURO" )// d.mm.yyyy
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="en_IN" || '{!JSENCODE(locale_info)}'=="el" || '{!JSENCODE(locale_info)}'=="el_GR" || '{!JSENCODE(locale_info)}'=="th" || '{!JSENCODE(locale_info)}'=="ur_PK" || '{!JSENCODE(locale_info)}'=="ur" )//d/m/yyyy
                    {
                        sDateString = oDateFormat['Date'] +"/"+ oDateFormat['Month'] +"/"+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="nl_BE" || '{!JSENCODE(locale_info)}'=="en_AU" || '{!JSENCODE(locale_info)}'=="en_NZ" || '{!JSENCODE(locale_info)}'=="fr_BE" || '{!JSENCODE(locale_info)}'=="es" || '{!JSENCODE(locale_info)}'=="es_CO" || '{!JSENCODE(locale_info)}'=="es_GT" || '{!JSENCODE(locale_info)}'=="es_MX" || '{!JSENCODE(locale_info)}'=="es_ES" || '{!JSENCODE(locale_info)}'=="ms_BN" ) //d/mm/yyyy
                    {
                        sDateString = oDateFormat['Date'] +"/"+ oDateFormat['Month'] +"/"+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="fr_CH" || '{!JSENCODE(locale_info)}'=="de" || '{!JSENCODE(locale_info)}'=="de_AT" || '{!JSENCODE(locale_info)}'=="de_DE" || '{!JSENCODE(locale_info)}'=="de_LU" || '{!JSENCODE(locale_info)}'=="de_CH" || '{!JSENCODE(locale_info)}'=="it_CH" || '{!JSENCODE(locale_info)}'=="kk_KZ" || '{!JSENCODE(locale_info)}'=="no" || '{!JSENCODE(locale_info)}'=="no_NO" || '{!JSENCODE(locale_info)}'=="ro" || '{!JSENCODE(locale_info)}'=="ro_RO" || '{!JSENCODE(locale_info)}'=="ru" || '{!JSENCODE(locale_info)}'=="ru_RU" || '{!JSENCODE(locale_info)}'=="tr" || '{!JSENCODE(locale_info)}'=="uk" || '{!JSENCODE(locale_info)}'=="uk_UA" || '{!JSENCODE(locale_info)}'=="pl_PL" || '{!JSENCODE(locale_info)}'=="ro_MD" || '{!JSENCODE(locale_info)}'=="rm_CH" || '{!JSENCODE(locale_info)}'=="tr_TR" || '{!JSENCODE(locale_info)}'=="de_AT_EURO" || '{!JSENCODE(locale_info)}'=="de_LU_EURO" || '{!JSENCODE(locale_info)}'=="rm") //dd.mm.yyyy
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="hr_HR" || '{!JSENCODE(locale_info)}'=="sh" || '{!JSENCODE(locale_info)}'=="sh_BA" || '{!JSENCODE(locale_info)}'=="sh_CS" || '{!JSENCODE(locale_info)}'=="bs_BA" || '{!JSENCODE(locale_info)}'=="sh_ME" || '{!JSENCODE(locale_info)}'=="bs")//dd.mm.yyyy.
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear']+".";  
                    }
                    else if('{!JSENCODE(locale_info)}'=="ar"  || '{!JSENCODE(locale_info)}'=="ar_BH" || '{!JSENCODE(locale_info)}'=="ar_EG" || '{!JSENCODE(locale_info)}'=="ar_JO" || '{!JSENCODE(locale_info)}'=="ar_KW" || '{!JSENCODE(locale_info)}'=="ar_LB" || '{!JSENCODE(locale_info)}'=="ar_SA" || '{!JSENCODE(locale_info)}'=="ar_AE" || '{!JSENCODE(locale_info)}'=="ca_ES" || '{!JSENCODE(locale_info)}'=="en_BB" || '{!JSENCODE(locale_info)}'=="ca" || '{!JSENCODE(locale_info)}'=="en_BM" || '{!JSENCODE(locale_info)}'=="en_CA" || '{!JSENCODE(locale_info)}'=="en_GH" || '{!JSENCODE(locale_info)}'=="en_ID" || '{!JSENCODE(locale_info)}'=="en_IE" || '{!JSENCODE(locale_info)}'=="en_MY" || '{!JSENCODE(locale_info)}'=="en_NG" || '{!JSENCODE(locale_info)}'=="en_SG" || '{!JSENCODE(locale_info)}'=="en_GB" || '{!JSENCODE(locale_info)}'=="fr" || '{!JSENCODE(locale_info)}'=="fr_FR" || '{!JSENCODE(locale_info)}'=="fr_LU" || '{!JSENCODE(locale_info)}'=="fr_MC" || '{!JSENCODE(locale_info)}'=="iw" || '{!JSENCODE(locale_info)}'=="iw_IL" || '{!JSENCODE(locale_info)}'=="it" || '{!JSENCODE(locale_info)}'=="it_IT" || '{!JSENCODE(locale_info)}'=="ms_MY" || '{!JSENCODE(locale_info)}'=="pt_BR" || '{!JSENCODE(locale_info)}'=="es_AR" || '{!JSENCODE(locale_info)}'=="es_CR" || '{!JSENCODE(locale_info)}'=="es_EC" || '{!JSENCODE(locale_info)}'=="es_PY" || '{!JSENCODE(locale_info)}'=="es_PE" || '{!JSENCODE(locale_info)}'=="es_UY" || '{!JSENCODE(locale_info)}'=="es_VE" || '{!JSENCODE(locale_info)}'=="vi" || '{!JSENCODE(locale_info)}'=="vi_VN"  || '{!JSENCODE(locale_info)}'=="ar_QA" || '{!JSENCODE(locale_info)}'=="zh_SG" || '{!JSENCODE(locale_info)}'=="in_ID" || '{!JSENCODE(locale_info)}'=="ga_IE" || '{!JSENCODE(locale_info)}'=="mt_MT" || '{!JSENCODE(locale_info)}'=="cy_GB" || '{!JSENCODE(locale_info)}'=="ca_ES_EURO" || '{!JSENCODE(locale_info)}'=="en_IE_EURO" || '{!JSENCODE(locale_info)}'=="fr_FR_EURO" || '{!JSENCODE(locale_info)}'=="mt" || '{!JSENCODE(locale_info)}'=="cy")//dd/mm/yyyy
                    {
                        sDateString = oDateFormat['Date'] +"/"+ oDateFormat['Month'] +"/"+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="da" || '{!JSENCODE(locale_info)}'=="da_DK" || '{!JSENCODE(locale_info)}'=="pt" || '{!JSENCODE(locale_info)}'=="pt_AO" || '{!JSENCODE(locale_info)}'=="pt_PT" || '{!JSENCODE(locale_info)}'=="es_BO" || '{!JSENCODE(locale_info)}'=="es_CL"  )//dd-mm-yyyy
                    {
                        sDateString = oDateFormat['Date'] +"-"+ oDateFormat['Month'] +"-"+ oDateFormat['FullYear'];  
                    }                                               
                    else if('{!JSENCODE(locale_info)}'=="nl" || '{!JSENCODE(locale_info)}'=="nl_NL" || '{!JSENCODE(locale_info)}'=="nl_SR" )// d-m-yyyy
                    {
                        sDateString = oDateFormat['Date'] +"-"+ oDateFormat['Month'] +"-"+ oDateFormat['FullYear'];  
                    }
                    else if( '{!JSENCODE(locale_info)}'=="en_PH" || '{!JSENCODE(locale_info)}'=="en_US" || '{!JSENCODE(locale_info)}'=="tl" || '{!JSENCODE(locale_info)}'=="tl_PH" || '{!JSENCODE(locale_info)}'=="en_PK" || '{!JSENCODE(locale_info)}'==" lb_LU" || '{!JSENCODE(locale_info)}'==" tg_TJ" || '{!JSENCODE(locale_info)}'=="lb")// m/d/yyyy
                    {
                        sDateString = oDateFormat['Month'] +"/"+ oDateFormat['Date'] +"/"+ oDateFormat['FullYear']; 
                                                                
                    }
                    else if( '{!JSENCODE(locale_info)}'=="ky_KG")
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="es_DO" || '{!JSENCODE(locale_info)}'=="es_PA" || '{!JSENCODE(locale_info)}'=="hy")// mm/dd/yyyy
                    {
                        sDateString = oDateFormat['Month'] +"/"+ oDateFormat['Date'] +"/"+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="es_SV" || '{!JSENCODE(locale_info)}'=="es_HN" || '{!JSENCODE(locale_info)}'=="es_PR" )// mm-dd-yyyy
                    {
                        sDateString = oDateFormat['Month'] +"-"+ oDateFormat['Date'] +"-"+ oDateFormat['FullYear'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="ko_KR" )// yyyy. m. d
                    {
                        sDateString = oDateFormat['FullYear'] +". "+ oDateFormat['Month'] +". "+ oDateFormat['Date'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="lv_LV" || '{!JSENCODE(locale_info)}'=="lv")// yyyy.d.m
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="hu" || '{!JSENCODE(locale_info)}'=="hu_HU")// yyyy.mm.dd.
                    {
                        sDateString = oDateFormat['FullYear'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['Date']+".";  
                    }
                    else if('{!JSENCODE(locale_info)}'=="zh_TW" )// yyyy/m/d
                    {
                        sDateString = oDateFormat['FullYear'] +"/"+ oDateFormat['Month'] +"/"+ oDateFormat['Date'];  
                    }
                    else if('{!JSENCODE(locale_info)}'=="ko" || '{!JSENCODE(locale_info)}'=="lt_LT" )// yyyy.m.d
                    {
                        sDateString = oDateFormat['FullYear'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['Date'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="en_ZA" || '{!JSENCODE(locale_info)}'=="in" || '{!JSENCODE(locale_info)}'=="ja" || '{!JSENCODE(locale_info)}'=="ja_JP" || '{!JSENCODE(locale_info)}'=="ga" || '{!JSENCODE(locale_info)}'=="ms" )// yyyy/mm/dd
                    {
                        sDateString = oDateFormat['FullYear'] +"/"+ oDateFormat['Month'] +"/"+ oDateFormat['Date'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="bg" || '{!JSENCODE(locale_info)}'=="zh" || '{!JSENCODE(locale_info)}'=="zh_CN" )// yyyy-m-d
                    {
                        sDateString = oDateFormat['FullYear'] +"-"+ oDateFormat['Month'] +"-"+ oDateFormat['Date'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="bg_BG")
                    {
                            sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['Date'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="fr_CA" || '{!JSENCODE(locale_info)}'=="ka_GE" || '{!JSENCODE(locale_info)}'=="pl" || '{!JSENCODE(locale_info)}'=="sr_BA" || '{!JSENCODE(locale_info)}'=="sv" || '{!JSENCODE(locale_info)}'=="sv_SE" || '{!JSENCODE(locale_info)}'=="sq_AL" || '{!JSENCODE(locale_info)}'=="az_AZ" || '{!JSENCODE(locale_info)}'=="eu_ES" || '{!JSENCODE(locale_info)}'=="ka" || '{!JSENCODE(locale_info)}'=="sq" || '{!JSENCODE(locale_info)}'=="eu"  ) // yyyy-mm-dd
                    {
                        sDateString = oDateFormat['FullYear'] +"-"+ oDateFormat['Month'] +"-"+ oDateFormat['Date'];
                    }
                    else if('{!JSENCODE(locale_info)}'=="zh_HK1" )
                    {                  
                    }
                    else if( '{!JSENCODE(locale_info)}'=="hy_AM")// mm/d/yyyy 
                    {
                        sDateString = oDateFormat['Date'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['FullYear'];                                         
                    }
                    else if( '{!JSENCODE(locale_info)}'=="hr")// yyyy.mm.dd
                    {
                        sDateString = oDateFormat['FullYear'] +"."+ oDateFormat['Month'] +"."+ oDateFormat['Date'];                  
                    }
                    return sDateString;
                }
                // This Method Returns Regex for various date format on the behalf of locale.       
                function checkdateformat_filternmethod()
                {
               
                    var systmlocale='{!JSENCODE(user_locale)}';
                    var regexfordatematching='';
                    formatt='';
                    if('{!JSENCODE(user_locale)}'=="sl_SI" || '{!JSENCODE(user_locale)}'=="sl" || '{!JSENCODE(user_locale)}'=="cs"  || '{!JSENCODE(user_locale)}'=="cs_CZ" || '{!JSENCODE(user_locale)}'=="fi"  || '{!JSENCODE(user_locale)}'=="fi_FI" || '{!JSENCODE(user_locale)}'=="is_IS"  || '{!JSENCODE(user_locale)}'=="sk" || '{!JSENCODE(user_locale)}'=="sk_SK" || '{!JSENCODE(user_locale)}'=="be_BY" || '{!JSENCODE(user_locale)}'=="mk_MK" || '{!JSENCODE(user_locale)}'=="fi_FI_EURO" || '{!JSENCODE(user_locale)}'=="is"  || '{!JSENCODE(user_locale)}'=="mk" || '{!JSENCODE(user_locale)}'=="et_EE"  || '{!JSENCODE(user_locale)}'=="et" || '{!JSENCODE(user_locale)}'=="de_DE_EURO" || '{!JSENCODE(user_locale)}'=="fr_CH" || '{!JSENCODE(user_locale)}'=="de" || '{!JSENCODE(user_locale)}'=="de_AT" || '{!JSENCODE(user_locale)}'=="de_DE" || '{!JSENCODE(user_locale)}'=="de_LU" || '{!JSENCODE(user_locale)}'=="de_CH" || '{!JSENCODE(user_locale)}'=="it_CH" || '{!JSENCODE(user_locale)}'=="kk_KZ" || '{!JSENCODE(user_locale)}'=="no" || '{!JSENCODE(user_locale)}'=="no_NO" || '{!JSENCODE(user_locale)}'=="ro" || '{!JSENCODE(user_locale)}'=="ro_RO" || '{!JSENCODE(user_locale)}'=="ru" || '{!JSENCODE(user_locale)}'=="ru_RU" || '{!JSENCODE(user_locale)}'=="tr" || '{!JSENCODE(user_locale)}'=="uk" || '{!JSENCODE(user_locale)}'=="uk_UA" || '{!JSENCODE(user_locale)}'=="pl_PL" || '{!JSENCODE(user_locale)}'=="ro_MD" || '{!JSENCODE(user_locale)}'=="rm_CH" || '{!JSENCODE(user_locale)}'=="tr_TR" || '{!JSENCODE(user_locale)}'=="de_AT_EURO" || '{!JSENCODE(user_locale)}'=="de_LU_EURO" || '{!JSENCODE(user_locale)}'=="rm")    //d.m.yy // d.m.yyyy // d.mm.yyyy //dd.mm.yyyy   done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))$|^(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))$/;
                        formatt='d.m.yy ___  d.m.yyyy ___ d.mm.yyyy _____dd.mm.yyyy';
                        dateformatnumber=1;
                    }
                    else if('{!JSENCODE(user_locale)}'=="sr" || '{!JSENCODE(user_locale)}'=="sr_CS" || '{!JSENCODE(user_locale)}'=="hr_HR" || '{!JSENCODE(user_locale)}'=="sh" || '{!JSENCODE(user_locale)}'=="sh_BA" || '{!JSENCODE(user_locale)}'=="sh_CS" || '{!JSENCODE(user_locale)}'=="bs_BA" || '{!JSENCODE(user_locale)}'=="sh_ME" || '{!JSENCODE(user_locale)}'=="bs" )  // d.m.yyyy. //dd.mm.yyyy.  done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.])$|^(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.])$/;
                        formatt='  d.m.yyyy. __________ dd.mm.yyyy.';
                        dateformatnumber=2;
                    }
                    else if('{!JSENCODE(user_locale)}'=="en_IN" || '{!JSENCODE(user_locale)}'=="el" || '{!JSENCODE(user_locale)}'=="el_GR" || '{!JSENCODE(user_locale)}'=="th" || '{!JSENCODE(user_locale)}'=="ur_PK" || '{!JSENCODE(user_locale)}'=="ur" || '{!JSENCODE(user_locale)}'=="nl_BE" || '{!JSENCODE(user_locale)}'=="en_AU" || '{!JSENCODE(user_locale)}'=="en_NZ" || '{!JSENCODE(user_locale)}'=="fr_BE" || '{!JSENCODE(user_locale)}'=="es" || '{!JSENCODE(user_locale)}'=="es_CO" || '{!JSENCODE(user_locale)}'=="es_GT" || '{!JSENCODE(user_locale)}'=="es_MX" || '{!JSENCODE(user_locale)}'=="es_ES" || '{!JSENCODE(user_locale)}'=="ms_BN" || '{!JSENCODE(user_locale)}'=="ar"  || '{!JSENCODE(user_locale)}'=="ar_BH" || '{!JSENCODE(user_locale)}'=="ar_EG" || '{!JSENCODE(user_locale)}'=="ar_JO" || '{!JSENCODE(user_locale)}'=="ar_KW" || '{!JSENCODE(user_locale)}'=="ar_LB" || '{!JSENCODE(user_locale)}'=="ar_SA" || '{!JSENCODE(user_locale)}'=="ar_AE" || '{!JSENCODE(user_locale)}'=="ca_ES" || '{!JSENCODE(user_locale)}'=="en_BB" || '{!JSENCODE(user_locale)}'=="ca" || '{!JSENCODE(user_locale)}'=="en_BM" || '{!JSENCODE(user_locale)}'=="en_CA" || '{!JSENCODE(user_locale)}'=="en_GH" || '{!JSENCODE(user_locale)}'=="en_ID" || '{!JSENCODE(user_locale)}'=="en_IE" || '{!JSENCODE(user_locale)}'=="en_MY" || '{!JSENCODE(user_locale)}'=="en_NG" || '{!JSENCODE(user_locale)}'=="en_SG" || '{!JSENCODE(user_locale)}'=="en_GB" || '{!JSENCODE(user_locale)}'=="fr" || '{!JSENCODE(user_locale)}'=="fr_FR" || '{!JSENCODE(user_locale)}'=="fr_LU" || '{!JSENCODE(user_locale)}'=="fr_MC" || '{!JSENCODE(user_locale)}'=="iw" || '{!JSENCODE(user_locale)}'=="iw_IL" || '{!JSENCODE(user_locale)}'=="it" || '{!JSENCODE(user_locale)}'=="it_IT" || '{!JSENCODE(user_locale)}'=="ms_MY" || '{!JSENCODE(user_locale)}'=="pt_BR" || '{!JSENCODE(user_locale)}'=="es_AR" || '{!JSENCODE(user_locale)}'=="es_CR" || '{!JSENCODE(user_locale)}'=="es_EC" || '{!JSENCODE(user_locale)}'=="es_PY" || '{!JSENCODE(user_locale)}'=="es_PE" || '{!JSENCODE(user_locale)}'=="es_UY" || '{!JSENCODE(user_locale)}'=="es_VE" || '{!JSENCODE(user_locale)}'=="vi" || '{!JSENCODE(user_locale)}'=="vi_VN"  || '{!JSENCODE(user_locale)}'=="ar_QA" || '{!JSENCODE(user_locale)}'=="zh_SG" || '{!JSENCODE(user_locale)}'=="in_ID" || '{!JSENCODE(user_locale)}'=="ga_IE" || '{!JSENCODE(user_locale)}'=="mt_MT" || '{!JSENCODE(user_locale)}'=="cy_GB" || '{!JSENCODE(user_locale)}'=="ca_ES_EURO" || '{!JSENCODE(user_locale)}'=="en_IE_EURO" || '{!JSENCODE(user_locale)}'=="fr_FR_EURO" || '{!JSENCODE(user_locale)}'=="mt" || '{!JSENCODE(user_locale)}'=="cy")  //d/m/yyyy //d/mm/yyyy //dd/mm/yyyy   done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))$|^(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))$/;
                        formatt='d/m/yyyy _______d/mm/yyyy _____dd/mm/yyyy';
                        dateformatnumber=3;
                    }
                    else if('{!JSENCODE(user_locale)}'=="da" || '{!JSENCODE(user_locale)}'=="da_DK" || '{!JSENCODE(user_locale)}'=="pt" || '{!JSENCODE(user_locale)}'=="pt_AO" || '{!JSENCODE(user_locale)}'=="pt_PT" || '{!JSENCODE(user_locale)}'=="es_BO" || '{!JSENCODE(user_locale)}'=="es_CL"  || '{!JSENCODE(user_locale)}'=="nl" || '{!JSENCODE(user_locale)}'=="nl_NL" || '{!JSENCODE(user_locale)}'=="nl_SR")   //dd-mm-yyyy // d-m-yyyy  done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1\d)|(2[0-8]))[-]((0?[1-9])|(1[0-2])))|((31[-]((0?[13578])|(1[02])))|((29|30)[-]((0?[1,3-9])|(1[0-2])))))[-](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))$|^(29[-](0?2)[-]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))$/;
                        formatt='dd-mm-yyyy _________ d-m-yyyy';
                        dateformatnumber=4;
                    }
                    else if('{!JSENCODE(user_locale)}'=="en_PH" || '{!JSENCODE(user_locale)}'=="en_US" || '{!JSENCODE(user_locale)}'=="tl" || '{!JSENCODE(user_locale)}'=="tl_PH" || '{!JSENCODE(user_locale)}'=="en_PK" || '{!JSENCODE(user_locale)}'=="ky_KG" || '{!JSENCODE(user_locale)}'==" lb_LU" || '{!JSENCODE(user_locale)}'==" tg_TJ" || '{!JSENCODE(user_locale)}'=="lb" || '{!JSENCODE(user_locale)}'=="es_DO" || '{!JSENCODE(user_locale)}'=="es_PA" || '{!JSENCODE(user_locale)}'=="hy" || '{!JSENCODE(user_locale)}'=="hy_AM")      // m/d/yyyy // mm/dd/yyyy   done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30)))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))$|^((0?2)[/]29[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))$/;
                        formatt='m/d/yyyy __________mm/dd/yyyy';
                        dateformatnumber=5;
                    }
                    else if('{!JSENCODE(user_locale)}'=="es_SV" || '{!JSENCODE(user_locale)}'=="es_HN" || '{!JSENCODE(user_locale)}'=="es_PR") // mm-dd-yyyy  done
                    {
                        regexfordatematching=/^(((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30)))[-](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))$|^((0?2)[-]29[-]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))$/;
                        formatt='mm-dd-yyyy ';
                        dateformatnumber=6;
                    }
                    else if('{!JSENCODE(user_locale)}'=="ko_KR" )   // yyyy. m. d done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.][ ]((((0?[1-9])|(1[0-2]))[.][ ]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.][ ]31)|(((0?[1,3-9])|(1[0-2]))[.][ ](29|30))))$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.][ ](0?2)[.][ ]29)$/;
                        formatt='yyyy. m. d';
                        dateformatnumber=7;
                    }     
                    
                    else if('{!JSENCODE(user_locale)}'=="lv_LV" || '{!JSENCODE(user_locale)}'=="lv")   // yyyy.d.m  done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|(31[.]((0?[13578])|(1[02])))|(((0?[1,3-9])|(1[0-2]))[.](29|30))))$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.]29[.](0?2))$/;
                        formatt='yyyy.d.m';         
                        dateformatnumber=8;
                    }
                    else if('{!JSENCODE(user_locale)}'=="bg" || '{!JSENCODE(user_locale)}'=="bg_BG" || '{!JSENCODE(user_locale)}'=="zh" || '{!JSENCODE(user_locale)}'=="zh_CN" || '{!JSENCODE(user_locale)}'=="fr_CA" || '{!JSENCODE(user_locale)}'=="ka_GE" || '{!JSENCODE(user_locale)}'=="pl" || '{!JSENCODE(user_locale)}'=="sr_BA" || '{!JSENCODE(user_locale)}'=="sv" || '{!JSENCODE(user_locale)}'=="sv_SE" || '{!JSENCODE(user_locale)}'=="sq_AL" || '{!JSENCODE(user_locale)}'=="az_AZ" || '{!JSENCODE(user_locale)}'=="eu_ES" || '{!JSENCODE(user_locale)}'=="ka" || '{!JSENCODE(user_locale)}'=="sq" || '{!JSENCODE(user_locale)}'=="eu" )      // yyyy-m-d // yyyy-mm-dd   done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[-]((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30))))$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[-](0?2)[-]29)$/;
                        formatt='yyyy-m-d ______ yyyy-mm-dd';
                        dateformatnumber=9;
                    }
                    else if('{!JSENCODE(user_locale)}'=="ko" || '{!JSENCODE(user_locale)}'=="lt_LT" ||  '{!JSENCODE(user_locale)}'=="hr" )    // yyyy.m.d // yyyy.mm.dd   done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1[0-2]))[.]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.]31)|(((0?[1,3-9])|(1[0-2]))[.](29|30))))$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.](0?2)[.]29)$/;
                        formatt='yyyy.m.d _________ yyyy.mm.dd';
                        dateformatnumber=10;
                    }
                    else if('{!JSENCODE(user_locale)}'=="zh_TW" || '{!JSENCODE(user_locale)}'=="en_ZA" || '{!JSENCODE(user_locale)}'=="in" || '{!JSENCODE(user_locale)}'=="ja" || '{!JSENCODE(user_locale)}'=="ja_JP" || '{!JSENCODE(user_locale)}'=="ga" || '{!JSENCODE(user_locale)}'=="ms" )     // yyyy/m/d // yyyy/mm/dd    done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[/]((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30))))$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[/](0?2)[/]29)$/;
                        formatt='yyyy/m/d _________ yyyy/mm/dd';
                        dateformatnumber=11;
                    }
                    else if('{!JSENCODE(user_locale)}'=="hu" || '{!JSENCODE(user_locale)}'=="hu_HU")   // yyyy.mm.dd.   done
                    {
                        regexfordatematching=/^((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1[0-2]))[.]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.]31)|(((0?[1,3-9])|(1[0-2]))[.](29|30)))[.])$|^(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.](0?2)[.]29[.])$/;
                        formatt='yyyy.mm.dd.';
                        dateformatnumber=12;
                    }
                    else
                    {
                        regexfordatematching='false';
                    }
                    return regexfordatematching;
                }
                // This Method Returns Regex for various DateTime format on the behalf of locale.       
                function checkdatetimeformat_filternmethod()
                {
               
                    var systmlocale='{!JSENCODE(user_locale)}';
                    var regexfordatematching='';
                    formatt='';
                    if('{!JSENCODE(user_locale)}'=="sl_SI" || '{!JSENCODE(user_locale)}'=="sl" || '{!JSENCODE(user_locale)}'=="cs"  || '{!JSENCODE(user_locale)}'=="cs_CZ" || '{!JSENCODE(user_locale)}'=="fi"  || '{!JSENCODE(user_locale)}'=="fi_FI" || '{!JSENCODE(user_locale)}'=="sk" || '{!JSENCODE(user_locale)}'=="sk_SK" || '{!JSENCODE(user_locale)}'=="fi_FI_EURO" || '{!JSENCODE(user_locale)}'=="is_IS"  || '{!JSENCODE(user_locale)}'=="mk_MK" || '{!JSENCODE(user_locale)}'=="is" || '{!JSENCODE(user_locale)}'=="mk" || '{!JSENCODE(user_locale)}'=="et_EE"  ||  '{!JSENCODE(user_locale)}'=="et" || '{!JSENCODE(user_locale)}'=="no_NO" ||  '{!JSENCODE(user_locale)}'=="de_DE_EURO" || '{!JSENCODE(user_locale)}'=="ru" || '{!JSENCODE(user_locale)}'=="uk" || '{!JSENCODE(user_locale)}'=="uk_UA" || '{!JSENCODE(user_locale)}'=="ru_RU" || '{!JSENCODE(user_locale)}'=="fr_CH"  || '{!JSENCODE(user_locale)}'=="de" || '{!JSENCODE(user_locale)}'=="de_AT" || '{!JSENCODE(user_locale)}'=="de_DE" || '{!JSENCODE(user_locale)}'=="de_LU" || '{!JSENCODE(user_locale)}'=="de_CH" || '{!JSENCODE(user_locale)}'=="it_CH" || '{!JSENCODE(user_locale)}'=="kk_KZ" || '{!JSENCODE(user_locale)}'=="no" || '{!JSENCODE(user_locale)}'=="ro" || '{!JSENCODE(user_locale)}'=="ro_RO" || '{!JSENCODE(user_locale)}'=="tr" || '{!JSENCODE(user_locale)}'=="pl_PL" || '{!JSENCODE(user_locale)}'=="rm_CH" || '{!JSENCODE(user_locale)}'=="tr_TR" || '{!JSENCODE(user_locale)}'=="de_AT_EURO" || '{!JSENCODE(user_locale)}'=="de_LU_EURO" || '{!JSENCODE(user_locale)}'=="rm")    //   d.m.yy h:mm //d.m.yyyy h:mm //d.m.yyyy hh:mm    //d.mm.yyyy h:mm    //d.mm.yyyy hh:mm   //dd.mm.yyyy h:mm   //dd.mm.yyyy hh:mm done
                    {
                    
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt=' //   d.m.yy h:mm ___d.m.yyyy h:mm _________d.m.yyyy hh:mm   ________d.mm.yyyy h:mm    __________d.mm.yyyy hh:mm   __________dd.mm.yyyy h:mm   _________dd.mm.yyyy hh:mm';
                        datetimeformatnumber=1;
                    }
                    
                    else if('{!JSENCODE(user_locale)}'=="sr" ||  '{!JSENCODE(user_locale)}'=="sr_CS" )   // xxxxxxxxxxxxxxxxx d.m.yyyy. hh.mm done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[.][ ]((0?[0-9]|1[0-9]|2[0-3])[.]([0-5][0-9]|[0-5])))$/;
                        formatt='d.m.yyyy. hh.mm ';
                        datetimeformatnumber=2;
                    }
                    else if('{!JSENCODE(user_locale)}'=="en_IN" || '{!JSENCODE(user_locale)}'=="el" || '{!JSENCODE(user_locale)}'=="el_GR" || '{!JSENCODE(user_locale)}'=="ur_PK" || '{!JSENCODE(user_locale)}'=="ur" || '{!JSENCODE(user_locale)}'=="ms_BN" || '{!JSENCODE(user_locale)}'=="en_AU" || '{!JSENCODE(user_locale)}'=="en_NZ" || '{!JSENCODE(user_locale)}'=="es_CO" || '{!JSENCODE(user_locale)}'=="es_GT" || '{!JSENCODE(user_locale)}'=="es_MX" || '{!JSENCODE(user_locale)}'=="en_CA" || '{!JSENCODE(user_locale)}'=="ms_MY" ||  '{!JSENCODE(user_locale)}'=="ar" || '{!JSENCODE(user_locale)}'=="ar_BH" || '{!JSENCODE(user_locale)}'=="ar_EG" || '{!JSENCODE(user_locale)}'=="ar_JO" || '{!JSENCODE(user_locale)}'=="ar_KW" || '{!JSENCODE(user_locale)}'=="ar_LB" || '{!JSENCODE(user_locale)}'=="ar_SA" || '{!JSENCODE(user_locale)}'=="ar_AE" || '{!JSENCODE(user_locale)}'=="es_CR" || '{!JSENCODE(user_locale)}'=="es_EC" || '{!JSENCODE(user_locale)}'=="es_PY" || '{!JSENCODE(user_locale)}'=="es_PE" || '{!JSENCODE(user_locale)}'=="es_UY" || '{!JSENCODE(user_locale)}'=="es_VE" || '{!JSENCODE(user_locale)}'=="ar_QA")  // xxxxxxxxxxxxxxxxx  d/m/yyyy h:mm a //d/mm/yyyy h:mm a //d/mm/yyyy hh:mm a //dd/mm/yyyy h:mm a //dd/mm/yyyy hh:mm a done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ](((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))[ ](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='// xxxxxxxxxxxxxxxxx  d/m/yyyy h:mm a ______d/mm/yyyy h:mm a _______d/mm/yyyy hh:mm a ________dd/mm/yyyy h:mm a__________dd/mm/yyyy hh:mm a';
                        datetimeformatnumber=3;
                    }
                    else if('{!JSENCODE(user_locale)}'=="nl_BE" || '{!JSENCODE(user_locale)}'=="fr_BE" || '{!JSENCODE(user_locale)}'=="es" || '{!JSENCODE(user_locale)}'=="es_ES" || '{!JSENCODE(user_locale)}'=="in_ID"  || '{!JSENCODE(user_locale)}'=="ca" || '{!JSENCODE(user_locale)}'=="ca_ES" || '{!JSENCODE(user_locale)}'=="en_BB" || '{!JSENCODE(user_locale)}'=="en_BM" || '{!JSENCODE(user_locale)}'=="en_IE" || '{!JSENCODE(user_locale)}'=="en_MY" || '{!JSENCODE(user_locale)}'=="en_NG" || '{!JSENCODE(user_locale)}'=="en_SG" || '{!JSENCODE(user_locale)}'=="en_GB" || '{!JSENCODE(user_locale)}'=="fr" || '{!JSENCODE(user_locale)}'=="fr_FR" || '{!JSENCODE(user_locale)}'=="fr_LU" || '{!JSENCODE(user_locale)}'=="fr_MC" || '{!JSENCODE(user_locale)}'=="pt_BR" || '{!JSENCODE(user_locale)}'=="es_AR" || '{!JSENCODE(user_locale)}'=="mt_MT" || '{!JSENCODE(user_locale)}'=="cy_GB" || '{!JSENCODE(user_locale)}'=="ga_IE" || '{!JSENCODE(user_locale)}'=="en_GH" || '{!JSENCODE(user_locale)}'=="en_ID" || '{!JSENCODE(user_locale)}'=="ca_ES_EURO" || '{!JSENCODE(user_locale)}'=="en_IE_EURO" || '{!JSENCODE(user_locale)}'=="fr_FR_EURO" || '{!JSENCODE(user_locale)}'=="mt" || '{!JSENCODE(user_locale)}'=="cy")   // xxxxxxxxxxxxxxxxx    d/mm/yyyy h:mm //  dd/mm/yyyy h:mm   // dd/mm/yyyy hh:mm  done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='// xxxxxxxxxxxxxxxxx    d/mm/yyyy h:mm____  dd/mm/yyyy h:mm  ___________dd/mm/yyyy hh:mm';
                        datetimeformatnumber=4;
                    }
                    else if('{!JSENCODE(user_locale)}'=="zh_SG" )     // xxxxxxxxxxxxxxxxx        dd/mm/yyyy a hh:mm   done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((AM|PM|am|pm|Am|aM|pM|Pm)[ ]((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))))$/;
                        formatt=' dd/mm/yyyy a hh:mm';
                        datetimeformatnumber=5;
                    }
                    else if('{!JSENCODE(user_locale)}'=="it" || '{!JSENCODE(user_locale)}'=="it_IT" )       // xxxxxxxxxxxxxxxxx        dd/mm/yyyy h.mm  done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[.]([0-5][0-9]|[0-5])))$/;
                        formatt='dd/mm/yyyy h.mm';
                        datetimeformatnumber=6;
                    }
                    else if('{!JSENCODE(user_locale)}'=="hr_HR" || '{!JSENCODE(user_locale)}'=="sh" || '{!JSENCODE(user_locale)}'=="sh_BA" || '{!JSENCODE(user_locale)}'=="sh_CS" || '{!JSENCODE(user_locale)}'=="bs_BA" || '{!JSENCODE(user_locale)}'=="sh_ME"  || '{!JSENCODE(user_locale)}'=="bs" )      // xxxxxxxxxxxxxxxxx       dd.mm.yyyy. hh:mm   done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[.][ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='dd.mm.yyyy. hh:mm';
                        datetimeformatnumber=7;
                    }
                   else if('{!JSENCODE(user_locale)}'=="zh" || '{!JSENCODE(user_locale)}'=="zh_CN")   // xxxxxxxxxxxxxxxxx   yyyy-m-d ah:mm  done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[-]((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[-](0?2)[-]29))[ ]((AM|PM|am|pm|Am|aM|pM|Pm)((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))))$/;
                        formatt='yyyy-m-d ah:mm';
                        datetimeformatnumber=8;
                    }
                    else if('{!JSENCODE(user_locale)}'=="be_BY" )     // xxxxxxxxxxxxxxxxx d.m.yyyy h.mm   done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|((31[.]((0?[13578])|(1[02])))|((29|30)[.]((0?[1,3-9])|(1[0-2])))))[.](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[.](0?2)[.]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[.]([0-5][0-9]|[0-5])))$/;
                        formatt='d.m.yyyy h.mm';
                        datetimeformatnumber=9;
                    }
                    else if('{!JSENCODE(user_locale)}'=="pt" || '{!JSENCODE(user_locale)}'=="pt_AO"   || '{!JSENCODE(user_locale)}'=="pt_PT" || '{!JSENCODE(user_locale)}'=="da" || '{!JSENCODE(user_locale)}'=="da_DK" || '{!JSENCODE(user_locale)}'=="nl" || '{!JSENCODE(user_locale)}'=="nl_NL" || '{!JSENCODE(user_locale)}'=="nl_SR" )     // xxxxxxxxxxxxxxxxx      dd-mm-yyyy h:mm // dd-mm-yyyy hh:mm    //d-m-yyyy h:mm     done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[-]((0?[1-9])|(1[0-2])))|((31[-]((0?[13578])|(1[02])))|((29|30)[-]((0?[1,3-9])|(1[0-2])))))[-](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[-](0?2)[-]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='dd-mm-yyyy h:mm ________ dd-mm-yyyy hh:mm   ________    d-m-yyyy h:mm';
                        datetimeformatnumber=10;
                    }
                    else if('{!JSENCODE(user_locale)}'=="es_BO" || '{!JSENCODE(user_locale)}'=="es_CL")    // xxxxxxxxxxxxxxxxx      dd-mm-yyyy hh:mm a  done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1\d)|(2[0-8]))[-]((0?[1-9])|(1[0-2])))|((31[-]((0?[13578])|(1[02])))|((29|30)[-]((0?[1,3-9])|(1[0-2])))))[-](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[-](0?2)[-]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ](((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))[ ](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='dd-mm-yyyy hh:mm a';
                        datetimeformatnumber=11;
                    }
                    else if('{!JSENCODE(user_locale)}'=="hy_AM" || '{!JSENCODE(user_locale)}'=="hy")      // xxxxxxxxxxxxxxxxx      m/d/yyyy h:mm //mm/dd/yyyy hh:mm    done locale_inf  ky_KG 
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30)))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|((0?2)[/]29[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt=' m/d/yyyy h:mm ______mm/dd/yyyy hh:mm ';
                        datetimeformatnumber=12;
                    }
                    else if('{!JSENCODE(user_locale)}'=="ky_KG" || '{!JSENCODE(user_locale)}'=="en_PH" || '{!JSENCODE(user_locale)}'=="en_US" || '{!JSENCODE(user_locale)}'=="tl" || '{!JSENCODE(user_locale)}'=="tl_PH" || '{!JSENCODE(user_locale)}'=="en_PK" || '{!JSENCODE(user_locale)}'=="lb_LU" || '{!JSENCODE(user_locale)}'=="tg_TJ" || '{!JSENCODE(user_locale)}'=="lb" || '{!JSENCODE(user_locale)}'=="es_DO" || '{!JSENCODE(user_locale)}'=="es_PA"  )       // xxxxxxxxxxxxxxxxx      m/d/yyyy h:mm a // mm/dd/yyyy hh:mm a    done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30)))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|((0?2)[/]29[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ](((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))[ ](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='m/d/yyyy h:mm a _________ mm/dd/yyyy hh:mm a';
                        datetimeformatnumber=13;
                    }
                    else if('{!JSENCODE(user_locale)}'=="iw" || '{!JSENCODE(user_locale)}'=="iw_IL" || '{!JSENCODE(user_locale)}'=="vi" || '{!JSENCODE(user_locale)}'=="vi_VN" )    // xxxxxxxxxxxxxxxxx      hh:mm dd/mm/yyyy   done
                    {
                        regexfordatematching=/^(((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5]))[ ]((((((0?[1-9])|(1\d)|(2[0-8]))[/]((0?[1-9])|(1[0-2])))|((31[/]((0?[13578])|(1[02])))|((29|30)[/]((0?[1,3-9])|(1[0-2])))))[/](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|(29[/](0?2)[/]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26]))))))$/;
                        formatt='hh:mm dd/mm/yyyy';
                        datetimeformatnumber=14;
                    }
                   else if('{!JSENCODE(user_locale)}'=="es_SV" || '{!JSENCODE(user_locale)}'=="es_HN" || '{!JSENCODE(user_locale)}'=="es_PR" )     // xxxxxxxxxxxxxxxxx    mm-dd-yyyy hh:mm a done
                    {
                        regexfordatematching=/^(((((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30)))[-](((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9])))|((0?2)[-]29[-]((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))))[ ](((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))[ ](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='mm-dd-yyyy hh:mm a';
                        datetimeformatnumber=15;
                    }
                    else if('{!JSENCODE(user_locale)}'=="lv_LV"  || '{!JSENCODE(user_locale)}'=="lv")     // xxxxxxxxxxxxxxxxx yyyy.d.m hh:mm  done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1\d)|(2[0-8]))[.]((0?[1-9])|(1[0-2])))|(31[.]((0?[13578])|(1[02])))|(((0?[1,3-9])|(1[0-2]))[.](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.]29[.](0?2)))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy.d.m hh:mm';
                        datetimeformatnumber=16;
                    }
                    else if('{!JSENCODE(user_locale)}'=="ko" || '{!JSENCODE(user_locale)}'=="ko_KR" )    // xxxxxxxxxxxxxxxxx   yyyy. m. d a h:mm    done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.][ ]((((0?[1-9])|(1[0-2]))[.][ ]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.][ ]31)|(((0?[1,3-9])|(1[0-2]))[.][ ](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.][ ](0?2)[.][ ]29))[ ]((AM|PM|am|pm|Am|aM|pM|Pm)[ ]((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))))$/;
                        formatt='yyyy. m. d a h:mm';
                        datetimeformatnumber=17;
                    }
                    else if('{!JSENCODE(user_locale)}'=="lt_LT")    // xxxxxxxxxxxxxxxxx yyyy.m.d hh.mm    done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1[0-2]))[.]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.]31)|(((0?[1,3-9])|(1[0-2]))[.](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.](0?2)[.]29))[ ]((0?[0-9]|1[0-9]|2[0-3])[.]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy.m.d hh.mm';
                        datetimeformatnumber=18;
                    }
                    else if('{!JSENCODE(user_locale)}'=="ja" || '{!JSENCODE(user_locale)}'=="ja_JP"  || '{!JSENCODE(user_locale)}'=="in"  || '{!JSENCODE(user_locale)}'=="ga" || '{!JSENCODE(user_locale)}'=="ms")     // xxxxxxxxxxxxxxxxx yyyy/mm/dd h:mm  // yyyy/mm/dd hh:mm   done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[/]((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[/](0?2)[/]29))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy/mm/dd h:mm  _______________ yyyy/mm/dd hh:mm';
                        datetimeformatnumber=19;
                    }
                    else if('{!JSENCODE(user_locale)}'=="hu_HU" || '{!JSENCODE(user_locale)}'=="hu" )    // xxxxxxxxxxxxxxxxx yyyy.mm.dd. h:mm   done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1[0-2]))[.]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.]31)|(((0?[1,3-9])|(1[0-2]))[.](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.](0?2)[.]29))[.][ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy.mm.dd. h:mm';
                        datetimeformatnumber=20;
                    }
                    else if('{!JSENCODE(user_locale)}'=="zh_TW")     // xxxxxxxxxxxxxxxxx yyyy/m/d a h:mm  done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[/]((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[/](0?2)[/]29))[ ]((AM|PM|am|pm|Am|aM|pM|Pm)[ ]((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))))$/;
                        formatt='yyyy/m/d a h:mm ';
                        datetimeformatnumber=21;
                    }
                    else if('{!JSENCODE(user_locale)}'=="bg" || '{!JSENCODE(user_locale)}'=="bg_BG" || '{!JSENCODE(user_locale)}'=="fr_CA" || '{!JSENCODE(user_locale)}'=="ka" || '{!JSENCODE(user_locale)}'=="ka_GE" || '{!JSENCODE(user_locale)}'=="pl" || '{!JSENCODE(user_locale)}'=="sr_BA" || '{!JSENCODE(user_locale)}'=="sv" || '{!JSENCODE(user_locale)}'=="sv_SE" || '{!JSENCODE(user_locale)}'=="az_AZ" || '{!JSENCODE(user_locale)}'=="eu_ES" || '{!JSENCODE(user_locale)}'=="eu")    // xxxxxxxxxxxxxxxxx    yyyy-m-d h:mm // yyyy-mm-dd hh:mm  done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[-]((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[-](0?2)[-]29))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy-m-d h:mm _________________yyyy-mm-dd hh:mm';
                        datetimeformatnumber=22;
                    }
                    else if('{!JSENCODE(user_locale)}'=="hr")      // xxxxxxxxxxxxxxxxx     yyyy.mm.dd hh:mm   done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[.]((((0?[1-9])|(1[0-2]))[.]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[.]31)|(((0?[1,3-9])|(1[0-2]))[.](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[.](0?2)[.]29))[ ]((0?[0-9]|1[0-9]|2[0-3])[:]([0-5][0-9]|[0-5])))$/;
                        formatt='yyyy.mm.dd hh:mm';
                        datetimeformatnumber=23;
                    }
                    else if('{!JSENCODE(user_locale)}'=="en_ZA")    // xxxxxxxxxxxxxxxxx yyyy/mm/dd hh:mm a        done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[/]((((0?[1-9])|(1[0-2]))[/]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[/]31)|(((0?[1,3-9])|(1[0-2]))[/](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[/](0?2)[/]29))[ ](((0?[1-9]|1[0-2])[:]([0-5][0-9]|[0-5]))[ ](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='yyyy/mm/dd hh:mm a';
                        datetimeformatnumber=24;
                    }
                    else if('{!JSENCODE(user_locale)}'=="sq_AL" || '{!JSENCODE(user_locale)}'=="sq")      // xxxxxxxxxxxxxxxxx   yyyy-mm-dd h.mm.a   done
                    {
                        regexfordatematching=/^((((((19[0-9]{2})|([23][0-9]{3})|4000)|([0-9][0-9]))[-]((((0?[1-9])|(1[0-2]))[-]((0?[1-9])|(1\d)|(2[0-8])))|(((0?[13578])|(1[02]))[-]31)|(((0?[1,3-9])|(1[0-2]))[-](29|30))))|(((19(([0][48])|([2468][048])|([13579][26])))|(((2[048])|(3[26]))[0]{2})|([23][0-9][0][48])|([23][0-9](([2468][048])|([13579][26])))|4000|(([0][48])|([2468][048])|([13579][26])))[-](0?2)[-]29))[ ](((0?[1-9]|1[0-2])[.]([0-5][0-9]|[0-5]))[.](AM|PM|am|pm|Am|aM|pM|Pm)))$/;
                        formatt='yyyy-mm-dd h.mm.a';
                        datetimeformatnumber=25;
                    }
                    else
                    {
                        regexfordatematching='false';
                    }
                    return regexfordatematching;
                }
                <!-------------------------------------------- Date Time Format Validator Ends------------------------------------------------------------->
                function specialCharCheck(MainFldData)
                {
                    var recCellVal=MainFldData;
                    if(recCellVal != null){
                        var myRegExp = new RegExp('<' ,'gi');
                        recCellVal = recCellVal.replace(myRegExp,'&#60;');
                        myRegExp = new RegExp('>' ,'gi');
                        recCellVal = recCellVal.replace(myRegExp,'&gt;');
                    }
                    recCellVal;
                    return recCellVal
                    
                }
                <!----------------------Additional Function For wrench Required Fields Starts------------------------------------------>
                function checkWrenchIcon_field(PageName)
                {
                   try
                    {
                        Namespaceprefix1 = Namespaceprefix1;
                        var querySoql;
                        if(PageName=='CMF')
                        {
                            querySoql = "Select name,Account.name from Contact limit 1";
                        }
                        else if(PageName=='CMF_PFC' || PageName=='CMF_PFA')
                        {
                            querySoql = "Select name from "+Namespaceprefix1+"Fundraising__c limit 1";
                        }
                        var queryResult = sforce.connection.query(querySoql);
                        return false;
                    }
                    catch(ex)
                    {
                        return true;
                    }
                }
                <!-------------------Additional Function For wrench Required Fields  Ended--------------------------------------------->
                <!--------------------------------------Advance filter logic Started--------------------------------------------------->
                if(glblTabId != 'AllContTabId')
                {
                    var table = document.getElementById('accounttablerow');                      
                    var rowCount = table.rows.length;
                    function clear_filterADD()
                    {
                        
                        addfilter=1;    
                        blnAdvanceFilterClicked = true;             
                        document.getElementById('j_id0:CreateFundraisingFormId:cmdlink').style.display='none';        
                        document.getElementById('addFilterlogic').style.display='block'; 
                        document.getElementById('j_id0:CreateFundraisingFormId:clearfilter_1').style.display='block'; 
                        for(i=0;i<CustomFilterRowId.length;i++){
                            if(i==0){
                                document.getElementById('tab_showCond').style.visibility='hidden'; 
                            }
                            else
                                document.getElementById('tab_showCond'+CustomFilterRowId[i]).style.visibility='hidden'; 
                        }             
                    }
                    function check_value() 
                    {
                         var statusfrallfilterconditionsdefined=true;
                         var filter_logic_status=true;
                         var blnChckvalMethod=true;
                         if(filterstr!=null)
                         {
                             
                             if(filterstr.length>0)
                             {
                                 statusfrallfilterconditionsdefined=checkallfilterconditionsdefined(filterstr);
                                 if(statusfrallfilterconditionsdefined == true)
                                 {
                                    filter_logic_status=callsubstrcheck(filterstr);
                                 }                                                            
                             }
                         }
                        
                        if(filterstr.length==0)
                        {
                          document.getElementById('filterErrorvalidation').style.display="none"; 
                          //document.getElementById('{!$Component.j_id0:CreateFundraisingFormId:www}').style.display="none"; 
                          document.getElementById('filtererrfracc_conreferenced').style.display='none'; 
                          document.getElementById('j_id0:CreateFundraisingFormId:cmdlink').style.display='block';       
                          document.getElementById('addFilterlogic').style.display='none'; 
                          document.getElementById('j_id0:CreateFundraisingFormId:clearfilter_1').style.display='none';          
                          document.getElementById('j_id0:CreateFundraisingFormId:textfilt').value='';
                          hide_filterlogicerror();
                        }
                        <!-- validation for filter row  --> 
                                                
                        if(statusfrallfilterconditionsdefined==true)
                        {
                            if(filter_logic_status==false )
                            {
                                document.getElementById('filterErrorvalidation').innerHTML="Your filter logic is imprecise or incorrect. Please use correct format for <br/> filter logic. e.g.- 1 AND 2 , 1 OR 2, (1 OR 2) AND 3 etc."; 
                                document.getElementById('filterErrorvalidation').style.display="block";
                                document.getElementById('filtererrfracc_conreferenced').style.display='none';  
                                document.getElementById('blurred').style.display="none";
                                blnChckvalMethod= false;                            
                            }
                            else
                            {
                                blnChckvalMethod= true;
                            }
                        }
                        else
                        {
                            filter_logic_status=callsubstrcheck(filterstr);
                            if(filter_logic_status)
                            {
                                document.getElementById('filterErrorvalidation').style.display = 'none';
                                document.getElementById('filtererrfracc_conreferenced').style.display="block";
                                document.getElementById('blurred').style.display="none";
                                blnChckvalMethod= false;
                            }
                            else
                            {
                                document.getElementById('filterErrorvalidation').innerHTML="Your filter logic is imprecise or incorrect. Please use correct format for <br/> filter logic. e.g.- 1 AND 2 , 1 OR 2, (1 OR 2) AND 3 etc."; 
                                document.getElementById('filterErrorvalidation').style.display="block";
                                document.getElementById('filtererrfracc_conreferenced').style.display='none'; 
                                document.getElementById('blurred').style.display="none";                            
                                blnChckvalMethod= false;
                            }
                        }
                        return blnChckvalMethod;
                    }
                    
                    function checkallfilterconditionsdefined(flterstr1,searchtype)//function to check filter condition syntax
                    {
                        var filtrst=flterstr1;
                        var numb = filtrst.match(/\d{1,2}/g);
                        if(numb == null)
                        {
                          numb=new Array();
                        }
                        var statuss=true;
                        var nwArrwithnofrAcc=new Array();
                        var nwArrwithdata=new Array();
                        
                        for(i=0;i<CustomFilterRowId.length;i++){
                            var fieldLabel = document.getElementById('a'+CustomFilterRowId[i]+'aa').value;
                            var fieldData = 'None';
                            if(fieldLabel != '')
                            {
                              fieldData = arryAccountContactApiLabel[fieldLabel]
                            }
                            if (fieldData=='' || fieldData== undefined || fieldData== null)
                            {
                                fieldData= 'None';
                            }
                            nwArrwithdata.push(fieldData);
                        }
                        
                        var j=0;
                            for(var i=0;i<nwArrwithdata.length;i++)
                            {
                                if(nwArrwithdata[i] !='None')
                                {
                                    nwArrwithnofrAcc[j]=i+1;
                                    j++;
                                }
                            }
                        var st=false;
                        for(var a=0;a<nwArrwithnofrAcc.length;a++)
                        {
                            for(var b=0;b<numb.length;b++)
                            {
                                st=false;
                                if(nwArrwithnofrAcc[a].toString() == numb[b])
                                {
                                   st=true;
                                   break;
                                }        
                            }
                           if(st == false)
                            {
                                break;
                            }
                           
                        }
                        if(st == false)
                        {
                        }
                        statuss=st;
                        return statuss;
                    }
                    function hide_filterlogicerror() // when user click on Clear filter logic
                    {
                          addfilter=0;
                          blnAdvanceFilterClicked   = false;
                          finalfiltr=[];
                          document.getElementById('filtererrfracc_conreferenced').style.display='none'; 
                          //document.getElementById('{!$Component.j_id0:CreateFundraisingFormId:www}').style.display="none"; 
                          document.getElementById('filterErrorvalidation').style.display="none";  
                          document.getElementById('j_id0:CreateFundraisingFormId:cmdlink').style.display='block';       
                          document.getElementById('addFilterlogic').style.display='none'; 
                          document.getElementById('j_id0:CreateFundraisingFormId:clearfilter_1').style.display='none';          
                          document.getElementById('j_id0:CreateFundraisingFormId:textfilt').value='';
                        for(i=0;i<CustomFilterRowId.length;i++){
                            if(i==0){
                                document.getElementById('tab_showCond').style.visibility='visible';
                            }
                            else
                                document.getElementById('tab_showCond'+CustomFilterRowId[i]).style.visibility='visible';
                        }
                          
                    }
                    function callsubstrcheck(filtrstrtotest)//function to check filter condition syntax
                    {
                        var status=true;
                        var filterstrng=filtrstrtotest.toLowerCase();
                        status=checkfilterlogicfrParenthesis(filterstrng);
                        var trmfilterstrng=filtrstrtotest.toLowerCase().replace(/\(/gi, "").replace(/\)/gi, "");
                        var chckparan=filtrstrtotest.toLowerCase();
                        trmfilterstrng=trim(trmfilterstrng);
                        filterstrng='('+filterstrng+')';
                        if(status == true)
                        {
                            if(trmfilterstrng.length>1 && ( trmfilterstrng != '10' ))
                            {
                                status=substrcheck(filterstrng);   
                            }
                            else if(trmfilterstrng == '1' || trmfilterstrng == '2' || trmfilterstrng =='3' || trmfilterstrng == '4' || trmfilterstrng == '5' || trmfilterstrng =='6' || trmfilterstrng == '7' || trmfilterstrng == '8' || trmfilterstrng =='9' || trmfilterstrng == '10' || (trmfilterstrng.length == 0 && chckparan.search(/\(/gi) ==-1 && chckparan.search(/\)/gi) ==-1))
                            {
                                status=true;
                            }   
                            else
                            {
                                status=false;   
                            } 
                        }
                        return status;
                    }       
                    function checkfilterlogicfrParenthesis(filterstr)//function to check filter condition syntax
                    {
                        var str=filterstr.toLowerCase();
                        var paranthesesck=new Array();
                        var status=true;
                        for(var i=0;i<str.length;i++)
                        {
                            if(str.charAt(i)== '(')
                                paranthesesck.push(str.charAt(i));
                            if(str.charAt(i)== ')')
                            {
                                if(paranthesesck.length>0)
                                    paranthesesck.pop();
                                else
                                {
                                    status=false;  
                                    break;
                                }      
                            }    
                        }
                        if(paranthesesck.length>0 || status ==false)
                        {
                            status=false;   
                        }   
                        else 
                        {
                        }       
                        return status; 
                    }
                    function substrcheck(chckstr) //function to check filter condition syntax
                    {
                        var str=chckstr;
                        var clseindx;
                        var opnindx;
                        for(var i=0;i<str.length;i++)
                        {
                            if(str.charAt(i)== ')')
                            {       
                            clseindx=i;
                            break;
                            }
                        }
                        for(var j=clseindx;j>=0;j--)
                        {
                            if(str.charAt(j)== '(')
                            {        
                            opnindx=j;
                            break;
                            }
                        }
                        var substr=str.substring(j+1,i)
                        var starstr=str.substring(0,j);
                        var endrstr=str.substring(i+1);
                        var stat=true;
                        if(trim(substr).length == 0)
                        {
                            stat=false;
                        }
                        if(stat==true && substr!=' 1 ') 
                        {
                            stat=checkfilterwithoutparentheses(substr);        
                        }
                        
                        if(stat == true)
                        {
                            var nwstr1=starstr+' 1 '+endrstr;
                            if(nwstr1 !=' 1 ')
                            {
                                stat = substrcheck(nwstr1); 
                            }
                            else
                            {
                                stat = true;
                                
                            }
                        }
                        else
                        {
                          stat =false;                
                        }

                        return stat;
                    }    
                    function checkfilterwithoutparentheses(strtotest)//function to check filter condition syntax
                    {
                    var nwstr=strtotest;
                    var strarry=new Array();
                    var finalstrarry=new Array();
                    strarry=nwstr.split(' ');
                    var status=true;
                    var l=0;
                    for(var k=0;k<strarry.length;k++)
                    {    
                        if(strarry[k]=='1' || strarry[k]=='2' || strarry[k]=='3' || strarry[k]=='4' || strarry[k]=='5' || strarry[k]=='6' || strarry[k]=='7' || strarry[k]=='8' || strarry[k]=='9' || strarry[k]=='10')
                        {
                            finalstrarry[l]='number';
                            l++;
                        }
                        else if(strarry[k]=='and' || strarry[k]=='or' )
                        {
                            finalstrarry[l]='operator';
                            l++;
                        }
                        else if(strarry[k]=='not')
                        {
                            finalstrarry[l]='not';
                            l++;
                        }
                        else if(strarry[k]=='(' || strarry[k]==')' || trim(strarry[k]).length == 0) // Make Use Of Trim Here
                            {
                            }
                        else
                            {
                                status=false;
                                break;
                            }   
                    }
                        if(status==false)
                        {
                        }   
                        else
                        {
                            for(var m=0;m<finalstrarry.length;m++)
                            {
                                if(m>0 && m<finalstrarry.length-1)
                                {
                                    if(finalstrarry[m]=='number' && finalstrarry[m+1]=='operator' && (finalstrarry[m-1]=='not' || finalstrarry[m-1] == 'operator'))
                                    {
                                        status=true;
                                    }
                                    else if(finalstrarry[m]=='operator' && finalstrarry[m-1]=='number' && (finalstrarry[m+1]=='not' || finalstrarry[m+1] == 'number'))
                                    {
                                        status=true;
                                    }
                                    else if(finalstrarry[m]=='not' && (finalstrarry[m-1]=='not' || finalstrarry[m-1]=='operator') && (finalstrarry[m+1]=='number' || finalstrarry[m+1] == 'not'))
                                    {
                                        status=true;
                                    }
                                    else
                                    {
                                        status=false;
                                        break;
                                    }
                                }
                                else if(m == 0)
                                {
                                    if(finalstrarry[m]=='number' && finalstrarry[m+1]=='operator')
                                    {
                                        status=true;
                                    }
                                    else if(finalstrarry[m]=='operator')
                                    {
                                        status=false;
                                        break;
                                    }
                                    else if(finalstrarry[m]=='not'  && (finalstrarry[m+1]=='number' || finalstrarry[m+1] == 'not'))
                                    {
                                        status=true;
                                    }
                                    else
                                    {
                                        status=false;
                                        break;
                                    }                              
                                }
                                else if(m == finalstrarry.length-1)
                                {
                                    if(finalstrarry[m]=='number' && (finalstrarry[m-1]=='not' || finalstrarry[m-1] == 'operator'))
                                    {
                                        status=true;
                                    }
                                    else if(finalstrarry[m]=='operator')
                                    {
                                        status=false;
                                        break;
                                    }
                                    else if(finalstrarry[m]=='not' )
                                    {
                                        status=false;
                                        break;
                                    }
                                    else
                                    {
                                        status=false;
                                        break;
                                    }
                                }
                            }
                        }   
                    return status;
                    }
                    function isNumber(n) {
                      return !isNaN(parseFloat(n)) && isFinite(n);
                    }
                    function FilterValCheck(filterstr)
                    {
                        if(filterstr!='') //Check for undefined filter row in filter logic text box 
                        {
                            FlagVal = 1;
                            var finalfiltrlst= new Array();
                            var FiltrAddedRows= new Array();
                            finalfiltrlst=[];
                            FiltrAddedRows=[];
                            finalfiltrlst=chckFilter(filterstr);
                            blnFilterValCheck=true;
                            for(k=0;k<finalfiltrlst.length;k++)
                            {
                                var blnIsNumberVal=isNumber(finalfiltrlst[k])
                                if(blnIsNumberVal)
                                {
                                    FiltrAddedRows.push(finalfiltrlst[k]);
                                }
                            }
                            document.getElementById('filterErrorvalidation').style.display='none';
                            for(i=0;i<FiltrAddedRows.length;i++)
                            {
                                for(j=0;j<finalfiltrlst.length;j++)
                                {
                                    if(finalfiltrlst[j]== ""+FiltrAddedRows[i])
                                    {
                                      var labelField = document.getElementById('a'+CustomFilterRowId[i]+'aa');
                                        if(labelField!=null && labelField!='')
                                        {
                                          var getField = 'None';
                                          
                                          if(labelField.value != '')
                                            getField = arryAccountContactApiLabel[labelField.value];
                                            if (getField=='' || getField== undefined || getField== null)
                                            {
                                                getField= 'None';
                                            }
                                            if(getField =='None' )
                                            {
                                                document.getElementById('blurred').style.display='none';
                                                document.getElementById('filterErrorvalidation').innerHTML='The filter logic references an undefined filter: '+(i+1)+'.';
                                                document.getElementById('filterErrorvalidation').style.display='block';
                                                blnFilterValCheck=false;
                                            }
                                            
                                        }
                                        else
                                        {
                                            document.getElementById('blurred').style.display='none';
                                            document.getElementById('filterErrorvalidation').innerHTML='The filter logic references an undefined filter: '+FiltrAddedRows[i]+'.';
                                            document.getElementById('filterErrorvalidation').style.display='block';
                                            blnFilterValCheck=false;
                                        }
                                    }
                                    
                                }
                            }
                        }
                        return blnFilterValCheck;
                        
                    }
                    
                           
                    function chckFilter(filtertst)
                    {
                        var filtr = new Array();
                        finalfiltr= new Array();
                        var requireddata= new Array();
                        for(i=1;i<=10;i++)
                        {
                            requireddata.push(''+i);
                        }
                        requireddata.push('and');
                        requireddata.push('not');
                        requireddata.push('or');
                        requireddata.push('(');
                        requireddata.push(')');
                        
                        filtertst=filtertst.toLowerCase();
                        filtertst=filtertst.replace(/\(/gi, "( ").replace(/\)/gi, " )").replace('and',' and ').replace('or',' or ').replace('not',' not ');
                        filtr=filtertst.split(' '); 
                        for(i=0;i<filtr.length;i++)
                        {
                            for(j=0;j<requireddata.length;j++)
                            {
                                if(requireddata[j]==filtr[i])
                                {
                                    finalfiltr.push(filtr[i]);
                                }
                            }
                        }           
                        return finalfiltr;
                    }
                }
                <!--------------------------------------Advance filter logic Ended--------------------------------------------------------->
                //This function used for multicurrency value according to user's locale.
                    function getCurrencyValue(isMulticurrency, defaultCurrencySysbol, recordVal, amount, useLocale,objectName){
                        var finalAmount;
                        
                       if(isMulticurrency==true || isMulticurrency =='true'){                  
                            var isoCode;
                            if(objectName == Namespaceprefix1+"Partnership__r") 
                                isoCode = recordVal.get('CurrencyIsoCode');
                            else if(objectName == Namespaceprefix1+"Commitment__c")
                                isoCode = recordVal.get('CurrencyIsoCode');
                                
                                finalAmount =isoCode+' '+parseFloat(amount).toLocaleString(useLocale);
                        }
                        else{
                            finalAmount = parseFloat(amount).toLocaleString(useLocale,{ style: 'currency', currency: defaultCurrencySysbol })
                            
                        }return finalAmount;
                    }
                    function CloseClickedPFC()
                    {
                        SortColIndxPFC=0;
                        SortHeaderNamePFC='';
                        SortColDrctnPFC='';
                        blnHedrClkdPFC=false;
                        closepopup('fancybox_background','FancyboxContainer');
                    }
                    function setFocusOnInput(textId)
                    {
                        j$('#'+textId).focus();
                    } 
            </script>

        </html>
        </apex:page>